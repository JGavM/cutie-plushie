{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/management/auth-guard.service.ts","webpack:///src/app/management/auth.service.ts","webpack:///src/app/management/customPaginatorLabels.ts","webpack:///src/app/management/management-distributors/management-distributors.component.html","webpack:///src/app/management/management-distributors/management-distributors.component.ts","webpack:///src/app/management/management-home/management-home.component.html","webpack:///src/app/management/management-home/management-home.component.ts","webpack:///src/app/management/management-login/management-login.component.html","webpack:///src/app/management/management-login/management-login.component.ts","webpack:///src/app/management/management-passwordchange/management-passwordchange.component.html","webpack:///src/app/management/management-passwordchange/management-passwordchange.component.ts","webpack:///src/app/management/management-products/management-products.component.html","webpack:///src/app/management/management-products/management-products.component.ts","webpack:///src/app/management/management-register/management-register.component.html","webpack:///src/app/management/management-register/management-register.component.ts","webpack:///src/app/management/management-sales/management-sales.component.html","webpack:///src/app/management/management-sales/management-sales.component.ts","webpack:///src/app/management/management-suppliers/management-suppliers.component.html","webpack:///src/app/management/management-suppliers/management-suppliers.component.ts","webpack:///src/app/management/management.component.html","webpack:///src/app/management/management.component.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","children","redirectTo","pathMatch","canActivate","AppRoutingModule","AppComponent","title","AppModule","AuthGuardService","authService","router","isAuthenticated","navigate","AuthService","token","localStorage","getItem","MatPaginatorIntlEsp","itemsPerPageLabel","nextPageLabel","previousPageLabel","getRangeLabel","page","pageSize","length","Math","max","startIndex","endIndex","min","ManagementDistributorsComponent","ManagementHomeComponent","ManagementLoginComponent","http","formBuilder","submitted","loginForm","group","user","required","minLength","maxLength","password","invalid","validate","controls","value","res","status","body","bodyJson","JSON","parse","stringify","userKey","userName","userLastName","userGroup","setItem","alert","key","btoa","post","observe","responseType","toPromise","catch","err","ManagementPasswordchangeComponent","passwordChangeForm","oldPassword","newPassword","confirmPassword","pattern","removeControl","addControl","changePassword","removeItem","pwdOld","pwdNew","headers","set","put","ManagementProductsComponent","displayedColumns","products","dataSource","isAdmin","userIsAdmin","displayProducts","paginator","sort","event","filterValue","target","filter","trim","toLowerCase","firstPage","details","getProducts","product","console","log","productJson","push","data","get","confirmation","confirm","productDelete","productId","productName","productDescription","productUnitPriceMXN","productIcon","supplier","supplierId","productActiveDiscount","ManagementRegisterComponent","permissionsDictionary","permissions","permission","registerForm","name","lastName","userId","pwd","createNewUser","ManagementSalesComponent","ManagementSuppliersComponent","ManagementComponent","className","replace","environment","production","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { AuthGuardService } from './management/auth-guard.service';\r\n\r\nimport { ManagementComponent } from './management/management.component';\r\nimport { ManagementLoginComponent } from './management/management-login/management-login.component';\r\nimport { ManagementHomeComponent } from './management/management-home/management-home.component';\r\nimport { ManagementRegisterComponent } from './management/management-register/management-register.component';\r\nimport { ManagementSuppliersComponent } from './management/management-suppliers/management-suppliers.component';\r\nimport { ManagementDistributorsComponent } from './management/management-distributors/management-distributors.component';\r\nimport { ManagementSalesComponent } from './management/management-sales/management-sales.component';\r\nimport { ManagementProductsComponent } from './management/management-products/management-products.component';\r\nimport { ManagementPasswordchangeComponent } from './management/management-passwordchange/management-passwordchange.component';\r\n\r\nconst routes: Routes = [\r\n  { \r\n    path: 'management', \r\n    component: ManagementComponent ,\r\n    children: [\r\n      { path: '',   redirectTo: 'login', pathMatch: 'full' },\r\n      { path: 'login', component: ManagementLoginComponent},\r\n      { path: 'home', component: ManagementHomeComponent, canActivate : [AuthGuardService] },\r\n      { path: 'register', component: ManagementRegisterComponent, canActivate : [AuthGuardService] },\r\n      { path: 'suppliers', component: ManagementSuppliersComponent, canActivate : [AuthGuardService] },\r\n      { path: 'distributors', component: ManagementDistributorsComponent, canActivate : [AuthGuardService] },\r\n      { path: 'sales', component: ManagementSalesComponent, canActivate : [AuthGuardService] },\r\n      { path: 'products', component: ManagementProductsComponent, canActivate : [AuthGuardService] },\r\n      { path: 'passwordchange', component: ManagementPasswordchangeComponent, canActivate : [AuthGuardService] }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, {useHash: true})],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }","<router-outlet></router-outlet>","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'cutie-plushie';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule }   from '@angular/forms';\r\nimport { HttpClientModule} from '@angular/common/http';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatPaginatorModule, MatPaginatorIntl } from '@angular/material/paginator';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSortModule } from '@angular/material/sort';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { ManagementComponent } from './management/management.component';\r\nimport { ManagementHomeComponent } from './management/management-home/management-home.component';\r\nimport { ManagementRegisterComponent } from './management/management-register/management-register.component';\r\nimport { ManagementSuppliersComponent } from './management/management-suppliers/management-suppliers.component';\r\nimport { ManagementDistributorsComponent } from './management/management-distributors/management-distributors.component';\r\nimport { ManagementSalesComponent } from './management/management-sales/management-sales.component';\r\nimport { ManagementProductsComponent } from './management/management-products/management-products.component';\r\nimport { ManagementLoginComponent } from './management/management-login/management-login.component';\r\nimport { ManagementPasswordchangeComponent } from './management/management-passwordchange/management-passwordchange.component';\r\n\r\nimport { MatPaginatorIntlEsp } from './management/customPaginatorLabels';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ManagementComponent,\r\n    ManagementLoginComponent,\r\n    ManagementHomeComponent,\r\n    ManagementRegisterComponent,\r\n    ManagementSuppliersComponent,\r\n    ManagementDistributorsComponent,\r\n    ManagementSalesComponent,\r\n    ManagementProductsComponent,\r\n    ManagementPasswordchangeComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSortModule\r\n  ],\r\n  providers: [\r\n    HttpClientModule,\r\n    { provide: MatPaginatorIntl, useClass: MatPaginatorIntlEsp}\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate,Router } from '@angular/router';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuardService implements CanActivate {\r\n\r\n  constructor(private authService : AuthService, private router : Router) { }\r\n\r\n  canActivate(){\r\n    if(this.authService.isAuthenticated()){\r\n      return true;\r\n    }\r\n    this.router.navigate(['management/login']);\r\n    return false;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  constructor() { }\r\n\r\n    public isAuthenticated() : Boolean {\r\n      let token = localStorage.getItem('cutie-plushie-token')\r\n      if(token != null && token != ''){\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { MatPaginatorIntl } from '@angular/material/paginator';\r\n\r\n@Injectable()\r\nexport class MatPaginatorIntlEsp extends MatPaginatorIntl {\r\n  itemsPerPageLabel = 'Productos por página';\r\n  nextPageLabel     = 'Siguiente página';\r\n  previousPageLabel = 'Página anterior';\r\n\r\n  getRangeLabel = function (page, pageSize, length) {\r\n    if (length === 0 || pageSize === 0) {\r\n      return '0 de ' + length;\r\n    }\r\n    length = Math.max(length, 0);\r\n    const startIndex = page * pageSize;\r\n    // If the start index exceeds the list length, do not try and fix the end index to the end.\r\n    const endIndex = startIndex < length ?\r\n      Math.min(startIndex + pageSize, length) :\r\n      startIndex + pageSize;\r\n    return startIndex + 1 + ' - ' + endIndex + ' de ' + length;\r\n  };\r\n\r\n}","<p>management-distributors works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-management-distributors',\r\n  templateUrl: './management-distributors.component.html',\r\n  styleUrls: ['./management-distributors.component.css']\r\n})\r\nexport class ManagementDistributorsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>management-home works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-management-home',\r\n  templateUrl: './management-home.component.html',\r\n  styleUrls: ['./management-home.component.css']\r\n})\r\nexport class ManagementHomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"login-component\">\r\n    <div class=\"form-container\">\r\n        <img\r\n        height=\"120px\"\r\n        alt=\"Logo\"\r\n        src=\"assets/images/cutie_plushie_logo.png\"\r\n        />\r\n        <h2>Bienvenido a Cutie Plushie!</h2>\r\n        <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\r\n            <div class=\"form-group\">\r\n                <label for=\"user\">Clave de usuario</label>\r\n                <input type=\"text\" formControlName=\"user\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && loginForm.controls.user.invalid }\"/>\r\n                <div *ngIf=\"submitted && loginForm.controls.user.invalid\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"submitted && loginForm.controls.user.errors.required\">Por favor ingrese una clave de usuario</div>\r\n                    <div *ngIf=\"submitted && loginForm.controls.user.errors.maxlength\">Su clave de usuario debe tener 9 caracteres alfanuméricos</div>\r\n                    <div *ngIf=\"submitted && loginForm.controls.user.errors.minlength\">Su clave de usuario debe tener 9 caracteres alfanuméricos</div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"password\">Contraseña</label>\r\n                <input type=\"password\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && loginForm.controls.password.invalid }\" />\r\n                <div *ngIf=\"submitted && loginForm.controls.password.invalid\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"submitted && loginForm.controls.password.errors.required\">Por favor ingrese su contraseña</div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <button class=\"btn-login\">\r\n                    Iniciar sesión\r\n                </button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient, HttpResponse, HttpErrorResponse } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-management-login',\r\n  templateUrl: './management-login.component.html',\r\n  styleUrls: ['./management-login.component.css']\r\n})\r\nexport class ManagementLoginComponent implements OnInit {\r\n  loginForm: FormGroup;\r\n  submitted = false;\r\n\r\n  constructor(\r\n    private http: HttpClient, \r\n    private router: Router,\r\n    private formBuilder: FormBuilder\r\n    ) { \r\n      let token = localStorage.getItem('cutie-plushie-token')\r\n      if(token != null){\r\n        this.router.navigate(['management/home']);\r\n      }\r\n\r\n      this.loginForm = this.formBuilder.group({\r\n        user: new FormControl('', [\r\n          Validators.required,\r\n          Validators.minLength(9),\r\n          Validators.maxLength(9)\r\n        ]),\r\n        password: new FormControl('', [\r\n          Validators.required\r\n        ])\r\n      });\r\n    }\r\n\r\n  ngOnInit(): void {\r\n      \r\n  }\r\n\r\n  async onSubmit() {\r\n    this.submitted = true;\r\n    // Stop here if form is invalid\r\n    if (this.loginForm.invalid) {\r\n      //alert(\"Por favor introduzca su usuario y contraseña para poder ingresar.\");}\r\n      \r\n      return;\r\n    }\r\n\r\n    let res = await this.validate(this.loginForm.controls.user.value, this.loginForm.controls.password.value);\r\n    \r\n    if(res.status == 200){\r\n      let body = res.body;\r\n      let bodyJson = JSON.parse(JSON.stringify(body));\r\n      let user = {\r\n        userKey: bodyJson.userKey,\r\n        userName: bodyJson.userName,\r\n        userLastName: bodyJson.userLastName,\r\n        userGroup: bodyJson.userGroup\r\n      }\r\n      let token = bodyJson.token\r\n      localStorage.setItem('cutie-plushie-token',token);\r\n      localStorage.setItem('user-details',JSON.stringify(user));\r\n      this.router.navigate(['management/home']);\r\n    } else if(res.status == 401){\r\n      alert(\"Usuario y/o contraseña incorrectos.\");\r\n    }\r\n  }\r\n\r\n  public validate(key: string, password: string): Promise<HttpResponse<Object>> {\r\n    password = btoa(password);\r\n    return this.http.post(\r\n      '/api/v1/management/login', \r\n      {'key' : key, 'pwd' : password}, \r\n      {observe: 'response', responseType: 'json'}\r\n    ).toPromise().then(function(res) {\r\n      return res;\r\n    }).catch(function(err){ \r\n      return err;\r\n    });\r\n  }\r\n}\r\n","<div class=\"passwordchange-component\">\r\n    <div class=\"form-container\">\r\n        <h1>\r\n            Cambiar contraseña\r\n        </h1>\r\n        <form [formGroup]=\"passwordChangeForm\" (ngSubmit)=\"onSubmit()\">\r\n            <div class=\"form-group\">\r\n                <label for=\"oldPassword\">Contraseña anterior</label>\r\n                <input type=\"password\" formControlName=\"oldPassword\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted &&  passwordChangeForm.controls.oldPassword.invalid }\" />\r\n                <div *ngIf=\"submitted &&  passwordChangeForm.controls.oldPassword.invalid\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"submitted &&  passwordChangeForm.controls.oldPassword.errors.required\">\r\n                        Por favor ingrese su contraseña anterior\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"newPassword\">Contraseña nueva</label>\r\n                <input type=\"password\" formControlName=\"newPassword\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted &&  passwordChangeForm.controls.newPassword.invalid }\" />\r\n                <div *ngIf=\"submitted &&  passwordChangeForm.controls.newPassword.invalid\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"submitted &&  passwordChangeForm.controls.newPassword.errors.required\">\r\n                        Por favor ingrese su nueva contraseña\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"confirmPassword\">Confirmar contraseña nueva</label>\r\n                <input type=\"password\" formControlName=\"confirmPassword\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted &&  passwordChangeForm.controls.confirmPassword.invalid }\" />\r\n                <div *ngIf=\"submitted &&  passwordChangeForm.controls.confirmPassword.invalid\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"submitted &&  passwordChangeForm.controls.confirmPassword.errors.required\">\r\n                        Por favor confirme su nueva contraseña\r\n                    </div>\r\n                    <div *ngIf=\"submitted &&  passwordChangeForm.controls.confirmPassword.errors.pattern\">\r\n                        La contraseña no coincide con su nueva contraseña\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <button class=\"btn-passwordchange\">\r\n                    Cambiar mi contraseña\r\n                </button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient, HttpResponse, HttpHeaders } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-management-passwordchange',\r\n  templateUrl: './management-passwordchange.component.html',\r\n  styleUrls: ['./management-passwordchange.component.css']\r\n})\r\nexport class ManagementPasswordchangeComponent implements OnInit {\r\n  passwordChangeForm: FormGroup;\r\n  submitted = false;\r\n\r\n  constructor(\r\n    private http: HttpClient, \r\n    private router: Router,\r\n    private formBuilder: FormBuilder\r\n    ) {\r\n      this.passwordChangeForm = this.formBuilder.group({\r\n        oldPassword: new FormControl('', [\r\n          Validators.required\r\n        ]),\r\n        newPassword: new FormControl('', [\r\n          Validators.required\r\n        ]),\r\n        confirmPassword: new FormControl('', [\r\n          Validators.required,\r\n          Validators.pattern(\"^$\")\r\n        ])\r\n      });\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n    }\r\n\r\n    async onSubmit() {\r\n      this.submitted = true;\r\n      let value = this.passwordChangeForm.controls.confirmPassword.value;\r\n\r\n      this.passwordChangeForm.removeControl(\"confirmPassword\");\r\n      this.passwordChangeForm.addControl(\"confirmPassword\",\r\n        new FormControl(value, [\r\n          Validators.required,\r\n          Validators.pattern(\"^\"+this.passwordChangeForm.controls.newPassword.value+\"$\")\r\n        ])\r\n      )\r\n      // Stop here if form is invalid\r\n      if (this.passwordChangeForm.invalid) {\r\n        return;\r\n      }\r\n  \r\n      let res = await this.changePassword(this.passwordChangeForm.controls.oldPassword.value, this.passwordChangeForm.controls.newPassword.value);\r\n      \r\n      if(res.status == 200) {\r\n        let body = res.body;\r\n        let bodyJson = JSON.parse(JSON.stringify(body));\r\n        let token = bodyJson.token\r\n        localStorage.setItem('cutie-plushie-token',token);\r\n        alert('Su contraseña se ha cambiado con éxito!');\r\n        this.router.navigate(['management/home']);\r\n      } else if(res.status == 401) {\r\n        alert('Sus credenciales han expirado. Por favor inicie sesión de nuevo.');\r\n        localStorage.removeItem('cutie-plushie-token');\r\n        localStorage.removeItem('user-details');\r\n        this.router.navigate(['management/login']);\r\n      } else if(res.status == 403) {\r\n        alert(\"Su contraseña anterior no coincide con los registros. Por favor intente de nuevo.\");\r\n      }\r\n    }\r\n  \r\n    public changePassword(pwdOld: string, pwdNew: string): Promise<HttpResponse<Object>> {\r\n      let user = JSON.parse(localStorage.getItem('user-details')).userKey;\r\n      let token = localStorage.getItem('cutie-plushie-token');\r\n\r\n      pwdOld = btoa(pwdOld);\r\n      pwdNew = btoa(pwdNew)\r\n\r\n      const headers = new HttpHeaders()\r\n            .set(\"Authorization\", \"Bearer \" + token);\r\n\r\n      return this.http.put(\r\n        '/api/v1/management/users/' + user, \r\n        {'pwdOld' : pwdOld, 'pwdNew' : pwdNew}, \r\n        {headers: headers, observe: 'response', responseType: 'json'}\r\n      ).toPromise().then(function(res) {\r\n        return res;\r\n      }).catch(function(err){ \r\n        return err;\r\n      });\r\n    }\r\n\r\n}\r\n","<div class=\"products-component\">\r\n    <div class=\"table-container\">\r\n        <h1>\r\n            Productos\r\n        </h1>\r\n\r\n        <mat-form-field>\r\n            <input class=\"filter-box\" matInput (keyup)=\"applyFilter($event)\" placeholder=\"Buscar...\"/>\r\n        </mat-form-field>\r\n        <button class=\"btn-create\" (click)=\"createProduct()\">\r\n            Agregar producto\r\n        </button>\r\n\r\n        <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\" matSort>\r\n\r\n            <ng-container matColumnDef=\"productId\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\r\n              <td mat-cell *matCellDef=\"let product\"> {{product.productId}} </td>\r\n            </ng-container>\r\n          \r\n            <ng-container matColumnDef=\"productName\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Nombre </th>\r\n              <td mat-cell *matCellDef=\"let product\"> {{product.productName}} </td>\r\n            </ng-container>\r\n          \r\n            <ng-container matColumnDef=\"productDescription\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Descripción </th>\r\n              <td mat-cell *matCellDef=\"let product\"> {{product.productDescription}} </td>\r\n            </ng-container>\r\n          \r\n            <ng-container matColumnDef=\"productUnitPriceMXN\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Precio (MXN) </th>\r\n              <td mat-cell *matCellDef=\"let product\"> {{product.productUnitPriceMXN}} </td>\r\n            </ng-container>\r\n    \r\n            <ng-container matColumnDef=\"productActiveDiscount\">\r\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Descuento </th>\r\n                <td mat-cell *matCellDef=\"let product\"> {{product.productActiveDiscount}} </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"actions\">\r\n                <th mat-header-cell *matHeaderCellDef > Acciones </th>\r\n                <td mat-cell *matCellDef=\"let product\"> \r\n                    <button *ngIf=\"isAdmin\" class=\"btn-edit\" (click)=\"editProduct(product)\">\r\n                        Editar\r\n                    </button>\r\n                    <button *ngIf=\"isAdmin\" class=\"btn-delete\" (click)=\"deleteProduct(product)\">\r\n                        Eliminar\r\n                    </button>\r\n                </td>\r\n            </ng-container>\r\n          \r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n            \r\n        </table>\r\n        <mat-paginator [length]=\"dataSource.data.length\" [pageSizeOptions]=\"[10, 25, 50, 100]\"></mat-paginator>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { HttpClient, HttpResponse, HttpHeaders } from '@angular/common/http';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { Router } from '@angular/router';\r\n\r\nexport interface Product {\r\n  productId: string,\r\n  productName: string,\r\n  productDescription: string,\r\n  productUnitPriceMXN: number,\r\n  productIcon: string,\r\n  active: boolean,\r\n  productActiveDiscount: number,\r\n  supplier: {\r\n    supplierId: string,\r\n    supplierName: string,\r\n  },\r\n  category: {\r\n    categoryId: string,\r\n    categoryName: string,\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'app-management-products',\r\n  templateUrl: './management-products.component.html',\r\n  styleUrls: ['./management-products.component.css']\r\n})\r\nexport class ManagementProductsComponent implements OnInit {\r\n\r\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\r\n\r\n  displayedColumns: string[] = ['productId','productName','productDescription','productUnitPriceMXN','productActiveDiscount', 'actions'];\r\n  products: Product[] = [ ];\r\n  dataSource = new MatTableDataSource(this.products);\r\n  isAdmin = this.userIsAdmin();\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private router: Router\r\n  ) { \r\n    this.displayProducts();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // Assign the paginator to our data source\r\n    this.dataSource.paginator = this.paginator;\r\n    // Assign the a sorter to our data source\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    // Apply a filter to the dataSource after user input\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    // Return to first page after applying a filter\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  userIsAdmin(): boolean{\r\n    let details = localStorage.getItem('user-details');\r\n    if(details != null){\r\n      let user = JSON.parse(details);\r\n      if(user.userGroup == \"ADMIN\"){\r\n        return true;\r\n      }\r\n      return false\r\n    }\r\n    return false;\r\n  }\r\n\r\n\r\n\r\n  // Related to back-end product management\r\n\r\n  async displayProducts() {\r\n    let res = await this.getProducts();\r\n    if(res.status == 200) {\r\n      let body = <Product[]>res.body\r\n      for(let product of body){\r\n        console.log(product);\r\n        let productJson: Product = JSON.parse(JSON.stringify(product));\r\n        console.log(productJson);\r\n        this.products.push(productJson);\r\n      }\r\n      this.dataSource.data = this.products;     \r\n    } else if(res.status == 401) {\r\n      alert('Sus credenciales han expirado. Por favor inicie sesión de nuevo.');\r\n      localStorage.removeItem('cutie-plushie-token');\r\n      localStorage.removeItem('user-details');\r\n      this.router.navigate(['management/login']);\r\n    } \r\n  }\r\n\r\n  public getProducts(): Promise<HttpResponse<Object>> {\r\n    let token = localStorage.getItem('cutie-plushie-token')\r\n    const headers = new HttpHeaders()\r\n          .set(\"Authorization\", \"Bearer \" + token);\r\n\r\n    return this.http.get(\r\n      '/api/v1/management/products/?page=1&productsPerPage=10000',\r\n      {headers: headers, observe: 'response', responseType: 'json'}\r\n    ).toPromise().then(function(res) {\r\n      return res;\r\n    }).catch(function(err){ \r\n      return err;\r\n    });\r\n  }\r\n\r\n  createProduct() {\r\n    \r\n  }\r\n\r\n  async deleteProduct(product: Product) {\r\n    let confirmation = confirm(\"Está seguro de que desea eliminar el producto? Esta operación no se puede deshacer.\");\r\n    if(!confirmation){\r\n      return;\r\n    }\r\n\r\n    let res = await this.productDelete(product);\r\n    if(res.status == 200) {\r\n      alert('El producto se ha eliminado con éxito!');\r\n      this.displayProducts();\r\n    } else if(res.status == 401) {\r\n      alert('Sus credenciales han expirado. Por favor inicie sesión de nuevo.');\r\n      localStorage.removeItem('cutie-plushie-token');\r\n      localStorage.removeItem('user-details');\r\n      this.router.navigate(['management/login']);\r\n    } else if(res.status == 403) {\r\n      alert(\"INTENTO DE INTRUSIÓN.\");\r\n    }\r\n  }\r\n\r\n  productDelete(product: Product): Promise<HttpResponse<Object>> { \r\n    let token = localStorage.getItem('cutie-plushie-token');\r\n\r\n    const headers = new HttpHeaders()\r\n          .set(\"Authorization\", \"Bearer \" + token);\r\n\r\n    return this.http.put(\r\n      '/api/v1/management/products/' + product.productId, \r\n      {\r\n        'productName' : product.productName, \r\n        'productDescription' : product.productDescription,\r\n        'productUnitPrice' : product.productUnitPriceMXN,\r\n        'productIcon': product.productIcon,\r\n        'active' : 'false',\r\n        'supplierId': product.supplier.supplierId,\r\n        'productActiveDiscount': product.productActiveDiscount\r\n      }, \r\n      {headers: headers, observe: 'response', responseType: 'json'}\r\n    ).toPromise().then(function(res) {\r\n      return res;\r\n    }).catch(function(err){ \r\n      return err;\r\n    });\r\n  }\r\n\r\n  editProduct(product: Product) {\r\n    console.log(product.productName);\r\n  }\r\n\r\n}\r\n\r\n\r\n","<div class=\"register-component\">\r\n    <div class=\"form-container\">\r\n        <h1>\r\n            Registrar nuevo usuario\r\n        </h1>\r\n        <h3>\r\n            Por favor úsese responsablemente\r\n        </h3>\r\n        <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\r\n            <div class=\"form-group\">\r\n                <label for=\"user\">Clave de usuario*</label>\r\n                <input type=\"text\" formControlName=\"user\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted &&  registerForm.controls.user.invalid }\" />\r\n                <div *ngIf=\"submitted &&  registerForm.controls.user.invalid\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"submitted && registerForm.controls.user.errors.required\">Por favor ingrese la clave del usuario</div>\r\n                    <div *ngIf=\"submitted && registerForm.controls.user.errors.maxlength\">La clave de usuario debe tener 9 caracteres alfanuméricos</div>\r\n                    <div *ngIf=\"submitted && registerForm.controls.user.errors.minlength\">La clave de usuario debe tener 9 caracteres alfanuméricos</div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"name\">Nombre(s)*</label>\r\n                <input type=\"text\" formControlName=\"name\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted &&  registerForm.controls.name.invalid }\" />\r\n                <div *ngIf=\"submitted &&  registerForm.controls.name.invalid\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"submitted && registerForm.controls.name.errors.required\">Por favor ingrese el nombre o nombres</div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"lastName\">Apellidos*</label>\r\n                <input type=\"text\" formControlName=\"lastName\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted &&  registerForm.controls.lastName.invalid }\" />\r\n                <div *ngIf=\"submitted &&  registerForm.controls.lastName.invalid\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"submitted && registerForm.controls.lastName.errors.required\">Por favor ingrese los apellidos</div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"password\">Contraseña*</label>\r\n                <input type=\"password\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted &&  registerForm.controls.password.invalid }\" />\r\n                <div *ngIf=\"submitted &&  registerForm.controls.password.invalid\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"submitted &&  registerForm.controls.password.errors.required\">\r\n                        Por favor ingrese la contraseña\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"confirmPassword\">Confirmar contraseña nueva*</label>\r\n                <input type=\"password\" formControlName=\"confirmPassword\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && registerForm.controls.confirmPassword.invalid }\" />\r\n                <div *ngIf=\"submitted && registerForm.controls.confirmPassword.invalid\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"submitted && registerForm.controls.confirmPassword.errors.required\">\r\n                        Por favor confirme la nueva contraseña\r\n                    </div>\r\n                    <div *ngIf=\"submitted && registerForm.controls.confirmPassword.errors.pattern\">\r\n                        La contraseña no coincide\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"userGroup\">Grupo de permisos*</label>\r\n                <select class=\"form-control\" formControlName=\"userGroup\">\r\n                    <option value=\"\">Seleccione una opción...</option>\r\n                    <option *ngFor=\"let permission of permissions\" [ngValue]=\"permission\">{{permissionsDictionary[permission]}}</option>\r\n                 </select>\r\n                 <div *ngIf=\"submitted &&  registerForm.controls.userGroup.invalid\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"submitted &&  registerForm.controls.userGroup.errors.required\">\r\n                        Por favor seleccione una opción\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <button class=\"btn-register\">\r\n                    Crear nuevo usuario\r\n                </button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient, HttpResponse, HttpHeaders } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-management-register',\r\n  templateUrl: './management-register.component.html',\r\n  styleUrls: ['./management-register.component.css']\r\n})\r\nexport class ManagementRegisterComponent implements OnInit {\r\n  registerForm: FormGroup;\r\n  submitted = false;\r\n  permissionsDictionary = {\r\n    \"CR\": \"Relaciones con el cliente\",\r\n    \"ADMIN\": \"Administrador\"\r\n  };\r\n\r\n  permissions = []\r\n  \r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private router: Router,\r\n    private formBuilder: FormBuilder\r\n  ) { \r\n\r\n    let userGroup = JSON.parse(localStorage.getItem('user-details')).userGroup;\r\n    if(userGroup != \"ADMIN\"){\r\n      alert('Acceso denegado. Usted no cuenta con permisos suficientes para efectuar la operación solicitada.');\r\n      this.router.navigate(['management/home']);\r\n    }\r\n\r\n    for(let permission in this.permissionsDictionary){\r\n      this.permissions.push(permission);\r\n    }\r\n\r\n    this.registerForm = this.formBuilder.group({\r\n      user: new FormControl('', [\r\n        Validators.required,\r\n        Validators.minLength(9),\r\n        Validators.maxLength(9)\r\n      ]),\r\n      name: new FormControl('', [\r\n        Validators.required\r\n      ]),\r\n      lastName: new FormControl('', [\r\n        Validators.required\r\n      ]),\r\n      password: new FormControl('', [\r\n        Validators.required\r\n      ]),\r\n      confirmPassword: new FormControl('', [\r\n        Validators.required,\r\n        Validators.pattern(\"^$\")\r\n      ]),\r\n      userGroup: new FormControl('', [\r\n        Validators.required\r\n      ])\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  async onSubmit() {\r\n    this.submitted = true;\r\n      \r\n    let value = this.registerForm.controls.confirmPassword.value;\r\n    this.registerForm.removeControl(\"confirmPassword\");\r\n    this.registerForm.addControl(\"confirmPassword\",\r\n      new FormControl(value, [\r\n        Validators.required,\r\n        Validators.pattern(\"^\"+this.registerForm.controls.password.value+\"$\")\r\n      ])\r\n    )\r\n\r\n    // Stop here if form is invalid\r\n    if (this.registerForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    let controls = this.registerForm.controls;\r\n    let userId = controls.user.value;\r\n    let userName = controls.name.value;\r\n    let userLastName = controls.lastName.value;\r\n    let userGroup = controls.userGroup.value;\r\n    let pwd = controls.password.value;\r\n\r\n    let res = await this.createNewUser(userId, userName, userLastName, userGroup, pwd);\r\n    \r\n    if(res.status == 200) {\r\n      alert('El usuario se ha creado con éxito!');\r\n      this.router.navigate(['management/home']);\r\n    } else if(res.status == 401) {\r\n      alert('Sus credenciales han expirado. Por favor inicie sesión de nuevo.');\r\n      localStorage.removeItem('cutie-plushie-token');\r\n      localStorage.removeItem('user-details');\r\n      this.router.navigate(['management/login']);\r\n    } else if(res.status == 403) {\r\n      alert(\"INTENTO DE INTRUSIÓN.\");\r\n    }\r\n  }\r\n\r\n  public createNewUser(userId: string, userName: string, userLastName: string, userGroup: string, password: string): Promise<HttpResponse<Object>> {\r\n    let token = localStorage.getItem('cutie-plushie-token');\r\n    let pwd = btoa(password);\r\n    const headers = new HttpHeaders()\r\n          .set(\"Authorization\", \"Bearer \" + token);\r\n\r\n    return this.http.post(\r\n      '/api/v1/management/users/' + userId, \r\n      {\r\n        'userName' : userName,\r\n        'userLastName' : userLastName,\r\n        'userGroup' : userGroup,\r\n        'pwd' : pwd\r\n      }, \r\n      {headers: headers, observe: 'response', responseType: 'json'}\r\n    ).toPromise().then(function(res) {\r\n      return res;\r\n    }).catch(function(err){ \r\n      return err;\r\n    });\r\n  }\r\n}\r\n","<p>management-sales works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-management-sales',\r\n  templateUrl: './management-sales.component.html',\r\n  styleUrls: ['./management-sales.component.css']\r\n})\r\nexport class ManagementSalesComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>management-suppliers works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-management-suppliers',\r\n  templateUrl: './management-suppliers.component.html',\r\n  styleUrls: ['./management-suppliers.component.css']\r\n})\r\nexport class ManagementSuppliersComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"toolbar\" role=\"banner\">\r\n    <img\r\n        height=\"60px\"\r\n        alt=\"Logo\"\r\n        src=\"assets/images/cutie_plushie_logo_header.png\"\r\n        (click)=\"goHome()\"\r\n    />\r\n    \r\n    <div *ngIf=\"userIsLoggedIn()\" class=\"toolbar-options sales\" (click)=\"goTo($event)\">\r\n        <div class=\"sales\">\r\n            Ventas\r\n        </div>    \r\n    </div>\r\n\r\n    <div *ngIf=\"userIsLoggedIn()\" class=\"toolbar-options products\" (click)=\"goTo($event)\">\r\n        <div class=\"products\">\r\n            Productos\r\n        </div>    \r\n    </div>\r\n    \r\n    <div *ngIf=\"userIsLoggedIn() && userIsAdmin()\" class=\"toolbar-options suppliers\" (click)=\"goTo($event)\">\r\n        <div class=\"suppliers\">\r\n            Proveedores\r\n        </div>\r\n    </div>\r\n    \r\n    <div *ngIf=\"userIsLoggedIn() && userIsAdmin()\" class=\"toolbar-options distributors\" (click)=\"goTo($event)\">\r\n        <div class=\"distributors\">\r\n            Distribuidores\r\n        </div>\r\n    </div>\r\n    \r\n    <div *ngIf=\"userIsLoggedIn() && userIsAdmin()\" class=\"toolbar-options register\" (click)=\"goTo($event)\">\r\n        <div class=\"register\">\r\n            Registro de usuario\r\n        </div>\r\n    </div>\r\n\r\n    <div *ngIf=\"userIsLoggedIn()\" class=\"toolbar-options passwordchange\" (click)=\"goTo($event)\">\r\n        <div class=\"passwordchange\">\r\n            Cambiar contraseña\r\n        </div>\r\n    </div>\r\n\r\n    <div *ngIf=\"userIsLoggedIn()\" class=\"toolbar-options logout\" (click)=\"logout()\">\r\n        <div class=\"logout\">\r\n            Cerrar sesión\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<router-outlet></router-outlet>\r\n\r\n<div class=\"footer\">\r\n    Cutie Plushie Management System - 2020 ©\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-management',\r\n  templateUrl: './management.component.html',\r\n  styleUrls: ['./management.component.css']\r\n})\r\nexport class ManagementComponent implements OnInit {\r\n\r\n  constructor(\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    \r\n  }\r\n\r\n  goHome() {\r\n    this.router.navigate(['management']);\r\n  }\r\n\r\n  goTo(event: any) {\r\n    let target = event.target.className;\r\n    target = target.replace('toolbar-options ','');\r\n    this.router.navigate(['management/' + target]);\r\n  }\r\n\r\n  logout(){\r\n    localStorage.removeItem('cutie-plushie-token');\r\n    localStorage.removeItem('user-details');\r\n    this.router.navigate(['management/login']);\r\n  }\r\n\r\n  userIsLoggedIn(): boolean{\r\n    return localStorage.getItem('cutie-plushie-token') != null;\r\n  }\r\n\r\n  userIsAdmin(): boolean{\r\n    let details = localStorage.getItem('user-details');\r\n    if(details != null){\r\n      let user = JSON.parse(details);\r\n      if(user.userGroup == \"ADMIN\"){\r\n        return true;\r\n      }\r\n      return false\r\n    }\r\n    return false;\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}