{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/management/auth-guard.service.ts","webpack:///src/app/management/auth.service.ts","webpack:///src/app/management/customPaginatorLabels.ts","webpack:///src/app/management/management-distributors/distributor-dialog-form/distributor-dialog-form.component.html","webpack:///src/app/management/management-distributors/distributor-dialog-form/distributor-dialog-form.component.ts","webpack:///src/app/management/management-distributors/management-distributors.component.html","webpack:///src/app/management/management-distributors/management-distributors.component.ts","webpack:///src/app/management/management-home/management-home.component.html","webpack:///src/app/management/management-home/management-home.component.ts","webpack:///src/app/management/management-login/management-login.component.html","webpack:///src/app/management/management-login/management-login.component.ts","webpack:///src/app/management/management-passwordchange/management-passwordchange.component.html","webpack:///src/app/management/management-passwordchange/management-passwordchange.component.ts","webpack:///src/app/management/management-products/management-products.component.html","webpack:///src/app/management/management-products/management-products.component.ts","webpack:///src/app/management/management-products/product-dialog-form/product-dialog-form.component.html","webpack:///src/app/management/management-products/product-dialog-form/product-dialog-form.component.ts","webpack:///src/app/management/management-register/management-register.component.html","webpack:///src/app/management/management-register/management-register.component.ts","webpack:///src/app/management/management-sales/management-sales.component.html","webpack:///src/app/management/management-sales/management-sales.component.ts","webpack:///src/app/management/management-suppliers/management-suppliers.component.html","webpack:///src/app/management/management-suppliers/management-suppliers.component.ts","webpack:///src/app/management/management-suppliers/supplier-dialog-form/supplier-dialog-form.component.html","webpack:///src/app/management/management-suppliers/supplier-dialog-form/supplier-dialog-form.component.ts","webpack:///src/app/management/management.component.html","webpack:///src/app/management/management.component.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts","webpack:///fs (ignored)","webpack:///crypto (ignored)","webpack:///stream (ignored)"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","children","redirectTo","pathMatch","canActivate","AppRoutingModule","AppComponent","title","AppModule","AuthGuardService","authService","router","isAuthenticated","navigate","AuthService","token","localStorage","getItem","MatPaginatorIntlEsp","itemsPerPageLabel","nextPageLabel","previousPageLabel","getRangeLabel","page","pageSize","length","Math","max","startIndex","endIndex","min","DistributorDialogFormComponent","data","dialogRef","http","formBuilder","submitted","userGroup","JSON","parse","alert","distributorForm","group","distributorName","required","distributorContactName","distributorPhoneNumber","minLength","maxLength","distributorMail","email","distributor","formType","controls","setValue","invalid","distributorId","value","active","postDistributor","res","status","close","removeItem","window","location","reload","headers","set","post","observe","responseType","toPromise","catch","err","putDistributor","put","ManagementDistributorsComponent","dialog","displayedColumns","distributors","isAdmin","userIsAdmin","displayDistributors","dataSource","paginator","sort","event","filterValue","target","filter","trim","toLowerCase","firstPage","details","user","getDistributors","body","console","log","distributorJson","stringify","push","get","open","width","height","afterClosed","subscribe","result","confirmation","confirm","distributorDelete","ManagementHomeComponent","userName","ManagementLoginComponent","loginForm","password","validate","bodyJson","userKey","userLastName","setItem","key","btoa","ManagementPasswordchangeComponent","passwordChangeForm","oldPassword","newPassword","confirmPassword","pattern","removeControl","addControl","changePassword","pwdOld","pwdNew","ManagementProductsComponent","products","displayProducts","filterPredicate","accumulator","currentTerm","k","supplier","supplierName","category","categoryName","dataStr","Object","reduce","transformedFilter","indexOf","getProducts","product","productJson","productDelete","productId","productName","productDescription","productUnitPriceMXN","productIcon","supplierId","productActiveDiscount","ProductDialogFormComponent","suppliers","categories","productForm","categoryId","storeSuppliers","storeCategories","postProduct","putProduct","getSuppliers","supplierJson","getCategories","categoryJson","ManagementRegisterComponent","permissionsDictionary","permissions","permission","registerForm","name","lastName","userId","pwd","createNewUser","ManagementSalesComponent","sales","orderStatusDictionary","displaySales","nestedFilterCheck","search","getSales","sale","saleJson","ManagementSuppliersComponent","displaySuppliers","supplierDelete","supplierContactName","supplierPhoneNumber","supplierMail","SupplierDialogFormComponent","supplierForm","postSupplier","putSupplier","ManagementComponent","className","replace","environment","production","error"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACTA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAYA,QAAMC,MAAM,GAAW,CACrB;AACEC,UAAI,EAAE,YADR;AAEEC,eAAS,EAAE,oFAFb;AAGEC,cAAQ,EAAE,CACR;AAAEF,YAAI,EAAE,EAAR;AAAcG,kBAAU,EAAE,OAA1B;AAAmCC,iBAAS,EAAE;AAA9C,OADQ,EAER;AAAEJ,YAAI,EAAE,OAAR;AAAiBC,iBAAS,EAAE;AAA5B,OAFQ,EAGR;AAAED,YAAI,EAAE,MAAR;AAAgBC,iBAAS,EAAE,6GAA3B;AAAoDI,mBAAW,EAAG,CAAC,+EAAD;AAAlE,OAHQ,EAIR;AAAEL,YAAI,EAAE,UAAR;AAAoBC,iBAAS,EAAE,yHAA/B;AAA4DI,mBAAW,EAAG,CAAC,+EAAD;AAA1E,OAJQ,EAKR;AAAEL,YAAI,EAAE,WAAR;AAAqBC,iBAAS,EAAE,4HAAhC;AAA8DI,mBAAW,EAAG,CAAC,+EAAD;AAA5E,OALQ,EAMR;AAAEL,YAAI,EAAE,cAAR;AAAwBC,iBAAS,EAAE,qIAAnC;AAAoEI,mBAAW,EAAG,CAAC,+EAAD;AAAlF,OANQ,EAOR;AAAEL,YAAI,EAAE,OAAR;AAAiBC,iBAAS,EAAE,gHAA5B;AAAsDI,mBAAW,EAAG,CAAC,+EAAD;AAApE,OAPQ,EAQR;AAAEL,YAAI,EAAE,UAAR;AAAoBC,iBAAS,EAAE,yHAA/B;AAA4DI,mBAAW,EAAG,CAAC,+EAAD;AAA1E,OARQ,EASR;AAAEL,YAAI,EAAE,gBAAR;AAA0BC,iBAAS,EAAE,2IAArC;AAAwEI,mBAAW,EAAG,CAAC,+EAAD;AAAtF,OATQ;AAHZ,KADqB,CAAvB;;QAsBaC,gB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;qECrCb,yI,GAAA,8a,GAAA;AAAA;AAAe,O,EAAA,I;AAAA;;;;;;;;;;;;;;;;;;;;;;;ACOf;AAAA;;;AAAA;AAAA;AAAA;;QAAaC,Y,GALb;AAAA;;AAME,WAAAC,KAAA,GAAQ,eAAR;AACD,K;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACgED;AAAA;;;AAAA;AAAA;AAAA;;QAAaC,S;;;;;;;;;;;;;;;;;;;ACxEb;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAMaC,gB;;;AAEX,gCAAoBC,WAApB,EAAuDC,MAAvD,EAAwE;AAAA;;AAApD,aAAAD,WAAA,GAAAA,WAAA;AAAmC,aAAAC,MAAA,GAAAA,MAAA;AAAoB;;;;sCAEhE;AACT,cAAG,KAAKD,WAAL,CAAiBE,eAAjB,EAAH,EAAsC;AACpC,mBAAO,IAAP;AACD;;AACD,eAAKD,MAAL,CAAYE,QAAZ,CAAqB,CAAC,kBAAD,CAArB;AACA,iBAAO,KAAP;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCZUC,W;;;AAEX,6BAAc;AAAA;AAAG;;;;0CAEU;AACvB,cAAIC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,qBAArB,CAAZ;;AACA,cAAGF,KAAK,IAAI,IAAT,IAAiBA,KAAK,IAAI,EAA7B,EAAgC;AAC9B,mBAAO,IAAP;AACD;;AACD,iBAAO,KAAP;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdL;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAGaG,mB;;;;;AADb;AAAA;;AAAA;;;AAEE,cAAAC,iBAAA,GAAoB,sBAApB;AACA,cAAAC,aAAA,GAAoB,kBAApB;AACA,cAAAC,iBAAA,GAAoB,iBAApB;;AAEA,cAAAC,aAAA,GAAgB,UAAUC,IAAV,EAAgBC,QAAhB,EAA0BC,MAA1B,EAAkC;AAChD,cAAIA,MAAM,KAAK,CAAX,IAAgBD,QAAQ,KAAK,CAAjC,EAAoC;AAClC,mBAAO,UAAUC,MAAjB;AACD;;AACDA,gBAAM,GAAGC,IAAI,CAACC,GAAL,CAASF,MAAT,EAAiB,CAAjB,CAAT;AACA,cAAMG,UAAU,GAAGL,IAAI,GAAGC,QAA1B,CALgD,CAMhD;;AACA,cAAMK,QAAQ,GAAGD,UAAU,GAAGH,MAAb,GACfC,IAAI,CAACI,GAAL,CAASF,UAAU,GAAGJ,QAAtB,EAAgCC,MAAhC,CADe,GAEfG,UAAU,GAAGJ,QAFf;AAGA,iBAAOI,UAAU,GAAG,CAAb,GAAiB,KAAjB,GAAyBC,QAAzB,GAAoC,MAApC,GAA6CJ,MAApD;AACD,SAXD;;AANF;AAmBC;;;MAlBwC,4E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;qECHrC,wL,GAAA,sW,GAAkD,8F,IAAoB;AAAtE;AAAA,O,EAAA;AAAA;;AAAA;AAAkD,O;AAAA;;;qEAClD,wL,GAAA,sW,GAAkD,iG,IAAuB;AAAzE;AAAA,O,EAAA;AAAA;;AAAA;AAAkD,O;AAAA;;;qEAMtC,wH,IAAmF,qG,IAA2B,I,EAAA,I;AAAA;;;qEADlH,qJ,IACI,gI,GAAA;AAAA;AAAA,c,GAAmF;AAAA;AAA9E,4CAA6E,gBAA7E,CAA6E,QAA7E,CAA6E,eAA7E,CAA6E,MAA7E,CAA6E,QAA7E;;AAAL,sBAAK,SAAL;AAAkF,O,EAAA,I;AAAA;;;qEAOlF,wH,IAA0F,kH,IAAwC,I,EAAA,I;AAAA;;;qEADtI,qJ,IACI,gI,GAAA;AAAA;AAAA,c,GAA0F;AAAA;AAArF,4CAAoF,gBAApF,CAAoF,QAApF,CAAoF,sBAApF,CAAoF,MAApF,CAAoF,QAApF;;AAAL,sBAAK,SAAL;AAAyF,O,EAAA,I;AAAA;;;qEAOzF,wH,IAA0F,6G,IAAgC,I,EAAA,I;AAAA;;;qEAC1H,wH,IAA2F,wI,IAAkD,I,EAAA,I;AAAA;;;qEAC7I,wH,IAA2F,wI,IAAkD,I,EAAA,I;AAAA;;;qEAHjJ,qJ,IACI,gI,GAAA;AAAA;AAAA,c,GACA,gI,GAAA;AAAA;AAAA,c,GACA,iI,GAAA;AAAA;AAAA,c,GAA2F;AAAA;AAFtF,4CAAoF,gBAApF,CAAoF,QAApF,CAAoF,sBAApF,CAAoF,MAApF,CAAoF,QAApF;;AAAL,sBAAK,SAAL;;AACK,4CAAqF,gBAArF,CAAqF,QAArF,CAAqF,sBAArF,CAAqF,MAArF,CAAqF,SAArF;;AAAL,sBAAK,SAAL;;AACK,4CAAqF,gBAArF,CAAqF,QAArF,CAAqF,sBAArF,CAAqF,MAArF,CAAqF,SAArF;;AAAL,sBAAK,SAAL;AAA0F,O,EAAA,I;AAAA;;;qEAO1F,wH,IAAmF,uH,IAA0C,I,EAAA,I;AAAA;;;qEAC7H,wH,IAAgF,yH,IAAyC,I,EAAA,I;AAAA;;;qEAF7H,qJ,IACI,iI,GAAA;AAAA;AAAA,c,GACA,iI,GAAA;AAAA;AAAA,c,GAAgF;AAAA;AAD3E,4CAA6E,gBAA7E,CAA6E,QAA7E,CAA6E,eAA7E,CAA6E,MAA7E,CAA6E,QAA7E;;AAAL,sBAAK,SAAL;;AACK,4CAA0E,gBAA1E,CAA0E,QAA1E,CAA0E,eAA1E,CAA0E,MAA1E,CAA0E,KAA1E;;AAAL,sBAAK,SAAL;AAA+E,O,EAAA,I;AAAA;;;qEAInF;AAAA;AAAA,oBAAsF,UAAtF;;AAAQ;;;;;AAAR;AAAA,oB,IAAsF,iF,IAAO,I,EAAA,I;AAAA;;;qEAC7F;AAAA;AAAA,oBAAsF,UAAtF;;AAAQ;;;;;AAAR;AAAA,oB,IAAsF,oF,IAAU,I,EAAA,I;AAAA;;;qEArC5G,0I,IACI,gI,GAAA;AAAA;AAAA,c,GACA,gI,GAAA;AAAA;AAAA,c,GACA;AAAA;;AAAA;;;;;;;;;;;OAAA,E,IAAA,E,IAAA,C;;6bACI,iJ,IACI,qJ,IAA6B,kG,IAC7B;AAAA;;AAAA;;;;;;;;;;;;;;;;;;;;;OAAA,E,IAAA,E,IAAA,C;;;gBAA0E;AAAA;AAAA,Q,EAA1E,yV,EAAA;AAAA;AAAA,+E,EAAA;AAAA;AAAA,c,EAAA,gM,EAAA,mN,GACA,gI,GAAA;AAAA;AAAA,c,GAIJ,iJ,IACI,4J,IAAoC,8F,IACpC;AAAA;;AAAA;;;;;;;;;;;;;;;;;;;;;OAAA,E,IAAA,E,IAAA,C;;;gBAAiF;AAAA;AAAA,Q,EAAjF,yV,EAAA;AAAA;AAAA,+E,EAAA;AAAA;AAAA,c,EAAA,gM,EAAA,mN,GACA,gI,GAAA;AAAA;AAAA,c,GAIJ,iJ,IACI,4J,IAAoC,sF,IACpC;AAAA;;AAAA;;;;;;;;;;;;;;;;;;;;;OAAA,E,IAAA,E,IAAA,C;;;gBAAiF;AAAA;AAAA,Q,EAAjF,yV,EAAA;AAAA;AAAA,+E,EAAA;AAAA;AAAA,c,EAAA,gM,EAAA,mN,GACA,gI,GAAA;AAAA;AAAA,c,GAMJ,iJ,IACI,qJ,IAA6B,gG,IAC7B;AAAA;;AAAA;;;;;;;;;;;;;;;;;;;;;OAAA,E,IAAA,E,IAAA,C;;;gBAA0E;AAAA;AAAA,Q,EAA1E,yV,EAAA;AAAA;AAAA,+E,EAAA;AAAA;AAAA,c,EAAA,gM,EAAA,mN,GACA,iI,GAAA;AAAA;AAAA,c,GAKJ,kJ,IACI,iI,GAAA;AAAA;AAAA,c,GACA,iI,GAAA;AAAA;AAAA,c,GACA;AAAA;AAAA,oBAAmD,UAAnD;;AAAQ;;;;;AAAR;AAAA,oB,IAAmD,kF,IAAQ;AAAA;AArC9C;;AAArB,sBAAqB,SAArB;;AACqB;;AAArB,sBAAqB,SAArB;;AACM,2BAA6B,gBAA7B;;AAAN,sBAAM,SAAN;;AAG6D;;AAAqB,4DAA4F,gBAA5F,CAA4F,QAA5F,CAA4F,eAA5F,CAA4F,OAA5F;;AAA1E,uBAAqD,UAArD,EAA0E,UAA1E;;AAAmB;;AAAnB,uBAAmB,UAAnB;;AACK,6CAAsE,gBAAtE,CAAsE,QAAtE,CAAsE,eAAtE,CAAsE,OAAtE;;AAAL,uBAAK,UAAL;;AAM4D;;AAAqB,4DAAmG,gBAAnG,CAAmG,QAAnG,CAAmG,sBAAnG,CAAmG,OAAnG;;AAAjF,uBAA4D,UAA5D,EAAiF,UAAjF;;AAAmB;;AAAnB,uBAAmB,UAAnB;;AACK,6CAA6E,gBAA7E,CAA6E,QAA7E,CAA6E,sBAA7E,CAA6E,OAA7E;;AAAL,uBAAK,UAAL;;AAM4D;;AAAqB,4DAAmG,gBAAnG,CAAmG,QAAnG,CAAmG,sBAAnG,CAAmG,OAAnG;;AAAjF,uBAA4D,UAA5D,EAAiF,UAAjF;;AAAmB;;AAAnB,uBAAmB,UAAnB;;AACK,6CAA6E,gBAA7E,CAA6E,QAA7E,CAA6E,sBAA7E,CAA6E,OAA7E;;AAAL,uBAAK,UAAL;;AAQqD;;AAAqB,4DAA4F,gBAA5F,CAA4F,QAA5F,CAA4F,eAA5F,CAA4F,OAA5F;;AAA1E,uBAAqD,UAArD,EAA0E,UAA1E;;AAAmB;;AAAnB,uBAAmB,UAAnB;;AACK,6CAAsE,gBAAtE,CAAsE,QAAtE,CAAsE,eAAtE,CAAsE,OAAtE;;AAAL,uBAAK,UAAL;;AAMyD;;AAAzD,uBAAyD,UAAzD;;AACyD;;AAAzD,uBAAyD,UAAzD;AAAqF,O,EAAA;AAlC7F;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAGQ;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAOA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAOA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AASA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAyK,O;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCTxKM,8B;;;AAOX,8CAC+CC,IAD/C,EAEUC,SAFV,EAGUC,IAHV,EAIUvB,MAJV,EAKUwB,WALV,EAKkC;AAAA;;AAJa,aAAAH,IAAA,GAAAA,IAAA;AACrC,aAAAC,SAAA,GAAAA,SAAA;AACA,aAAAC,IAAA,GAAAA,IAAA;AACA,aAAAvB,MAAA,GAAAA,MAAA;AACA,aAAAwB,WAAA,GAAAA,WAAA;AATV,aAAAC,SAAA,GAAqB,KAArB;AAWE,YAAIC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWvB,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAX,EAAiDoB,SAAjE;;AACA,YAAGA,SAAS,IAAI,OAAhB,EAAwB;AACtBG,eAAK,CAAC,kGAAD,CAAL;AACA,eAAK7B,MAAL,CAAYE,QAAZ,CAAqB,CAAC,yBAAD,CAArB;AACD;;AACD,aAAK4B,eAAL,GAAuB,KAAKN,WAAL,CAAiBO,KAAjB,CAAuB;AAC5CC,yBAAe,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CACnC,0DAAWC,QADwB,CAApB,CAD2B;AAI5CC,gCAAsB,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CAC1C,0DAAWD,QAD+B,CAApB,CAJoB;AAO5CE,gCAAsB,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CAC1C,0DAAWF,QAD+B,EAE1C,0DAAWG,SAAX,CAAqB,EAArB,CAF0C,EAG1C,0DAAWC,SAAX,CAAqB,EAArB,CAH0C,CAApB,CAPoB;AAY5CC,yBAAe,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CACnC,0DAAWL,QADwB,EAEnC,0DAAWM,KAFwB,CAApB;AAZ2B,SAAvB,CAAvB;AAkBA,aAAKC,WAAL,GAAmBnB,IAAnB;;AACA,YAAG,KAAKmB,WAAL,IAAoB,IAAvB,EAA4B;AAC1B,eAAKC,QAAL,GAAgB,QAAhB;AACD,SAFD,MAEO;AACL,eAAKA,QAAL,GAAgB,QAAhB;AACA,cAAIC,QAAQ,GAAG,KAAKZ,eAAL,CAAqBY,QAApC;AACAA,kBAAQ,CAACV,eAAT,CAAyBW,QAAzB,CAAkC,KAAKH,WAAL,CAAiBR,eAAnD;AACAU,kBAAQ,CAACR,sBAAT,CAAgCS,QAAhC,CAAyC,KAAKH,WAAL,CAAiBN,sBAA1D;AACAQ,kBAAQ,CAACP,sBAAT,CAAgCQ,QAAhC,CAAyC,KAAKH,WAAL,CAAiBL,sBAA1D;AACAO,kBAAQ,CAACJ,eAAT,CAAyBK,QAAzB,CAAkC,KAAKH,WAAL,CAAiBF,eAAnD;AACD;AACF;;;;mCAEO,CAEP;;;4CAEsB;;;;;;;;;AACrB,yBAAKb,SAAL,GAAiB,IAAjB;;yBAEI,KAAKK,eAAL,CAAqBc,O;;;;;;;;AAIrBF,4B,GAAW,KAAKZ,eAAL,CAAqBY,Q;AACpC,yBAAKF,WAAL,GAAmB;AACjBK,mCAAa,EAAE,EADE;AAEjBb,qCAAe,EAAEU,QAAQ,CAACV,eAAT,CAAyBc,KAFzB;AAGjBZ,4CAAsB,EAAEQ,QAAQ,CAACR,sBAAT,CAAgCY,KAHvC;AAIjBX,4CAAsB,EAAEO,QAAQ,CAACP,sBAAT,CAAgCW,KAJvC;AAKjBR,qCAAe,EAAEI,QAAQ,CAACJ,eAAT,CAAyBQ,KALzB;AAMjBC,4BAAM,EAAE;AANS,qBAAnB;;AASU,2BAAM,KAAKC,eAAL,CAAqB,KAAKR,WAA1B,CAAN;;;AAANS,uB;;AAEJ,wBAAGA,GAAG,CAACC,MAAJ,IAAc,GAAjB,EAAsB;AACpBrB,2BAAK,CAAC,yCAAD,CAAL;AACA,2BAAKP,SAAL,CAAe6B,KAAf,CAAqB;AAAED,8BAAM,EAAE;AAAV,uBAArB;AACD,qBAHD,MAGO,IAAGD,GAAG,CAACC,MAAJ,IAAc,GAAjB,EAAsB;AAC3BrB,2BAAK,CAAC,kEAAD,CAAL;AACAxB,kCAAY,CAAC+C,UAAb,CAAwB,qBAAxB;AACA/C,kCAAY,CAAC+C,UAAb,CAAwB,cAAxB;AACAC,4BAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD;;;;;;;;;AACF;;;wCAEef,W,EAAwB;AACtC,cAAIpC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,qBAArB,CAAZ;AACA,cAAMkD,OAAO,GAAG,IAAI,gEAAJ,GACTC,GADS,CACL,eADK,EACY,YAAYrD,KADxB,CAAhB;AAGA,iBAAO,KAAKmB,IAAL,CAAUmC,IAAV,CACL,kCADK,EAEL;AACE,+BAAoBlB,WAAW,CAACR,eADlC;AAEE,sCAA2BQ,WAAW,CAACN,sBAFzC;AAGE,sCAA2BM,WAAW,CAACL,sBAHzC;AAIE,+BAAoBK,WAAW,CAACF;AAJlC,WAFK,EAQL;AAACkB,mBAAO,EAAEA,OAAV;AAAmBG,mBAAO,EAAE,UAA5B;AAAwCC,wBAAY,EAAE;AAAtD,WARK,EASLC,SATK,GASOlF,IATP,CASY,UAASsE,GAAT,EAAc;AAC/B,mBAAOA,GAAP;AACD,WAXM,EAWJa,KAXI,CAWE,UAASC,GAAT,EAAY;AACnB,mBAAOA,GAAP;AACD,WAbM,CAAP;AAcD;;;4CAEsB;;;;;;;;;AACrB,yBAAKtC,SAAL,GAAiB,IAAjB;;yBACI,KAAKK,eAAL,CAAqBc,O;;;;;;;;AAIrBF,4B,GAAW,KAAKZ,eAAL,CAAqBY,Q;AACpC,yBAAKF,WAAL,GAAmB;AACjBK,mCAAa,EAAE,KAAKL,WAAL,CAAiBK,aADf;AAEjBb,qCAAe,EAAEU,QAAQ,CAACV,eAAT,CAAyBc,KAFzB;AAGjBZ,4CAAsB,EAAEQ,QAAQ,CAACR,sBAAT,CAAgCY,KAHvC;AAIjBX,4CAAsB,EAAEO,QAAQ,CAACP,sBAAT,CAAgCW,KAJvC;AAKjBR,qCAAe,EAAEI,QAAQ,CAACJ,eAAT,CAAyBQ,KALzB;AAMjBC,4BAAM,EAAE;AANS,qBAAnB;;AASU,2BAAM,KAAKiB,cAAL,CAAoB,KAAKxB,WAAzB,CAAN;;;AAANS,uB;;AAEJ,wBAAGA,GAAG,CAACC,MAAJ,IAAc,GAAjB,EAAsB;AACpBrB,2BAAK,CAAC,8CAAD,CAAL;AACA,2BAAKP,SAAL,CAAe6B,KAAf,CAAqB;AAAED,8BAAM,EAAE;AAAV,uBAArB;AACD,qBAHD,MAGO,IAAGD,GAAG,CAACC,MAAJ,IAAc,GAAjB,EAAsB;AAC3BrB,2BAAK,CAAC,kEAAD,CAAL;AACAxB,kCAAY,CAAC+C,UAAb,CAAwB,qBAAxB;AACA/C,kCAAY,CAAC+C,UAAb,CAAwB,cAAxB;AACA,2BAAKpD,MAAL,CAAYE,QAAZ,CAAqB,CAAC,kBAAD,CAArB;AACD;;;;;;;;;AACF;;;uCAEcsC,W,EAAwB;AACrC,cAAIpC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,qBAArB,CAAZ;AACA,cAAMkD,OAAO,GAAG,IAAI,gEAAJ,GACTC,GADS,CACL,eADK,EACY,YAAYrD,KADxB,CAAhB;AAGA,iBAAO,KAAKmB,IAAL,CAAU0C,GAAV,CACL,qCAAoCzB,WAAW,CAACK,aAD3C,EAEL;AACE,+BAAoBL,WAAW,CAACR,eADlC;AAEE,sCAA2BQ,WAAW,CAACN,sBAFzC;AAGE,sCAA2BM,WAAW,CAACL,sBAHzC;AAIE,+BAAmBK,WAAW,CAACF,eAJjC;AAKE,sBAAWE,WAAW,CAACO;AALzB,WAFK,EASL;AAACS,mBAAO,EAAEA,OAAV;AAAmBG,mBAAO,EAAE,UAA5B;AAAwCC,wBAAY,EAAE;AAAtD,WATK,EAULC,SAVK,GAUOlF,IAVP,CAUY,UAASsE,GAAT,EAAc;AAC/B,mBAAOA,GAAP;AACD,WAZM,EAYJa,KAZI,CAYE,UAASC,GAAT,EAAY;AACnB,mBAAOA,GAAP;AACD,WAdM,CAAP;AAeD;;;sCAEU;AACT,eAAKzC,SAAL,CAAe6B,KAAf,CAAqB;AAAED,kBAAM,EAAE;AAAV,WAArB;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;qEClKW;AAAA;;AAAA;;;;;;;;;;;;;;;;OAAA,E,wGAAA,E,4GAAA,C;;iBAAsD,2E,IAAI;AAApB;;AAAtC,sBAAsC,SAAtC;AAAqD,O,EAAA;AAArD;;AAAA;;AAAA;AAAsD,O;AAAA;;;qEACtD,oL,GAAA,+Q,GAA2C,+E,IAAA,I,EAAA;AAAA;;AAAA;AAA+B,O;AAAA;;;qEAI1E;AAAA;;AAAA;;;;;;;;;;;;;;;;OAAA,E,wGAAA,E,4GAAA,C;;iBAAsD,+E,IAAQ;AAAxB;;AAAtC,sBAAsC,SAAtC;AAAqD,O,EAAA;AAArD;;AAAA;;AAAA;AAAsD,O;AAAA;;;qEACtD,oL,GAAA,+Q,GAA2C,+E,IAAA,I,EAAA;AAAA;;AAAA;AAAiC,O;AAAA;;;qEAI5E;AAAA;;AAAA;;;;;;;;;;;;;;;;OAAA,E,wGAAA,E,4GAAA,C;;iBAAsD,iF,IAAU;AAA1B;;AAAtC,sBAAsC,SAAtC;AAAqD,O,EAAA;AAArD;;AAAA;;AAAA;AAAsD,O;AAAA;;;qEACtD,oL,GAAA,+Q,GAA2C,+E,IAAA,I,EAAA;AAAA;;AAAA;AAAwC,O;AAAA;;;qEAInF;AAAA;;AAAA;;;;;;;;;;;;;;;;OAAA,E,wGAAA,E,4GAAA,C;;iBAAsD,oF,IAAU;AAA1B;;AAAtC,sBAAsC,SAAtC;AAAqD,O,EAAA;AAArD;;AAAA;;AAAA;AAAsD,O;AAAA;;;qEACtD,oL,GAAA,+Q,GAA2C,+E,IAAA,I,EAAA;AAAA;;AAAA;AAAwC,O;AAAA;;;qEAIjF;AAAA;;AAAA;;;;;;;;;;;;;;;;OAAA,E,wGAAA,E,4GAAA,C;;iBAAsD,2F,IAAoB;AAApC;;AAAtC,sBAAsC,SAAtC;AAAqD,O,EAAA;AAArD;;AAAA;;AAAA;AAAsD,O;AAAA;;;qEACtD,oL,GAAA,+Q,GAA2C,+E,IAAA,I,EAAA;AAAA;;AAAA;AAAiC,O;AAAA;;;qEAI5E,sM,GAAA,qR,GAAuC,oF,IAAU,I,EAAA,I;AAAA;;;qEACjD,oL,GAAA,+Q,GACI;AAAA;AAAA,oBAAgE,UAAhE;;AAAyB;;;;;AAAzB;AAAA,oB,IAAgE,kF,IAGhE;AAAA;AAAA,oBAAoE,UAApE;;AAA2B;;;;;AAA3B;AAAA,oB,IAAoE,oF,IAEpE,I,EAAA,I;AAAA;;;qEAIR,uY,GAAA,6M,EAAA,2J,GAAuD,I,EAAA,I;AAAA;;;qEACvD,6W,GAAA,iM,EAAA,qJ,GAA6D,I,EAAA,I;AAAA;;;;;;;WArDzE,6J,IACI,sJ,IACI,uH,IAAI,0F,IAIJ,qmC,GAAA,8N,EAAA,qvB,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,GACI;AAAA;AAAA;;AAAA;;;;;;;;;;;;;;;AAAmC;;;;;AAAnC;AAAA,oB,GAAA;AAAA;AAAA,c,EAAA,uO,GAEJ;AAAA;AAAA,oBAAyD,UAAzD;;AAA2B;;;;;AAA3B;AAAA,oB,IAAyD,8F,IAIzD,oZ,GAAA,qM,EAAA;AAAA;AAAA,c,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA,2J,EAAA,sM,GAEI,2H,GAAA,0K,EAAA;AAAA;AAAA,c,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA,kN,GACE,0H,GAAA,yN,EAAA,0N,GACA,0H,GAAA,mN,EAAA,8M,GAGF,2H,GAAA,0K,EAAA;AAAA;AAAA,c,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA,kN,GACE,0H,GAAA,yN,EAAA,0N,GACA,0H,GAAA,mN,EAAA,8M,GAGF,2H,GAAA,0K,EAAA;AAAA;AAAA,c,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA,kN,GACE,0H,GAAA,yN,EAAA,0N,GACA,0H,GAAA,mN,EAAA,8M,GAGF,2H,GAAA,0K,EAAA;AAAA;AAAA,c,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA,kN,GACE,0H,GAAA,yN,EAAA,0N,GACA,0H,GAAA,mN,EAAA,8M,GAGF,2H,GAAA,0K,EAAA;AAAA;AAAA,c,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA,kN,GACI,0H,GAAA,yN,EAAA,0N,GACA,2H,GAAA,mN,EAAA,8M,GAGJ,2H,GAAA,0K,EAAA;AAAA;AAAA,c,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA,kN,GACI,2H,GAAA,0N,EAAA,0N,GACA,2H,GAAA,oN,EAAA,8M,GAUJ,2H,GAAA;AAAA;AAAA,c,EAAA,wN,GACA,2H,GAAA;AAAA;AAAA,c,EAAA,4M,GAGJ,oX,GAAA;AAAA;AAAA;AAAA,c,EAAiD,0D,GAAqC;AAAA;AAjDjB;;AAAjE,uBAAiE,UAAjE;;AAMa,4BAAyB,WAAzB;;AAAjB,uBAAiB,UAAjB;;AAAA;;AAEkB;;AAAd,uBAAc,UAAd;;AAKc;;AAAd,uBAAc,UAAd;;AAKc;;AAAd,uBAAc,UAAd;;AAKc;;AAAd,uBAAc,UAAd;;AAKc;;AAAd,uBAAc,UAAd;;AAKc;;AAAd,uBAAc,UAAd;;AAYmB,4BAAmC,iBAAnC;;AAAnB,wBAAmB,UAAnB;;AACY,4BAAgD,iBAAhD;;AAAZ,wBAAY,UAAZ;;AAGW,4BAAiC,WAAjC,CAAiC,IAAjC,CAAiC,MAAjC;;AAAkC;;AAAjD,wBAAe,UAAf,EAAiD,UAAjD;AAAsF,O,EAAA;AAlDtF;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACI;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAA0F,O;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCiBzFgB,+B;;;AAiBX,+CACU3C,IADV,EAEUvB,MAFV,EAGUmE,MAHV,EAG2B;AAAA;;AAFjB,aAAA5C,IAAA,GAAAA,IAAA;AACA,aAAAvB,MAAA,GAAAA,MAAA;AACA,aAAAmE,MAAA,GAAAA,MAAA;AAfV,aAAAC,gBAAA,GAA6B,CAC3B,eAD2B,EAE3B,iBAF2B,EAG3B,wBAH2B,EAI3B,wBAJ2B,EAK3B,iBAL2B,EAM3B,SAN2B,CAA7B;AAQA,aAAAC,YAAA,GAA8B,EAA9B;AACA,aAAAC,OAAA,GAAU,KAAKC,WAAL,EAAV;;AAQE,YAAG,CAAC,KAAKA,WAAT,EAAqB;AACnB1C,eAAK,CAAC,mDAAD,CAAL;AACA,eAAK7B,MAAL,CAAYE,QAAZ,CAAqB,CAAC,iBAAD,CAArB;AACD;;AACD,aAAKsE,mBAAL;AACD;;;;mCAEO;AACN,eAAKC,UAAL,GAAkB,IAAI,0EAAJ,CAAuB,KAAKJ,YAA5B,CAAlB,CADM,CAEN;;AACA,eAAKI,UAAL,CAAgBC,SAAhB,GAA4B,KAAKA,SAAjC,CAHM,CAIN;;AACA,eAAKD,UAAL,CAAgBE,IAAhB,GAAuB,KAAKA,IAA5B;AACD;;;oCAEWC,K,EAAc;AACxB;AACA,cAAMC,WAAW,GAAID,KAAK,CAACE,MAAN,CAAkChC,KAAvD;AACA,eAAK2B,UAAL,CAAgBM,MAAhB,GAAyBF,WAAW,CAACG,IAAZ,GAAmBC,WAAnB,EAAzB,CAHwB,CAKxB;;AACA,cAAI,KAAKR,UAAL,CAAgBC,SAApB,EAA+B;AAC7B,iBAAKD,UAAL,CAAgBC,SAAhB,CAA0BQ,SAA1B;AACD;AACF;;;sCAEU;AACT,cAAIC,OAAO,GAAG9E,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAd;;AACA,cAAG6E,OAAO,IAAI,IAAd,EAAmB;AACjB,gBAAIC,IAAI,GAAGzD,IAAI,CAACC,KAAL,CAAWuD,OAAX,CAAX;;AACA,gBAAGC,IAAI,CAAC1D,SAAL,IAAkB,OAArB,EAA6B;AAC3B,qBAAO,IAAP;AACD;;AACD,mBAAO,KAAP;AACD;;AACD,iBAAO,KAAP;AACD,S,CAID;;;;8CAE4B;;;;;;;;;;;AAChB,2BAAM,KAAK2D,eAAL,EAAN;;;AAANpC,uB;;0BACDA,GAAG,CAACC,MAAJ,IAAc,G;;;;;AACXoC,wB,GAAsBrC,GAAG,CAACqC,I;;;;;;AAC9B,qCAAuBA,IAAvB,uHAA4B;AAApB9C,iCAAoB;AAC1B+C,6BAAO,CAACC,GAAR,CAAYhD,WAAZ;AACIiD,qCAFsB,GAES9D,IAAI,CAACC,KAAL,CAAWD,IAAI,CAAC+D,SAAL,CAAelD,WAAf,CAAX,CAFT;AAG1B+C,6BAAO,CAACC,GAAR,CAAYC,eAAZ;AACA,2BAAKpB,YAAL,CAAkBsB,IAAlB,CAAuBF,eAAvB;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACD,yBAAKhB,UAAL,GAAkB,IAAI,0EAAJ,CAAuB,KAAKJ,YAA5B,CAAlB;AACA,yBAAKI,UAAL,CAAgBC,SAAhB,GAA4B,KAAKA,SAAjC;AACA,yBAAKD,UAAL,CAAgBE,IAAhB,GAAuB,KAAKA,IAA5B;;;;;AACK,wBAAG1B,GAAG,CAACC,MAAJ,IAAc,GAAjB,EAAsB;AAC3BrB,2BAAK,CAAC,kEAAD,CAAL;AACAxB,kCAAY,CAAC+C,UAAb,CAAwB,qBAAxB;AACA/C,kCAAY,CAAC+C,UAAb,CAAwB,cAAxB;AACA,2BAAKpD,MAAL,CAAYE,QAAZ,CAAqB,CAAC,kBAAD,CAArB;AACD;;;;;;;;;AACF;;;0CAEqB;AACpB,cAAIE,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,qBAArB,CAAZ;AACA,cAAMkD,OAAO,GAAG,IAAI,gEAAJ,GACTC,GADS,CACL,eADK,EACY,YAAYrD,KADxB,CAAhB;AAGA,iBAAO,KAAKmB,IAAL,CAAUqE,GAAV,CACL,kCADK,EAEL;AAACpC,mBAAO,EAAEA,OAAV;AAAmBG,mBAAO,EAAE,UAA5B;AAAwCC,wBAAY,EAAE;AAAtD,WAFK,EAGLC,SAHK,GAGOlF,IAHP,CAGY,UAASsE,GAAT,EAAc;AAC/B,mBAAOA,GAAP;AACD,WALM,EAKJa,KALI,CAKE,UAASC,GAAT,EAAY;AACnB,mBAAOA,GAAP;AACD,WAPM,CAAP;AAQD;;;4CAEmB;AAClB,cAAMzC,SAAS,GAAG,KAAK6C,MAAL,CAAY0B,IAAZ,CAAiB,yHAAjB,EAAiD;AACjEC,iBAAK,EAAE,OAD0D;AAEjEC,kBAAM,EAAE,OAFyD;AAGjE1E,gBAAI,EAAE;AAH2D,WAAjD,CAAlB;AAMAC,mBAAS,CAAC0E,WAAV,GAAwBC,SAAxB,CAAkC,UAASC,MAAT,EAAe;AAC/C,gBAAGA,MAAM,CAAChD,MAAP,IAAiB,MAApB,EAA2B;AACzBG,oBAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD;AACF,WAJD;AAKD;;;0CAEuBf,W,EAA0B;;;;;;;;;AAC5C2D,gC,GAAeC,OAAO,CAAC,yFAAD,C;;wBACtBD,Y;;;;;;;;;AAIM,2BAAM,KAAKE,iBAAL,CAAuB7D,WAAvB,CAAN;;;AAANS,uB;;AACJ,wBAAGA,GAAG,CAACC,MAAJ,IAAc,GAAjB,EAAsB;AACpBrB,2BAAK,CAAC,4CAAD,CAAL;AACAwB,4BAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD,qBAHD,MAGO,IAAGN,GAAG,CAACC,MAAJ,IAAc,GAAjB,EAAsB;AAC3BrB,2BAAK,CAAC,kEAAD,CAAL;AACAxB,kCAAY,CAAC+C,UAAb,CAAwB,qBAAxB;AACA/C,kCAAY,CAAC+C,UAAb,CAAwB,cAAxB;AACA,2BAAKpD,MAAL,CAAYE,QAAZ,CAAqB,CAAC,kBAAD,CAArB;AACD,qBALM,MAKA,IAAG+C,GAAG,CAACC,MAAJ,IAAc,GAAjB,EAAsB;AAC3BrB,2BAAK,CAAC,uBAAD,CAAL;AACD;;;;;;;;;AACF;;;0CAEiBW,W,EAAwB;AACxC,cAAIpC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,qBAArB,CAAZ;AAEA,cAAMkD,OAAO,GAAG,IAAI,gEAAJ,GACTC,GADS,CACL,eADK,EACY,YAAYrD,KADxB,CAAhB;AAGA,iBAAO,KAAKmB,IAAL,CAAU0C,GAAV,CACL,qCAAqCzB,WAAW,CAACK,aAD5C,EAEL;AACE,+BAAoBL,WAAW,CAACR,eADlC;AAEE,sCAA2BQ,WAAW,CAACN,sBAFzC;AAGE,sCAA2BM,WAAW,CAACL,sBAHzC;AAIE,+BAAmBK,WAAW,CAACF,eAJjC;AAKE,sBAAW;AALb,WAFK,EASL;AAACkB,mBAAO,EAAEA,OAAV;AAAmBG,mBAAO,EAAE,UAA5B;AAAwCC,wBAAY,EAAE;AAAtD,WATK,EAULC,SAVK,GAUOlF,IAVP,CAUY,UAASsE,GAAT,EAAc;AAC/B,mBAAOA,GAAP;AACD,WAZM,EAYJa,KAZI,CAYE,UAASC,GAAT,EAAY;AACnB,mBAAOA,GAAP;AACD,WAdM,CAAP;AAeD;;;wCAEevB,W,EAA0B;AACxC,cAAMlB,SAAS,GAAG,KAAK6C,MAAL,CAAY0B,IAAZ,CAAiB,yHAAjB,EAAiD;AACjEC,iBAAK,EAAE,OAD0D;AAEjEC,kBAAM,EAAE,OAFyD;AAGjE1E,gBAAI,EAAEmB;AAH2D,WAAjD,CAAlB;AAMAlB,mBAAS,CAAC0E,WAAV,GAAwBC,SAAxB,CAAkC,UAASC,MAAT,EAAe;AAC/C,gBAAGA,MAAM,CAAChD,MAAP,IAAiB,MAApB,EAA2B;AACzBG,oBAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD;AACF,WAJD;AAKD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;qECjMH,8I,IACI,uH,IAAI,qF,IAGJ,uH,IAAI,yH,IAGJ,uH,IACA,uH,IAAI,+H,IAGJ,6M,IAIM,I,EAAA;AAAA;AAdF;;AAAA;AAEJ,O;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;ACHJ;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOa+C,uB;;;AAIX,yCAAc;AAAA;;AAFd,aAAAC,QAAA,GAAW5E,IAAI,CAACC,KAAL,CAAWvB,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAX,EAAiDiG,QAA5D;AAEiB;;;;mCAET,CACP;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;qECDiB,wH,IAAkE,gH,IAAsC,I,EAAA,I;AAAA;;;qEACxG,wH,IAAmE,sI,IAAyD,I,EAAA,I;AAAA;;;qEAC5H,wH,IAAmE,sI,IAAyD,I,EAAA,I;AAAA;;;qEAHhI,qJ,IACI,0H,GAAA;AAAA;AAAA,c,GACA,0H,GAAA;AAAA;AAAA,c,GACA,0H,GAAA;AAAA;AAAA,c,GAAmE;AAAA;AAF9D,4CAA4D,UAA5D,CAA4D,QAA5D,CAA4D,IAA5D,CAA4D,MAA5D,CAA4D,QAA5D;;AAAL,sBAAK,SAAL;;AACK,4CAA6D,UAA7D,CAA6D,QAA7D,CAA6D,IAA7D,CAA6D,MAA7D,CAA6D,SAA7D;;AAAL,sBAAK,SAAL;;AACK,4CAA6D,UAA7D,CAA6D,QAA7D,CAA6D,IAA7D,CAA6D,MAA7D,CAA6D,SAA7D;;AAAL,sBAAK,SAAL;AAAkE,O,EAAA,I;AAAA;;;qEAOlE,wH,IAAsE,4G,IAA+B,I,EAAA,I;AAAA;;;qEADzG,qJ,IACI,0H,GAAA;AAAA;AAAA,c,GAAsE;AAAA;AAAjE,4CAAgE,UAAhE,CAAgE,QAAhE,CAAgE,QAAhE,CAAgE,MAAhE,CAAgE,QAAhE;;AAAL,sBAAK,SAAL;AAAqE,O,EAAA,I;AAAA;;;qEAtBzF,qJ,IACI,oJ,IACI,6M,IAKA,uH,IAAI,qG,IACJ;AAAA;AAAA;;AAAA;;;;;;;;;;AAA8B;;;;;AAA9B;AAAA,oB,GAAA,qK,EAAA;AAAA;AAAA;AAAA;AAAA,Q,EAAA,0M,EAAA,8N,GACI,iJ,IACI,0I,IAAkB,0F,IAClB;AAAA;;AAAA;;;;;;;;;;;;;;;;;;;;;OAAA,E,IAAA,E,IAAA,C;;;gBAA+D;AAAA;AAAA,Q,EAA/D,yV,EAAA;AAAA;AAAA,+E,EAAA;AAAA;AAAA,c,EAAA,gM,EAAA,mN,GACA,0H,GAAA;AAAA;AAAA,c,GAMJ,iJ,IACI,8I,IAAsB,uF,IACtB;AAAA;;AAAA;;;;;;;;;;;;;;;;;;;;;OAAA,E,IAAA,E,IAAA,C;;;gBAAuE;AAAA;AAAA,Q,EAAvE,yV,EAAA;AAAA;AAAA,+E,EAAA;AAAA;AAAA,c,EAAA,gM,EAAA,mN,GACA,0H,GAAA;AAAA;AAAA,c,GAIJ,gJ,IACI,kJ,IAA0B,6F,IAE1B;AAAA;AApBF,2BAAuB,UAAvB;;AAAN,sBAAM,SAAN;;AAGkD;;AAAqB,4DAA0E,UAA1E,CAA0E,QAA1E,CAA0E,IAA1E,CAA0E,OAA1E;;AAA/D,uBAA0C,UAA1C,EAA+D,UAA/D;;AAAmB;;AAAnB,uBAAmB,UAAnB;;AACK,6CAAoD,UAApD,CAAoD,QAApD,CAAoD,IAApD,CAAoD,OAApD;;AAAL,uBAAK,UAAL;;AAQkD;;AAAqB,4DAA8E,UAA9E,CAA8E,QAA9E,CAA8E,QAA9E,CAA8E,OAA9E;;AAAvE,uBAAkD,UAAlD,EAAuE,UAAvE;;AAAuB;;AAAvB,uBAAuB,UAAvB;;AACK,6CAAwD,UAAxD,CAAwD,QAAxD,CAAwD,QAAxD,CAAwD,OAAxD;;AAAL,uBAAK,UAAL;AAA6D,O,EAAA;AAbrE;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAGQ;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AASA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAwJ,O;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCV3JC,wB;;;AAIX,wCACUjF,IADV,EAEUvB,MAFV,EAGUwB,WAHV,EAGkC;AAAA;;AAFxB,aAAAD,IAAA,GAAAA,IAAA;AACA,aAAAvB,MAAA,GAAAA,MAAA;AACA,aAAAwB,WAAA,GAAAA,WAAA;AALV,aAAAC,SAAA,GAAY,KAAZ;AAOI,YAAIrB,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,qBAArB,CAAZ;;AACA,YAAGF,KAAK,IAAI,IAAZ,EAAiB;AACf,eAAKJ,MAAL,CAAYE,QAAZ,CAAqB,CAAC,iBAAD,CAArB;AACD;;AAED,aAAKuG,SAAL,GAAiB,KAAKjF,WAAL,CAAiBO,KAAjB,CAAuB;AACtCqD,cAAI,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CACxB,0DAAWnD,QADa,EAExB,0DAAWG,SAAX,CAAqB,CAArB,CAFwB,EAGxB,0DAAWC,SAAX,CAAqB,CAArB,CAHwB,CAApB,CADgC;AAMtCqE,kBAAQ,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CAC5B,0DAAWzE,QADiB,CAApB;AAN4B,SAAvB,CAAjB;AAUD;;;;mCAEK,CAEP;;;mCAEgB;;;;;;;;;AACf,yBAAKR,SAAL,GAAiB,IAAjB,C,CACA;;yBACI,KAAKgF,SAAL,CAAe7D,O;;;;;;;;;AAMT,2BAAM,KAAK+D,QAAL,CAAc,KAAKF,SAAL,CAAe/D,QAAf,CAAwB0C,IAAxB,CAA6BtC,KAA3C,EAAkD,KAAK2D,SAAL,CAAe/D,QAAf,CAAwBgE,QAAxB,CAAiC5D,KAAnF,CAAN;;;AAANG,uB;;AAEJ,wBAAGA,GAAG,CAACC,MAAJ,IAAc,GAAjB,EAAqB;AACfoC,0BADe,GACRrC,GAAG,CAACqC,IADI;AAEfsB,8BAFe,GAEJjF,IAAI,CAACC,KAAL,CAAWD,IAAI,CAAC+D,SAAL,CAAeJ,IAAf,CAAX,CAFI;AAGfF,0BAHe,GAGR;AACTyB,+BAAO,EAAED,QAAQ,CAACC,OADT;AAETN,gCAAQ,EAAEK,QAAQ,CAACL,QAFV;AAGTO,oCAAY,EAAEF,QAAQ,CAACE,YAHd;AAITpF,iCAAS,EAAEkF,QAAQ,CAAClF;AAJX,uBAHQ;AASftB,2BATe,GASPwG,QAAQ,CAACxG,KATF;AAUnBC,kCAAY,CAAC0G,OAAb,CAAqB,qBAArB,EAA2C3G,KAA3C;AACAC,kCAAY,CAAC0G,OAAb,CAAqB,cAArB,EAAoCpF,IAAI,CAAC+D,SAAL,CAAeN,IAAf,CAApC;AACA,2BAAKpF,MAAL,CAAYE,QAAZ,CAAqB,CAAC,iBAAD,CAArB;AACD,qBAbD,MAaO,IAAG+C,GAAG,CAACC,MAAJ,IAAc,GAAjB,EAAqB;AAC1BrB,2BAAK,CAAC,qCAAD,CAAL;AACD;;;;;;;;;AACF;;;iCAEemF,G,EAAaN,Q,EAAgB;AAC3CA,kBAAQ,GAAGO,IAAI,CAACP,QAAD,CAAf;AACA,iBAAO,KAAKnF,IAAL,CAAUmC,IAAV,CACL,0BADK,EAEL;AAAC,mBAAQsD,GAAT;AAAc,mBAAQN;AAAtB,WAFK,EAGL;AAAC/C,mBAAO,EAAE,UAAV;AAAsBC,wBAAY,EAAE;AAApC,WAHK,EAILC,SAJK,GAIOlF,IAJP,CAIY,UAASsE,GAAT,EAAc;AAC/B,mBAAOA,GAAP;AACD,WANM,EAMJa,KANI,CAME,UAASC,GAAT,EAAY;AACnB,mBAAOA,GAAP;AACD,WARM,CAAP;AASD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;qECtEiB,wH,IAAmF,uH,IAEnF,I,EAAA,I;AAAA;;;qEAHJ,qJ,IACI,mI,GAAA;AAAA;AAAA,c,GAAmF;AAAA;AAA9E,4CAA6E,mBAA7E,CAA6E,QAA7E,CAA6E,WAA7E,CAA6E,MAA7E,CAA6E,QAA7E;;AAAL,sBAAK,SAAL;AAAkF,O,EAAA,I;AAAA;;;qEASlF,wH,IAAmF,oH,IAEnF,I,EAAA,I;AAAA;;;qEAHJ,qJ,IACI,mI,GAAA;AAAA;AAAA,c,GAAmF;AAAA;AAA9E,4CAA6E,mBAA7E,CAA6E,QAA7E,CAA6E,WAA7E,CAA6E,MAA7E,CAA6E,QAA7E;;AAAL,sBAAK,SAAL;AAAkF,O,EAAA,I;AAAA;;;qEASlF,wH,IAAuF,qH,IAEvF,I,EAAA,I;AAAA;;;qEACA,wH,IAAsF,mI,IAEtF,I,EAAA,I;AAAA;;;qEANJ,qJ,IACI,mI,GAAA;AAAA;AAAA,c,GAGA,mI,GAAA;AAAA;AAAA,c,GAAsF;AAAA;AAHjF,4CAAiF,mBAAjF,CAAiF,QAAjF,CAAiF,eAAjF,CAAiF,MAAjF,CAAiF,QAAjF;;AAAL,sBAAK,SAAL;;AAGK,4CAAgF,mBAAhF,CAAgF,QAAhF,CAAgF,eAAhF,CAAgF,MAAhF,CAAgF,OAAhF;;AAAL,sBAAK,SAAL;AAAqF,O,EAAA,I;AAAA;;;qEA/BzG,8J,IACI,oJ,IACI,uH,IAAI,iG,IAGJ;AAAA;AAAA;;AAAA;;;;;;;;;;AAAuC;;;;;AAAvC;AAAA,oB,GAAA,qK,EAAA;AAAA;AAAA;AAAA;AAAA,Q,EAAA,0M,EAAA,8N,GACI,gJ,IACI,iJ,IAAyB,gG,IACzB;AAAA;;AAAA;;;;;;;;;;;;;;;;;;;;;OAAA,E,IAAA,E,IAAA,C;;;gBAA0E;AAAA;AAAA,Q,EAA1E,yV,EAAA;AAAA;AAAA,+E,EAAA;AAAA;AAAA,c,EAAA,gM,EAAA,mN,GACA,mI,GAAA;AAAA;AAAA,c,GAMJ,iJ,IACI,iJ,IAAyB,6F,IACzB;AAAA;;AAAA;;;;;;;;;;;;;;;;;;;;;OAAA,E,IAAA,E,IAAA,C;;;gBAA0E;AAAA;AAAA,Q,EAA1E,yV,EAAA;AAAA;AAAA,+E,EAAA;AAAA;AAAA,c,EAAA,gM,EAAA,mN,GACA,mI,GAAA;AAAA;AAAA,c,GAMJ,iJ,IACI,qJ,IAA6B,uG,IAC7B;AAAA;;AAAA;;;;;;;;;;;;;;;;;;;;;OAAA,E,IAAA,E,IAAA,C;;;gBAA8E;AAAA;AAAA,Q,EAA9E,yV,EAAA;AAAA;AAAA,+E,EAAA;AAAA;AAAA,c,EAAA,gM,EAAA,mN,GACA,mI,GAAA;AAAA;AAAA,c,GASJ,gJ,IACI,2J,IAAmC,oG,IAEnC;AAAA;AAlCF,2BAAgC,mBAAhC;;AAAN,sBAAM,SAAN;;AAG6D;;AAAqB,4DAA2F,mBAA3F,CAA2F,QAA3F,CAA2F,WAA3F,CAA2F,OAA3F;;AAA1E,uBAAqD,UAArD,EAA0E,UAA1E;;AAAuB;;AAAvB,uBAAuB,UAAvB;;AACK,6CAAqE,mBAArE,CAAqE,QAArE,CAAqE,WAArE,CAAqE,OAArE;;AAAL,uBAAK,UAAL;;AAQqD;;AAAqB,4DAA2F,mBAA3F,CAA2F,QAA3F,CAA2F,WAA3F,CAA2F,OAA3F;;AAA1E,uBAAqD,UAArD,EAA0E,UAA1E;;AAAuB;;AAAvB,uBAAuB,UAAvB;;AACK,6CAAqE,mBAArE,CAAqE,QAArE,CAAqE,WAArE,CAAqE,OAArE;;AAAL,uBAAK,UAAL;;AAQyD;;AAAqB,4DAA+F,mBAA/F,CAA+F,QAA/F,CAA+F,eAA/F,CAA+F,OAA/F;;AAA9E,uBAAyD,UAAzD,EAA8E,UAA9E;;AAAuB;;AAAvB,uBAAuB,UAAvB;;AACK,6CAAyE,mBAAzE,CAAyE,QAAzE,CAAyE,eAAzE,CAAyE,OAAzE;;AAAL,uBAAK,UAAL;AAA8E,O,EAAA;AAtBtF;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAGQ;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AASA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AASA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAgL,O;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QChBnLmD,iC;;;AAIX,iDACU3F,IADV,EAEUvB,MAFV,EAGUwB,WAHV,EAGkC;AAAA;;AAFxB,aAAAD,IAAA,GAAAA,IAAA;AACA,aAAAvB,MAAA,GAAAA,MAAA;AACA,aAAAwB,WAAA,GAAAA,WAAA;AALV,aAAAC,SAAA,GAAY,KAAZ;AAOI,aAAK0F,kBAAL,GAA0B,KAAK3F,WAAL,CAAiBO,KAAjB,CAAuB;AAC/CqF,qBAAW,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CAC/B,0DAAWnF,QADoB,CAApB,CADkC;AAI/CoF,qBAAW,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CAC/B,0DAAWpF,QADoB,CAApB,CAJkC;AAO/CqF,yBAAe,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CACnC,0DAAWrF,QADwB,EAEnC,0DAAWsF,OAAX,CAAmB,IAAnB,CAFmC,CAApB;AAP8B,SAAvB,CAA1B;AAYD;;;;mCAEU,CAEV;;;mCAEgB;;;;;;;;;AACf,yBAAK9F,SAAL,GAAiB,IAAjB;AACIqB,yB,GAAQ,KAAKqE,kBAAL,CAAwBzE,QAAxB,CAAiC4E,eAAjC,CAAiDxE,K;AAE7D,yBAAKqE,kBAAL,CAAwBK,aAAxB,CAAsC,iBAAtC;AACA,yBAAKL,kBAAL,CAAwBM,UAAxB,CAAmC,iBAAnC,EACE,IAAI,0DAAJ,CAAgB3E,KAAhB,EAAuB,CACrB,0DAAWb,QADU,EAErB,0DAAWsF,OAAX,CAAmB,MAAI,KAAKJ,kBAAL,CAAwBzE,QAAxB,CAAiC2E,WAAjC,CAA6CvE,KAAjD,GAAuD,GAA1E,CAFqB,CAAvB,CADF,E,CAMA;;yBACI,KAAKqE,kBAAL,CAAwBvE,O;;;;;;;;;AAIlB,2BAAM,KAAK8E,cAAL,CAAoB,KAAKP,kBAAL,CAAwBzE,QAAxB,CAAiC0E,WAAjC,CAA6CtE,KAAjE,EAAwE,KAAKqE,kBAAL,CAAwBzE,QAAxB,CAAiC2E,WAAjC,CAA6CvE,KAArH,CAAN;;;AAANG,uB;;AAEJ,wBAAGA,GAAG,CAACC,MAAJ,IAAc,GAAjB,EAAsB;AAChBoC,0BADgB,GACTrC,GAAG,CAACqC,IADK;AAEhBsB,8BAFgB,GAELjF,IAAI,CAACC,KAAL,CAAWD,IAAI,CAAC+D,SAAL,CAAeJ,IAAf,CAAX,CAFK;AAGhBlF,2BAHgB,GAGRwG,QAAQ,CAACxG,KAHD;AAIpBC,kCAAY,CAAC0G,OAAb,CAAqB,qBAArB,EAA2C3G,KAA3C;AACAyB,2BAAK,CAAC,yCAAD,CAAL;AACA,2BAAK7B,MAAL,CAAYE,QAAZ,CAAqB,CAAC,iBAAD,CAArB;AACD,qBAPD,MAOO,IAAG+C,GAAG,CAACC,MAAJ,IAAc,GAAjB,EAAsB;AAC3BrB,2BAAK,CAAC,kEAAD,CAAL;AACAxB,kCAAY,CAAC+C,UAAb,CAAwB,qBAAxB;AACA/C,kCAAY,CAAC+C,UAAb,CAAwB,cAAxB;AACA,2BAAKpD,MAAL,CAAYE,QAAZ,CAAqB,CAAC,kBAAD,CAArB;AACD,qBALM,MAKA,IAAG+C,GAAG,CAACC,MAAJ,IAAc,GAAjB,EAAsB;AAC3BrB,2BAAK,CAAC,mFAAD,CAAL;AACD;;;;;;;;;AACF;;;uCAEqB8F,M,EAAgBC,M,EAAc;AAClD,cAAIxC,IAAI,GAAGzD,IAAI,CAACC,KAAL,CAAWvB,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAX,EAAiDuG,OAA5D;AACA,cAAIzG,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,qBAArB,CAAZ;AAEAqH,gBAAM,GAAGV,IAAI,CAACU,MAAD,CAAb;AACAC,gBAAM,GAAGX,IAAI,CAACW,MAAD,CAAb;AAEA,cAAMpE,OAAO,GAAG,IAAI,gEAAJ,GACTC,GADS,CACL,eADK,EACY,YAAYrD,KADxB,CAAhB;AAGA,iBAAO,KAAKmB,IAAL,CAAU0C,GAAV,CACL,8BAA8BmB,IADzB,EAEL;AAAC,sBAAWuC,MAAZ;AAAoB,sBAAWC;AAA/B,WAFK,EAGL;AAACpE,mBAAO,EAAEA,OAAV;AAAmBG,mBAAO,EAAE,UAA5B;AAAwCC,wBAAY,EAAE;AAAtD,WAHK,EAILC,SAJK,GAIOlF,IAJP,CAIY,UAASsE,GAAT,EAAc;AAC/B,mBAAOA,GAAP;AACD,WANM,EAMJa,KANI,CAME,UAASC,GAAT,EAAY;AACnB,mBAAOA,GAAP;AACD,WARM,CAAP;AASD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;qEClFG;AAAA;AAAA,oBAAqE,UAArE;;AAA2C;;;;;AAA3C;AAAA,oB,IAAqE,0F,IAErE,I,EAAA,I;AAAA;;;qEAKM;AAAA;;AAAA;;;;;;;;;;;;;;;;OAAA,E,wGAAA,E,4GAAA,C;;iBAAsD,2E,IAAI;AAApB;;AAAtC,sBAAsC,SAAtC;AAAqD,O,EAAA;AAArD;;AAAA;;AAAA;AAAsD,O;AAAA;;;qEACtD,oL,GAAA,+Q,GAAuC,+E,IAAA,I,EAAA;AAAA;;AAAA;AAAuB,O;AAAA;;;qEAI9D;AAAA;;AAAA;;;;;;;;;;;;;;;;OAAA,E,wGAAA,E,4GAAA,C;;iBAAsD,+E,IAAQ;AAAxB;;AAAtC,sBAAsC,SAAtC;AAAqD,O,EAAA;AAArD;;AAAA;;AAAA;AAAsD,O;AAAA;;;qEACtD,oL,GAAA,+Q,GAAuC,+E,IAAA,I,EAAA;AAAA;;AAAA;AAAyB,O;AAAA;;;qEAIhE;AAAA;;AAAA;;;;;;;;;;;;;;;;OAAA,E,wGAAA,E,4GAAA,C;;iBAAsD,uF,IAAa;AAA7B;;AAAtC,sBAAsC,SAAtC;AAAqD,O,EAAA;AAArD;;AAAA;;AAAA;AAAsD,O;AAAA;;;qEACtD,oL,GAAA,+Q,GAAuC,+E,IAAA,I,EAAA;AAAA;;AAAA;AAAgC,O;AAAA;;;qEAIvE;AAAA;;AAAA;;;;;;;;;;;;;;;;OAAA,E,wGAAA,E,4GAAA,C;;iBAAsD,qF,IAAc;AAA9B;;AAAtC,sBAAsC,SAAtC;AAAqD,O,EAAA;AAArD;;AAAA;;AAAA;AAAsD,O;AAAA;;;qEACtD,oL,GAAA,+Q,GAAuC,+E,IAAA,I,EAAA;AAAA;;AAAA;AAAiC,O;AAAA;;;qEAItE;AAAA;;AAAA;;;;;;;;;;;;;;;;OAAA,E,wGAAA,E,4GAAA,C;;iBAAsD,sF,IAAe;AAA/B;;AAAtC,sBAAsC,SAAtC;AAAqD,O,EAAA;AAArD;;AAAA;;AAAA;AAAsD,O;AAAA;;;qEACtD,oL,GAAA,+Q,GAAuC,+E,IAAA,I,EAAA;AAAA;;AAAA;AAAmC,O;AAAA;;;qEAI1E;AAAA;;AAAA;;;;;;;;;;;;;;;;OAAA,E,wGAAA,E,4GAAA,C;;iBAAsD,kF,IAAW;AAA3B;;AAAtC,sBAAsC,SAAtC;AAAqD,O,EAAA;AAArD;;AAAA;;AAAA;AAAsD,O;AAAA;;;qEACtD,oL,GAAA,+Q,GAAuC,+E,IAAA,I,EAAA;AAAA;;AAAA;AAAmC,O;AAAA;;;qEAI1E;AAAA;;AAAA;;;;;;;;;;;;;;;;OAAA,E,wGAAA,E,4GAAA,C;;iBAAsD,qF,IAAW;AAA3B;;AAAtC,sBAAsC,SAAtC;AAAqD,O,EAAA;AAArD;;AAAA;;AAAA;AAAsD,O;AAAA;;;qEACtD,oL,GAAA,+Q,GAAuC,+E,IAAA,I,EAAA;AAAA;;AAAA;AAAmC,O;AAAA;;;qEAI1E,sM,GAAA,qR,GAAuC,oF,IAAU,I,EAAA,I;AAAA;;;qEAE7C;AAAA;AAAA,oBAAwE,UAAxE;;AAAyC;;;;;AAAzC;AAAA,oB,IAAwE,kF,IAExE,I,EAAA,I;AAAA;;;qEACA;AAAA;AAAA,oBAA4E,UAA5E;;AAA2C;;;;;AAA3C;AAAA,oB,IAA4E,oF,IAE5E,I,EAAA,I;AAAA;;;qEANJ,oL,GAAA,+Q,GACI,8H,GAAA;AAAA;AAAA,c,GAGA,8H,GAAA;AAAA;AAAA,c,GAA4E;AAAA;AAHpE,2BAAe,QAAf;;AAAR,sBAAQ,SAAR;;AAGQ,2BAAe,QAAf;;AAAR,sBAAQ,SAAR;AAAuB,O,EAAA,I;AAAA;;;qEAM/B,uY,GAAA,6M,EAAA,2J,GAAuD,I,EAAA,I;AAAA;;;qEACvD,6W,GAAA,iM,EAAA,qJ,GAA6D,I,EAAA,I;AAAA;;;;;;;WA/DzE,yJ,IACI,sJ,IACI,uH,IAAI,qF,IAIJ,qmC,GAAA,gO,EAAA,uvB,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,GACI;AAAA;AAAA;;AAAA;;;;;;;;;;;;;;;AAAmC;;;;;AAAnC;AAAA,oB,GAAA;AAAA;AAAA,c,EAAA,wO,GAEJ,6H,GAAA;AAAA;AAAA,c,GAIA,qZ,GAAA,qM,EAAA;AAAA;AAAA,c,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA,2J,EAAA,sM,GAEI,2H,GAAA,0K,EAAA;AAAA;AAAA,c,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA,kN,GACE,sH,GAAA,yN,EAAA,0N,GACA,sH,GAAA,mN,EAAA,8M,GAGF,2H,GAAA,0K,EAAA;AAAA;AAAA,c,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA,kN,GACE,sH,GAAA,yN,EAAA,0N,GACA,sH,GAAA,mN,EAAA,8M,GAGF,2H,GAAA,0K,EAAA;AAAA;AAAA,c,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA,kN,GACE,sH,GAAA,yN,EAAA,0N,GACA,sH,GAAA,mN,EAAA,8M,GAGF,2H,GAAA,0K,EAAA;AAAA;AAAA,c,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA,kN,GACE,sH,GAAA,yN,EAAA,0N,GACA,sH,GAAA,mN,EAAA,8M,GAGF,2H,GAAA,0K,EAAA;AAAA;AAAA,c,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA,kN,GACI,uH,GAAA,yN,EAAA,0N,GACA,uH,GAAA,mN,EAAA,8M,GAGJ,2H,GAAA,0K,EAAA;AAAA;AAAA,c,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA,kN,GACI,uH,GAAA,0N,EAAA,0N,GACA,uH,GAAA,oN,EAAA,8M,GAGJ,4H,GAAA,0K,EAAA;AAAA;AAAA,c,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA,kN,GACI,uH,GAAA,0N,EAAA,0N,GACA,uH,GAAA,oN,EAAA,8M,GAGJ,4H,GAAA,0K,EAAA;AAAA;AAAA,c,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA,kN,GACI,uH,GAAA,0N,EAAA,0N,GACA,uH,GAAA,oN,EAAA,8M,GAUJ,uH,GAAA;AAAA;AAAA,c,EAAA,wN,GACA,uH,GAAA;AAAA;AAAA,c,EAAA,4M,GAGJ,oX,GAAA;AAAA;AAAA;AAAA,c,EAAiD,0D,GAAqC;AAAA;AA3DjB;;AAAjE,uBAAiE,UAAjE;;AAEuB,4BAAe,QAAf;;AAA3B,uBAA2B,UAA3B;;AAIiB,4BAAyB,WAAzB;;AAAjB,uBAAiB,UAAjB;;AAAA;;AAEkB;;AAAd,uBAAc,UAAd;;AAKc;;AAAd,uBAAc,UAAd;;AAKc;;AAAd,uBAAc,UAAd;;AAKc;;AAAd,uBAAc,UAAd;;AAKc;;AAAd,uBAAc,UAAd;;AAKc;;AAAd,uBAAc,UAAd;;AAKc;;AAAd,wBAAc,UAAd;;AAKc;;AAAd,wBAAc,UAAd;;AAYmB,4BAAmC,iBAAnC;;AAAnB,wBAAmB,UAAnB;;AACY,4BAAgD,iBAAhD;;AAAZ,wBAAY,UAAZ;;AAGW,4BAAiC,WAAjC,CAAiC,IAAjC,CAAiC,MAAjC;;AAAkC;;AAAjD,wBAAe,UAAf,EAAiD,UAAjD;AAAsF,O,EAAA;AA5DtF;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACI;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAA0F,O;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QC0BzF8D,2B;;;AAmBX,2CACUtG,IADV,EAEUvB,MAFV,EAGUmE,MAHV,EAG2B;AAAA;;AAFjB,aAAA5C,IAAA,GAAAA,IAAA;AACA,aAAAvB,MAAA,GAAAA,MAAA;AACA,aAAAmE,MAAA,GAAAA,MAAA;AAjBV,aAAAC,gBAAA,GAA6B,CAC3B,WAD2B,EAE3B,aAF2B,EAG3B,oBAH2B,EAI3B,qBAJ2B,EAK3B,uBAL2B,EAM3B,cAN2B,EAO3B,cAP2B,EAQ3B,SAR2B,CAA7B;AAUA,aAAA0D,QAAA,GAAsB,EAAtB;AACA,aAAAxD,OAAA,GAAU,KAAKC,WAAL,EAAV;AAQE,aAAKwD,eAAL;AACD;;;;mCAEO;AACN,eAAKtD,UAAL,GAAkB,IAAI,0EAAJ,CAAuB,KAAKqD,QAA5B,CAAlB,CADM,CAEN;;AACA,eAAKrD,UAAL,CAAgBC,SAAhB,GAA4B,KAAKA,SAAjC,CAHM,CAIN;;AACA,eAAKD,UAAL,CAAgBE,IAAhB,GAAuB,KAAKA,IAA5B;AACD;;;oCAEWC,K,EAAc;AACxB;AACA,cAAMC,WAAW,GAAID,KAAK,CAACE,MAAN,CAAkChC,KAAvD;;AACA,eAAK2B,UAAL,CAAgBuD,eAAhB,GAAkC,UAAC3G,IAAD,EAAO0D,MAAP,EAA0B;AAC1D,gBAAMkD,WAAW,GAAG,SAAdA,WAAc,CAACC,WAAD,EAAclB,GAAd,EAAsB;AACxC,kBAAI,OAAO3F,IAAI,CAAC2F,GAAD,CAAX,KAAqB,QAAzB,EAAmC;AACjC,qBAAK,IAAMmB,CAAX,IAAgB9G,IAAI,CAAC2F,GAAD,CAApB,EAA2B;AACzB,sBAAGmB,CAAC,KAAK,YAAT,EAAsB;AACpB,2BAAOD,WAAW,GAAG7G,IAAI,CAAC+G,QAAL,CAAcC,YAAnC;AACD,mBAFD,MAEO,IAAGF,CAAC,KAAK,YAAT,EAAsB;AAC3B,2BAAOD,WAAW,GAAG7G,IAAI,CAACiH,QAAL,CAAcC,YAAnC;AACD;AACF;AACF,eARD,MAQO;AACL,uBAAOL,WAAW,GAAG7G,IAAI,CAAC2F,GAAD,CAAzB;AACD;AACF,aAZD;;AAaA,gBAAMwB,OAAO,GAAGC,MAAM,CAAC1J,IAAP,CAAYsC,IAAZ,EAAkBqH,MAAlB,CAAyBT,WAAzB,EAAsC,EAAtC,EAA0ChD,WAA1C,EAAhB,CAd0D,CAe1D;;AACA,gBAAM0D,iBAAiB,GAAG5D,MAAM,CAACC,IAAP,GAAcC,WAAd,EAA1B;AACA,mBAAOuD,OAAO,CAACI,OAAR,CAAgBD,iBAAhB,MAAuC,CAAC,CAA/C;AACD,WAlBD;;AAmBA,eAAKlE,UAAL,CAAgBM,MAAhB,GAAyBF,WAAW,CAACG,IAAZ,GAAmBC,WAAnB,EAAzB,CAtBwB,CAwBxB;;AACA,cAAI,KAAKR,UAAL,CAAgBC,SAApB,EAA+B;AAC7B,iBAAKD,UAAL,CAAgBC,SAAhB,CAA0BQ,SAA1B;AACD;AACF;;;sCAEU;AACT,cAAIC,OAAO,GAAG9E,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAd;;AACA,cAAG6E,OAAO,IAAI,IAAd,EAAmB;AACjB,gBAAIC,IAAI,GAAGzD,IAAI,CAACC,KAAL,CAAWuD,OAAX,CAAX;;AACA,gBAAGC,IAAI,CAAC1D,SAAL,IAAkB,OAArB,EAA6B;AAC3B,qBAAO,IAAP;AACD;;AACD,mBAAO,KAAP;AACD;;AACD,iBAAO,KAAP;AACD,S,CAID;;;;0CAEwB;;;;;;;;;;;AACZ,2BAAM,KAAKmH,WAAL,EAAN;;;AAAN5F,uB;;0BACDA,GAAG,CAACC,MAAJ,IAAc,G;;;;;AACXoC,wB,GAAkBrC,GAAG,CAACqC,I;;;;;;AAC1B,sCAAmBA,IAAnB,2HAAwB;AAAhBwD,6BAAgB;AACtBvD,6BAAO,CAACC,GAAR,CAAYsD,OAAZ;AACIC,iCAFkB,GAEKpH,IAAI,CAACC,KAAL,CAAWD,IAAI,CAAC+D,SAAL,CAAeoD,OAAf,CAAX,CAFL;AAGtBvD,6BAAO,CAACC,GAAR,CAAYuD,WAAZ;AACA,2BAAKjB,QAAL,CAAcnC,IAAd,CAAmBoD,WAAnB;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACD,yBAAKtE,UAAL,GAAkB,IAAI,0EAAJ,CAAuB,KAAKqD,QAA5B,CAAlB;AACA,yBAAKrD,UAAL,CAAgBC,SAAhB,GAA4B,KAAKA,SAAjC;AACA,yBAAKD,UAAL,CAAgBE,IAAhB,GAAuB,KAAKA,IAA5B;;;;;AACK,wBAAG1B,GAAG,CAACC,MAAJ,IAAc,GAAjB,EAAsB;AAC3BrB,2BAAK,CAAC,kEAAD,CAAL;AACAxB,kCAAY,CAAC+C,UAAb,CAAwB,qBAAxB;AACA/C,kCAAY,CAAC+C,UAAb,CAAwB,cAAxB;AACA,2BAAKpD,MAAL,CAAYE,QAAZ,CAAqB,CAAC,kBAAD,CAArB;AACD;;;;;;;;;AACF;;;sCAEiB;AAChB,cAAIE,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,qBAArB,CAAZ;AACA,cAAMkD,OAAO,GAAG,IAAI,gEAAJ,GACTC,GADS,CACL,eADK,EACY,YAAYrD,KADxB,CAAhB;AAGA,iBAAO,KAAKmB,IAAL,CAAUqE,GAAV,CACL,2DADK,EAEL;AAACpC,mBAAO,EAAEA,OAAV;AAAmBG,mBAAO,EAAE,UAA5B;AAAwCC,wBAAY,EAAE;AAAtD,WAFK,EAGLC,SAHK,GAGOlF,IAHP,CAGY,UAASsE,GAAT,EAAc;AAC/B,mBAAOA,GAAP;AACD,WALM,EAKJa,KALI,CAKE,UAASC,GAAT,EAAY;AACnB,mBAAOA,GAAP;AACD,WAPM,CAAP;AAQD;;;wCAEe;AACd,cAAMzC,SAAS,GAAG,KAAK6C,MAAL,CAAY0B,IAAZ,CAAiB,6GAAjB,EAA6C;AAC7DC,iBAAK,EAAE,OADsD;AAE7DC,kBAAM,EAAE,OAFqD;AAG7D1E,gBAAI,EAAE;AAHuD,WAA7C,CAAlB;AAMAC,mBAAS,CAAC0E,WAAV,GAAwBC,SAAxB,CAAkC,UAASC,MAAT,EAAe;AAC/C,gBAAGA,MAAM,CAAChD,MAAP,IAAiB,MAApB,EAA2B;AACzBG,oBAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD;AACF,WAJD;AAKD;;;sCAEmBuF,O,EAAkB;;;;;;;;;AAChC3C,gC,GAAeC,OAAO,CAAC,qFAAD,C;;wBACtBD,Y;;;;;;;;;AAIM,2BAAM,KAAK6C,aAAL,CAAmBF,OAAnB,CAAN;;;AAAN7F,uB;;AACJ,wBAAGA,GAAG,CAACC,MAAJ,IAAc,GAAjB,EAAsB;AACpBrB,2BAAK,CAAC,wCAAD,CAAL;AACAwB,4BAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD,qBAHD,MAGO,IAAGN,GAAG,CAACC,MAAJ,IAAc,GAAjB,EAAsB;AAC3BrB,2BAAK,CAAC,kEAAD,CAAL;AACAxB,kCAAY,CAAC+C,UAAb,CAAwB,qBAAxB;AACA/C,kCAAY,CAAC+C,UAAb,CAAwB,cAAxB;AACA,2BAAKpD,MAAL,CAAYE,QAAZ,CAAqB,CAAC,kBAAD,CAArB;AACD,qBALM,MAKA,IAAG+C,GAAG,CAACC,MAAJ,IAAc,GAAjB,EAAsB;AAC3BrB,2BAAK,CAAC,uBAAD,CAAL;AACD;;;;;;;;;AACF;;;sCAEaiH,O,EAAgB;AAC5B,cAAI1I,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,qBAArB,CAAZ;AAEA,cAAMkD,OAAO,GAAG,IAAI,gEAAJ,GACTC,GADS,CACL,eADK,EACY,YAAYrD,KADxB,CAAhB;AAGA,iBAAO,KAAKmB,IAAL,CAAU0C,GAAV,CACL,iCAAiC6E,OAAO,CAACG,SADpC,EAEL;AACE,2BAAgBH,OAAO,CAACI,WAD1B;AAEE,kCAAuBJ,OAAO,CAACK,kBAFjC;AAGE,gCAAqBL,OAAO,CAACM,mBAH/B;AAIE,2BAAeN,OAAO,CAACO,WAJzB;AAKE,sBAAW,OALb;AAME,0BAAcP,OAAO,CAACV,QAAR,CAAiBkB,UANjC;AAOE,qCAAyBR,OAAO,CAACS;AAPnC,WAFK,EAWL;AAAC/F,mBAAO,EAAEA,OAAV;AAAmBG,mBAAO,EAAE,UAA5B;AAAwCC,wBAAY,EAAE;AAAtD,WAXK,EAYLC,SAZK,GAYOlF,IAZP,CAYY,UAASsE,GAAT,EAAc;AAC/B,mBAAOA,GAAP;AACD,WAdM,EAcJa,KAdI,CAcE,UAASC,GAAT,EAAY;AACnB,mBAAOA,GAAP;AACD,WAhBM,CAAP;AAiBD;;;oCAEW+E,O,EAAkB;AAC5B,cAAMxH,SAAS,GAAG,KAAK6C,MAAL,CAAY0B,IAAZ,CAAiB,6GAAjB,EAA6C;AAC7DC,iBAAK,EAAE,OADsD;AAE7DC,kBAAM,EAAE,OAFqD;AAG7D1E,gBAAI,EAAEyH;AAHuD,WAA7C,CAAlB;AAMAxH,mBAAS,CAAC0E,WAAV,GAAwBC,SAAxB,CAAkC,UAASC,MAAT,EAAe;AAC/C,gBAAGA,MAAM,CAAChD,MAAP,IAAiB,MAApB,EAA2B;AACzBG,oBAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD;AACF,WAJD;AAKD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;qEC5NC,wL,GAAA,sW,GAAkD,0F,IAAgB;AAAlE;AAAA,O,EAAA;AAAA;;AAAA;AAAkD,O;AAAA;;;qEAClD,wL,GAAA,sW,GAAkD,6F,IAAmB;AAArE;AAAA,O,EAAA;AAAA;;AAAA;AAAkD,O;AAAA;;;qEAMtC,wH,IAA2E,qG,IAA2B,I,EAAA,I;AAAA;;;qEAD1G,qJ,IACI,4H,GAAA;AAAA;AAAA,c,GAA2E;AAAA;AAAtE,4CAAqE,YAArE,CAAqE,QAArE,CAAqE,WAArE,CAAqE,MAArE,CAAqE,QAArE;;AAAL,sBAAK,SAAL;AAA0E,O,EAAA,I;AAAA;;;qEAO1E,wH,IAAkF,8G,IAAiC,I,EAAA,I;AAAA;;;qEADvH,qJ,IACI,4H,GAAA;AAAA;AAAA,c,GAAkF;AAAA;AAA7E,4CAA4E,YAA5E,CAA4E,QAA5E,CAA4E,kBAA5E,CAA4E,MAA5E,CAA4E,QAA5E;;AAAL,sBAAK,SAAL;AAAiF,O,EAAA,I;AAAA;;;qEAOjF,wH,IAAmF,wG,IAA8B,I,EAAA,I;AAAA;;;qEADrH,qJ,IACI,4H,GAAA;AAAA;AAAA,c,GAAmF;AAAA;AAA9E,4CAA6E,YAA7E,CAA6E,QAA7E,CAA6E,mBAA7E,CAA6E,MAA7E,CAA6E,QAA7E;;AAAL,sBAAK,SAAL;AAAkF,O,EAAA,I;AAAA;;;qEAOlF,wH,IAAqF,2G,IAAiC,I,EAAA,I;AAAA;;;qEAD1H,qJ,IACI,6H,GAAA;AAAA;AAAA,c,GAAqF;AAAA;AAAhF,4CAA+E,YAA/E,CAA+E,QAA/E,CAA+E,qBAA/E,CAA+E,MAA/E,CAA+E,QAA/E;;AAAL,sBAAK,SAAL;AAAoF,O,EAAA,I;AAAA;;;qEAJ5F,gJ,IACI,0J,IAAmC,oF,IACnC;AAAA;;AAAA;;;;;;;;;;;;;;;;;;;;;OAAA,E,IAAA,E,IAAA,C;;;gBAAgF;AAAA;AAAA,Q,EAAhF,wV,EAAA;AAAA;AAAA,+E,EAAA;AAAA;AAAA,c,EAAA,gM,EAAA,mN,GACA,6H,GAAA;AAAA;AAAA,c,GAAuG;AAAA;AAD5C;;AAAqB,0DAA8F,YAA9F,CAA8F,QAA9F,CAA8F,qBAA9F,CAA8F,OAA9F;;AAAhF,sBAA2D,SAA3D,EAAgF,SAAhF;;AAAmB;;AAAnB,sBAAmB,SAAnB;;AACK,6CAAwE,YAAxE,CAAwE,QAAxE,CAAwE,qBAAxE,CAAwE,OAAxE;;AAAL,uBAAK,UAAL;AAA6E,O,EAAA;AAD7E;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAiL,O;AAAA;;;qEAS7K,2H,GAAA;AAAA;AAAA,c,EAAA;AAAA;AAAA,c,GAA2E,6E,IAAyB;AAAzD,0BAA+B,QAA/B,CAA+B,SAA/B,CAA+B,UAA/B;;AAA3C,sBAA2C,SAA3C;;AAA2C,0BAA+B,QAA/B,CAA+B,SAA/B,CAA+B,UAA/B;;AAA3C,sBAA2C,SAA3C;AAA0E,O,EAAA;AAAC;;AAAA;AAAyB,O;AAAA;;;qEAGpG,wH,IAAyE,8G,IAEzE,I,EAAA,I;AAAA;;;qEAHH,qJ,IACG,6H,GAAA;AAAA;AAAA,c,GAAyE;AAAA;AAApE,4CAAmE,YAAnE,CAAmE,QAAnE,CAAmE,QAAnE,CAAmE,MAAnE,CAAmE,QAAnE;;AAAL,sBAAK,SAAL;AAAwE,O,EAAA,I;AAAA;;;qEASxE,2H,GAAA;AAAA;AAAA,c,EAAA;AAAA;AAAA,c,GAA4E,6E,IAAyB;AAAzD,0BAA+B,QAA/B,CAA+B,SAA/B,CAA+B,UAA/B;;AAA5C,sBAA4C,SAA5C;;AAA4C,0BAA+B,QAA/B,CAA+B,SAA/B,CAA+B,UAA/B;;AAA5C,sBAA4C,SAA5C;AAA2E,O,EAAA;AAAC;;AAAA;AAAyB,O;AAAA;;;qEAGrG,wH,IAAyE,8G,IAEzE,I,EAAA,I;AAAA;;;qEAHH,qJ,IACG,6H,GAAA;AAAA;AAAA,c,GAAyE;AAAA;AAApE,4CAAmE,YAAnE,CAAmE,QAAnE,CAAmE,QAAnE,CAAmE,MAAnE,CAAmE,QAAnE;;AAAL,sBAAK,SAAL;AAAwE,O,EAAA,I;AAAA;;;qEAPhF,gJ,IACI,6I,IAAsB,uF,IACtB;AAAA;;AAAA;;;;;;;;;;;OAAA,E,IAAA,E,IAAA,C;;;;uaACI,wI,GAAA;AAAA;AAAA,c,EAAA;AAAA;AAAA,c,GAAiB,qG,IACjB,6H,GAAA;AAAA;AAAA,c,GAEH,6H,GAAA;AAAA;AAAA,c,GAA0F;AAAA;AAJ9D;;AAA7B,sBAA6B,SAA7B;;AACY;;AAAR,uBAAQ,SAAR;;AAAQ;;AAAR,uBAAQ,SAAR;;AACQ,4BAAmC,WAAnC;;AAAR,uBAAQ,UAAR;;AAEE,6CAA2D,YAA3D,CAA2D,QAA3D,CAA2D,QAA3D,CAA2D,OAA3D;;AAAL,uBAAK,UAAL;AAAgE,O,EAAA;AAJjE;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAwD,O;AAAA;;;qEAWxD;AAAA;AAAA,oBAAkF,UAAlF;;AAAQ;;;;;AAAR;AAAA,oB,IAAkF,iF,IAAO,I,EAAA,I;AAAA;;;qEACzF;AAAA;AAAA,oBAAkF,UAAlF;;AAAQ;;;;;AAAR;AAAA,oB,IAAkF,oF,IAAU,I,EAAA,I;AAAA;;;qEA1DxG,0I,IACI,4H,GAAA;AAAA;AAAA,c,GACA,4H,GAAA;AAAA;AAAA,c,GACA;AAAA;;AAAA;;;;;;;;;;;OAAA,E,IAAA,E,IAAA,C;;6bACI,iJ,IACI,iJ,IAAyB,8F,IACzB;AAAA;;AAAA;;;;;;;;;;;;;;;;;;;;;OAAA,E,IAAA,E,IAAA,C;;;gBAAsE;AAAA;AAAA,Q,EAAtE,yV,EAAA;AAAA;AAAA,+E,EAAA;AAAA;AAAA,c,EAAA,gM,EAAA,mN,GACA,4H,GAAA;AAAA;AAAA,c,GAIJ,iJ,IACI,wJ,IAAgC,yF,IAChC;AAAA;;AAAA;;;;;;;;;;;;;;;;;;;;;OAAA,E,IAAA,E,IAAA,C;;gBAA+C;AAAA;AAAA,Q,EAA/C,yV,EAAA;AAAA;AAAA,+E,EAAA;AAAA;AAAA,c,EAAA,gM,EAAA,mN,GACA,4H,GAAA;AAAA;AAAA,c,GAIJ,iJ,IACI,yJ,IAAiC,uF,IACjC;AAAA;;AAAA;;;;;;;;;;;;;;;;;;;;;OAAA,E,IAAA,E,IAAA,C;;;gBAA8E;AAAA;AAAA,Q,EAA9E,yV,EAAA;AAAA;AAAA,+E,EAAA;AAAA;AAAA,c,EAAA,gM,EAAA,mN,GACA,4H,GAAA;AAAA;AAAA,c,GAIJ,4H,GAAA;AAAA;AAAA,c,GAOA,iJ,IACI,8I,IAAsB,oF,IACtB;AAAA;;AAAA;;;;;;;;;;;OAAA,E,IAAA,E,IAAA,C;;;;waACI,yI,GAAA;AAAA;AAAA,c,EAAA;AAAA;AAAA,c,GAAiB,qG,IACjB,6H,GAAA;AAAA;AAAA,c,GAEH,6H,GAAA;AAAA;AAAA,c,GAML,6H,GAAA;AAAA;AAAA,c,GAYA,kJ,IACI,6H,GAAA;AAAA;AAAA,c,GACA,6H,GAAA;AAAA;AAAA,c,GACA;AAAA;AAAA,oBAAmD,UAAnD;;AAAQ;;;;;AAAR;AAAA,oB,IAAmD,kF,IAAQ;AAAA;AA1D9C;;AAArB,sBAAqB,SAArB;;AACqB;;AAArB,sBAAqB,SAArB;;AACM,2BAAyB,YAAzB;;AAAN,sBAAM,SAAN;;AAGyD;;AAAqB,4DAAoF,YAApF,CAAoF,QAApF,CAAoF,WAApF,CAAoF,OAApF;;AAAtE,uBAAiD,UAAjD,EAAsE,UAAtE;;AAAmB;;AAAnB,uBAAmB,UAAnB;;AACK,6CAA8D,YAA9D,CAA8D,QAA9D,CAA8D,WAA9D,CAA8D,OAA9D;;AAAL,uBAAK,UAAL;;AAM+C,4DAA2F,YAA3F,CAA2F,QAA3F,CAA2F,kBAA3F,CAA2F,OAA3F;;AAA/C,uBAA+C,UAA/C;;AAAU;;AAAV,uBAAU,UAAV;;AACK,6CAAqE,YAArE,CAAqE,QAArE,CAAqE,kBAArE,CAAqE,OAArE;;AAAL,uBAAK,UAAL;;AAMyD;;AAAqB,4DAA4F,YAA5F,CAA4F,QAA5F,CAA4F,mBAA5F,CAA4F,OAA5F;;AAA9E,uBAAyD,UAAzD,EAA8E,UAA9E;;AAAmB;;AAAnB,uBAAmB,UAAnB;;AACK,6CAAsE,YAAtE,CAAsE,QAAtE,CAAsE,mBAAtE,CAAsE,OAAtE;;AAAL,uBAAK,UAAL;;AAIoB;;AAAxB,uBAAwB,UAAxB;;AASiC;;AAA7B,uBAA6B,UAA7B;;AACY;;AAAR,uBAAQ,UAAR;;AAAQ;;AAAR,uBAAQ,UAAR;;AACQ,4BAAkC,UAAlC;;AAAR,uBAAQ,UAAR;;AAEE,6CAA2D,YAA3D,CAA2D,QAA3D,CAA2D,QAA3D,CAA2D,OAA3D;;AAAL,uBAAK,UAAL;;AAMmB;;AAAxB,uBAAwB,UAAxB;;AAayD;;AAArD,uBAAqD,UAArD;;AACqD;;AAArD,uBAAqD,UAArD;AAAiF,O,EAAA;AAvDzF;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAGQ;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAOA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAOA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAcA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAwD,O;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCQvDiG,0B;;;AAWX,0CAC+CnI,IAD/C,EAEUC,SAFV,EAGUC,IAHV,EAIUvB,MAJV,EAKUwB,WALV,EAKkC;AAAA;;AAJa,aAAAH,IAAA,GAAAA,IAAA;AACrC,aAAAC,SAAA,GAAAA,SAAA;AACA,aAAAC,IAAA,GAAAA,IAAA;AACA,aAAAvB,MAAA,GAAAA,MAAA;AACA,aAAAwB,WAAA,GAAAA,WAAA;AAbV,aAAAC,SAAA,GAAqB,KAArB;AAIA,aAAAgI,SAAA,GAAwB,EAAxB;AACA,aAAAC,UAAA,GAAyB,EAAzB;AAUE,YAAIhI,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWvB,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAX,EAAiDoB,SAAjE;;AACA,YAAGA,SAAS,IAAI,OAAhB,EAAwB;AACtBG,eAAK,CAAC,kGAAD,CAAL;AACA,eAAK7B,MAAL,CAAYE,QAAZ,CAAqB,CAAC,qBAAD,CAArB;AACD;;AACD,aAAKyJ,WAAL,GAAmB,KAAKnI,WAAL,CAAiBO,KAAjB,CAAuB;AACxCmH,qBAAW,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CAC/B,0DAAWjH,QADoB,CAApB,CAD2B;AAIxCkH,4BAAkB,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CACtC,0DAAWlH,QAD2B,CAApB,CAJoB;AAOxCmH,6BAAmB,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CACvC,0DAAWnH,QAD4B,CAApB,CAPmB;AAUxCsH,+BAAqB,EAAE,IAAI,0DAAJ,CAAgB,GAAhB,EAAqB,CAC1C,0DAAWtH,QAD+B,CAArB,CAViB;AAaxCmG,kBAAQ,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CAC5B,0DAAWnG,QADiB,CAApB,CAb8B;AAgBxCqG,kBAAQ,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CAC5B,0DAAWrG,QADiB,CAApB;AAhB8B,SAAvB,CAAnB;AAqBA,aAAK6G,OAAL,GAAezH,IAAf;;AACA,YAAG,KAAKyH,OAAL,IAAgB,IAAnB,EAAwB;AACtB,eAAKrG,QAAL,GAAgB,QAAhB;AACD,SAFD,MAEO;AACL,eAAKA,QAAL,GAAgB,QAAhB;AACA,cAAIC,QAAQ,GAAG,KAAKiH,WAAL,CAAiBjH,QAAhC;AACAA,kBAAQ,CAACwG,WAAT,CAAqBvG,QAArB,CAA8B,KAAKmG,OAAL,CAAaI,WAA3C;AACAxG,kBAAQ,CAACyG,kBAAT,CAA4BxG,QAA5B,CAAqC,KAAKmG,OAAL,CAAaK,kBAAlD;AACAzG,kBAAQ,CAAC0G,mBAAT,CAA6BzG,QAA7B,CAAsC,KAAKmG,OAAL,CAAaM,mBAAnD;AACA1G,kBAAQ,CAAC6G,qBAAT,CAA+B5G,QAA/B,CAAwC,KAAKmG,OAAL,CAAaS,qBAArD;AACA7G,kBAAQ,CAAC0F,QAAT,CAAkBzF,QAAlB,CAA2B,KAAKmG,OAAL,CAAaV,QAAb,CAAsBkB,UAAjD;AACA5G,kBAAQ,CAAC4F,QAAT,CAAkB3F,QAAlB,CAA2B,KAAKmG,OAAL,CAAaR,QAAb,CAAsBsB,UAAjD;AACD;AACF;;;;mCAEO;AACN,eAAKC,cAAL;AACA,eAAKC,eAAL;AACD;;;wCAEkB;;;;;;;;;AACjB,yBAAKrI,SAAL,GAAiB,IAAjB;;yBAEI,KAAKkI,WAAL,CAAiB/G,O;;;;;;;;AAIjBF,4B,GAAW,KAAKiH,WAAL,CAAiBjH,Q;AAChC,yBAAKoG,OAAL,GAAe;AACbG,+BAAS,EAAE,EADE;AAEbC,iCAAW,EAAExG,QAAQ,CAACwG,WAAT,CAAqBpG,KAFrB;AAGbqG,wCAAkB,EAAEzG,QAAQ,CAACyG,kBAAT,CAA4BrG,KAHnC;AAIbsG,yCAAmB,EAAE1G,QAAQ,CAAC0G,mBAAT,CAA6BtG,KAJrC;AAKbuG,iCAAW,EAAE,EALA;AAMbE,2CAAqB,EAAE,CANV;AAObxG,4BAAM,EAAE,IAPK;AAQbqF,8BAAQ,EAAE;AACRkB,kCAAU,EAAE5G,QAAQ,CAAC0F,QAAT,CAAkBtF,KADtB;AAERuF,oCAAY,EAAE;AAFN,uBARG;AAYbC,8BAAQ,EAAE;AACRsB,kCAAU,EAAElH,QAAQ,CAAC4F,QAAT,CAAkBxF,KADtB;AAERyF,oCAAY,EAAE;AAFN;AAZG,qBAAf;;AAkBU,2BAAM,KAAKwB,WAAL,CAAiB,KAAKjB,OAAtB,CAAN;;;AAAN7F,uB;;AAEJ,wBAAGA,GAAG,CAACC,MAAJ,IAAc,GAAjB,EAAsB;AACpBrB,2BAAK,CAAC,qCAAD,CAAL;AACA,2BAAKP,SAAL,CAAe6B,KAAf,CAAqB;AAAED,8BAAM,EAAE;AAAV,uBAArB;AACD,qBAHD,MAGO,IAAGD,GAAG,CAACC,MAAJ,IAAc,GAAjB,EAAsB;AAC3BrB,2BAAK,CAAC,kEAAD,CAAL;AACAxB,kCAAY,CAAC+C,UAAb,CAAwB,qBAAxB;AACA/C,kCAAY,CAAC+C,UAAb,CAAwB,cAAxB;AACAC,4BAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD;;;;;;;;;AACF;;;oCAEWuF,O,EAAgB;AAC1B,cAAI1I,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,qBAArB,CAAZ;AACA,cAAMkD,OAAO,GAAG,IAAI,gEAAJ,GACTC,GADS,CACL,eADK,EACY,YAAYrD,KADxB,CAAhB;AAGA,iBAAO,KAAKmB,IAAL,CAAUmC,IAAV,CACL,8BADK,EAEL;AACE,2BAAgBoF,OAAO,CAACI,WAD1B;AAEE,kCAAuBJ,OAAO,CAACK,kBAFjC;AAGE,mCAAwBL,OAAO,CAACM,mBAHlC;AAIE,2BAAgB,EAJlB;AAKE,0BAAcN,OAAO,CAACV,QAAR,CAAiBkB,UALjC;AAME,0BAAcR,OAAO,CAACR,QAAR,CAAiBsB;AANjC,WAFK,EAUL;AAACpG,mBAAO,EAAEA,OAAV;AAAmBG,mBAAO,EAAE,UAA5B;AAAwCC,wBAAY,EAAE;AAAtD,WAVK,EAWLC,SAXK,GAWOlF,IAXP,CAWY,UAASsE,GAAT,EAAc;AAC/B,mBAAOA,GAAP;AACD,WAbM,EAaJa,KAbI,CAaE,UAASC,GAAT,EAAY;AACnB,mBAAOA,GAAP;AACD,WAfM,CAAP;AAgBD;;;wCAEkB;;;;;;;;;AACjB,yBAAKtC,SAAL,GAAiB,IAAjB;;yBACI,KAAKkI,WAAL,CAAiB/G,O;;;;;;;;AAIjBF,4B,GAAW,KAAKiH,WAAL,CAAiBjH,Q;AAChC,yBAAKoG,OAAL,GAAe;AACbG,+BAAS,EAAE,KAAKH,OAAL,CAAaG,SADX;AAEbC,iCAAW,EAAExG,QAAQ,CAACwG,WAAT,CAAqBpG,KAFrB;AAGbqG,wCAAkB,EAAEzG,QAAQ,CAACyG,kBAAT,CAA4BrG,KAHnC;AAIbsG,yCAAmB,EAAE1G,QAAQ,CAAC0G,mBAAT,CAA6BtG,KAJrC;AAKbuG,iCAAW,EAAE,KAAKP,OAAL,CAAaO,WALb;AAMbE,2CAAqB,EAAE7G,QAAQ,CAAC6G,qBAAT,CAA+BzG,KANzC;AAObC,4BAAM,EAAE,IAPK;AAQbqF,8BAAQ,EAAE;AACRkB,kCAAU,EAAE5G,QAAQ,CAAC0F,QAAT,CAAkBtF,KADtB;AAERuF,oCAAY,EAAE;AAFN,uBARG;AAYbC,8BAAQ,EAAE;AACRsB,kCAAU,EAAE,KAAKd,OAAL,CAAaR,QAAb,CAAsBsB,UAD1B;AAERrB,oCAAY,EAAE,KAAKO,OAAL,CAAaR,QAAb,CAAsBC;AAF5B;AAZG,qBAAf;;AAkBU,2BAAM,KAAKyB,UAAL,CAAgB,KAAKlB,OAArB,CAAN;;;AAAN7F,uB;;AAEJ,wBAAGA,GAAG,CAACC,MAAJ,IAAc,GAAjB,EAAsB;AACpBrB,2BAAK,CAAC,0CAAD,CAAL;AACA,2BAAKP,SAAL,CAAe6B,KAAf,CAAqB;AAAED,8BAAM,EAAE;AAAV,uBAArB;AACD,qBAHD,MAGO,IAAGD,GAAG,CAACC,MAAJ,IAAc,GAAjB,EAAsB;AAC3BrB,2BAAK,CAAC,kEAAD,CAAL;AACAxB,kCAAY,CAAC+C,UAAb,CAAwB,qBAAxB;AACA/C,kCAAY,CAAC+C,UAAb,CAAwB,cAAxB;AACA,2BAAKpD,MAAL,CAAYE,QAAZ,CAAqB,CAAC,kBAAD,CAArB;AACD;;;;;;;;;AACF;;;mCAEU4I,O,EAAgB;AACzB,cAAI1I,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,qBAArB,CAAZ;AACA,cAAMkD,OAAO,GAAG,IAAI,gEAAJ,GACTC,GADS,CACL,eADK,EACY,YAAYrD,KADxB,CAAhB;AAGA,iBAAO,KAAKmB,IAAL,CAAU0C,GAAV,CACL,iCAAgC6E,OAAO,CAACG,SADnC,EAEL;AACE,2BAAgBH,OAAO,CAACI,WAD1B;AAEE,kCAAuBJ,OAAO,CAACK,kBAFjC;AAGE,gCAAqBL,OAAO,CAACM,mBAH/B;AAIE,2BAAeN,OAAO,CAACO,WAJzB;AAKE,sBAAWP,OAAO,CAAC/F,MALrB;AAME,0BAAc+F,OAAO,CAACV,QAAR,CAAiBkB,UANjC;AAOE,qCAAyBR,OAAO,CAACS;AAPnC,WAFK,EAWL;AAAC/F,mBAAO,EAAEA,OAAV;AAAmBG,mBAAO,EAAE,UAA5B;AAAwCC,wBAAY,EAAE;AAAtD,WAXK,EAYLC,SAZK,GAYOlF,IAZP,CAYY,UAASsE,GAAT,EAAc;AAC/B,mBAAOA,GAAP;AACD,WAdM,EAcJa,KAdI,CAcE,UAASC,GAAT,EAAY;AACnB,mBAAOA,GAAP;AACD,WAhBM,CAAP;AAiBD;;;yCAEsB;;;;;;;;;;;AACX,2BAAM,KAAKkG,YAAL,EAAN;;;AAANhH,uB;;0BAEDA,GAAG,CAACC,MAAJ,IAAc,G;;;;;AACXoC,wB,GAAmBrC,GAAG,CAACqC,I;;;;;;AAC3B,sCAAoBA,IAApB,2HAAyB;AAAjB8C,8BAAiB;AACnB8B,kCADmB,GACMvI,IAAI,CAACC,KAAL,CAAWD,IAAI,CAAC+D,SAAL,CAAe0C,QAAf,CAAX,CADN;AAEvB,2BAAKqB,SAAL,CAAe9D,IAAf,CAAoBuE,YAApB;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACI,wBAAGjH,GAAG,CAACC,MAAJ,IAAc,GAAjB,EAAsB;AAC3BrB,2BAAK,CAAC,kEAAD,CAAL;AACAxB,kCAAY,CAAC+C,UAAb,CAAwB,qBAAxB;AACA/C,kCAAY,CAAC+C,UAAb,CAAwB,cAAxB;AACA,2BAAKpD,MAAL,CAAYE,QAAZ,CAAqB,CAAC,kBAAD,CAArB;AACD;;;;;;;;;AACF;;;uCAEc;AACb,cAAIE,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,qBAArB,CAAZ;AACA,cAAMkD,OAAO,GAAG,IAAI,gEAAJ,GACTC,GADS,CACL,eADK,EACY,YAAYrD,KADxB,CAAhB;AAGA,iBAAO,KAAKmB,IAAL,CAAUqE,GAAV,CACL,8BADK,EAEL;AAACpC,mBAAO,EAAEA,OAAV;AAAmBG,mBAAO,EAAE,UAA5B;AAAwCC,wBAAY,EAAE;AAAtD,WAFK,EAGLC,SAHK,GAGOlF,IAHP,CAGY,UAASsE,GAAT,EAAc;AAC/B,mBAAOA,GAAP;AACD,WALM,EAKJa,KALI,CAKE,UAASC,GAAT,EAAY;AACnB,mBAAOA,GAAP;AACD,WAPM,CAAP;AAQD;;;0CAEuB;;;;;;;;;;;AACZ,2BAAM,KAAKoG,aAAL,EAAN;;;AAANlH,uB;;0BAEDA,GAAG,CAACC,MAAJ,IAAc,G;;;;;AACXoC,wB,GAAmBrC,GAAG,CAACqC,I;;;;;;AAC3B,sCAAoBA,IAApB,2HAAyB;AAAjBgD,8BAAiB;AACnB8B,kCADmB,GACMzI,IAAI,CAACC,KAAL,CAAWD,IAAI,CAAC+D,SAAL,CAAe4C,QAAf,CAAX,CADN;AAEvB,2BAAKoB,UAAL,CAAgB/D,IAAhB,CAAqByE,YAArB;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACI,wBAAGnH,GAAG,CAACC,MAAJ,IAAc,GAAjB,EAAsB;AAC3BrB,2BAAK,CAAC,kEAAD,CAAL;AACAxB,kCAAY,CAAC+C,UAAb,CAAwB,qBAAxB;AACA/C,kCAAY,CAAC+C,UAAb,CAAwB,cAAxB;AACA,2BAAKpD,MAAL,CAAYE,QAAZ,CAAqB,CAAC,kBAAD,CAArB;AACD;;;;;;;;;AACF;;;wCAEe;AACd,cAAIE,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,qBAArB,CAAZ;AACA,cAAMkD,OAAO,GAAG,IAAI,gEAAJ,GACTC,GADS,CACL,eADK,EACY,YAAYrD,KADxB,CAAhB;AAGA,iBAAO,KAAKmB,IAAL,CAAUqE,GAAV,CACL,+BADK,EAEL;AAACpC,mBAAO,EAAEA,OAAV;AAAmBG,mBAAO,EAAE,UAA5B;AAAwCC,wBAAY,EAAE;AAAtD,WAFK,EAGLC,SAHK,GAGOlF,IAHP,CAGY,UAASsE,GAAT,EAAc;AAC/B,mBAAOA,GAAP;AACD,WALM,EAKJa,KALI,CAKE,UAASC,GAAT,EAAY;AACnB,mBAAOA,GAAP;AACD,WAPM,CAAP;AAQD;;;sCAEU;AACT,eAAKzC,SAAL,CAAe6B,KAAf,CAAqB;AAAED,kBAAM,EAAE;AAAV,WAArB;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;qEC3RiB,wH,IAAqE,gH,IAAsC,I,EAAA,I;AAAA;;;qEAC3G,wH,IAAsE,sI,IAAyD,I,EAAA,I;AAAA;;;qEAC/H,wH,IAAsE,sI,IAAyD,I,EAAA,I;AAAA;;;qEAHnI,qJ,IACI,6H,GAAA;AAAA;AAAA,c,GACA,6H,GAAA;AAAA;AAAA,c,GACA,6H,GAAA;AAAA;AAAA,c,GAAsE;AAAA;AAFjE,4CAA+D,aAA/D,CAA+D,QAA/D,CAA+D,IAA/D,CAA+D,MAA/D,CAA+D,QAA/D;;AAAL,sBAAK,SAAL;;AACK,4CAAgE,aAAhE,CAAgE,QAAhE,CAAgE,IAAhE,CAAgE,MAAhE,CAAgE,SAAhE;;AAAL,sBAAK,SAAL;;AACK,4CAAgE,aAAhE,CAAgE,QAAhE,CAAgE,IAAhE,CAAgE,MAAhE,CAAgE,SAAhE;;AAAL,sBAAK,SAAL;AAAqE,O,EAAA,I;AAAA;;;qEAOrE,wH,IAAqE,+G,IAAqC,I,EAAA,I;AAAA;;;qEAD9G,qJ,IACI,6H,GAAA;AAAA;AAAA,c,GAAqE;AAAA;AAAhE,4CAA+D,aAA/D,CAA+D,QAA/D,CAA+D,IAA/D,CAA+D,MAA/D,CAA+D,QAA/D;;AAAL,sBAAK,SAAL;AAAoE,O,EAAA,I;AAAA;;;qEAOpE,wH,IAAyE,yG,IAA+B,I,EAAA,I;AAAA;;;qEAD5G,qJ,IACI,6H,GAAA;AAAA;AAAA,c,GAAyE;AAAA;AAApE,4CAAmE,aAAnE,CAAmE,QAAnE,CAAmE,QAAnE,CAAmE,MAAnE,CAAmE,QAAnE;;AAAL,sBAAK,SAAL;AAAwE,O,EAAA,I;AAAA;;;qEAOxE,wH,IAA0E,8G,IAE1E,I,EAAA,I;AAAA;;;qEAHJ,qJ,IACI,8H,GAAA;AAAA;AAAA,c,GAA0E;AAAA;AAArE,4CAAoE,aAApE,CAAoE,QAApE,CAAoE,QAApE,CAAoE,MAApE,CAAoE,QAApE;;AAAL,sBAAK,SAAL;AAAyE,O,EAAA,I;AAAA;;;qEASzE,wH,IAAgF,qH,IAEhF,I,EAAA,I;AAAA;;;qEACA,wH,IAA+E,wG,IAE/E,I,EAAA,I;AAAA;;;qEANJ,qJ,IACI,8H,GAAA;AAAA;AAAA,c,GAGA,8H,GAAA;AAAA;AAAA,c,GAA+E;AAAA;AAH1E,4CAA0E,aAA1E,CAA0E,QAA1E,CAA0E,eAA1E,CAA0E,MAA1E,CAA0E,QAA1E;;AAAL,sBAAK,SAAL;;AAGK,4CAAyE,aAAzE,CAAyE,QAAzE,CAAyE,eAAzE,CAAyE,MAAzE,CAAyE,OAAzE;;AAAL,sBAAK,SAAL;AAA8E,O,EAAA,I;AAAA;;;qEAS9E,2H,GAAA;AAAA;AAAA,c,EAAA;AAAA;AAAA,c,GAAsE,6E,IAAqC;AAA5D,0BAAsB,QAAtB,CAAsB,SAAtB;;AAA/C,sBAA+C,SAA/C;;AAA+C,0BAAsB,QAAtB,CAAsB,SAAtB;;AAA/C,sBAA+C,SAA/C;AAAqE,O,EAAA;AAAA;AAAC;;AAAA;AAAqC,O;AAAA;;;qEAG3G,wH,IAA2E,8G,IAE3E,I,EAAA,I;AAAA;;;qEAHH,qJ,IACG,8H,GAAA;AAAA;AAAA,c,GAA2E;AAAA;AAAtE,4CAAqE,aAArE,CAAqE,QAArE,CAAqE,SAArE,CAAqE,MAArE,CAAqE,QAArE;;AAAL,sBAAK,SAAL;AAA0E,O,EAAA,I;AAAA;;;qEA5D9F,wJ,IACI,oJ,IACI,uH,IAAI,mG,IAGJ,uH,IAAI,+G,IAGJ;AAAA;AAAA;;AAAA;;;;;;;;;;AAAiC;;;;;AAAjC;AAAA,oB,GAAA,qK,EAAA;AAAA;AAAA;AAAA;AAAA,Q,EAAA,0M,EAAA,+N,GACI,iJ,IACI,0I,IAAkB,2F,IAClB;AAAA;;AAAA;;;;;;;;;;;;;;;;;;;;;OAAA,E,IAAA,E,IAAA,C;;;gBAA+D;AAAA;AAAA,Q,EAA/D,yV,EAAA;AAAA;AAAA,+E,EAAA;AAAA;AAAA,c,EAAA,gM,EAAA,mN,GACA,6H,GAAA;AAAA;AAAA,c,GAMJ,iJ,IACI,0I,IAAkB,oF,IAClB;AAAA;;AAAA;;;;;;;;;;;;;;;;;;;;;OAAA,E,IAAA,E,IAAA,C;;;gBAA+D;AAAA;AAAA,Q,EAA/D,yV,EAAA;AAAA;AAAA,+E,EAAA;AAAA;AAAA,c,EAAA,gM,EAAA,mN,GACA,6H,GAAA;AAAA;AAAA,c,GAIJ,iJ,IACI,8I,IAAsB,oF,IACtB;AAAA;;AAAA;;;;;;;;;;;;;;;;;;;;;OAAA,E,IAAA,E,IAAA,C;;;gBAAmE;AAAA;AAAA,Q,EAAnE,yV,EAAA;AAAA;AAAA,+E,EAAA;AAAA;AAAA,c,EAAA,gM,EAAA,mN,GACA,6H,GAAA;AAAA;AAAA,c,GAIJ,iJ,IACI,8I,IAAsB,wF,IACtB;AAAA;;AAAA;;;;;;;;;;;;;;;;;;;;;OAAA,E,IAAA,E,IAAA,C;;;gBAAuE;AAAA;AAAA,Q,EAAvE,yV,EAAA;AAAA;AAAA,+E,EAAA;AAAA;AAAA,c,EAAA,gM,EAAA,mN,GACA,6H,GAAA;AAAA;AAAA,c,GAMJ,iJ,IACI,qJ,IAA6B,wG,IAC7B;AAAA;;AAAA;;;;;;;;;;;;;;;;;;;;;OAAA,E,IAAA,E,IAAA,C;;;gBAA8E;AAAA;AAAA,Q,EAA9E,yV,EAAA;AAAA;AAAA,+E,EAAA;AAAA;AAAA,c,EAAA,gM,EAAA,mN,GACA,8H,GAAA;AAAA;AAAA,c,GASJ,iJ,IACI,+I,IAAuB,4F,IACvB;AAAA;;AAAA;;;;;;;;;;;OAAA,E,IAAA,E,IAAA,C;;;;waACI,yI,GAAA;AAAA;AAAA,c,EAAA;AAAA;AAAA,c,GAAiB,qG,IACjB,8H,GAAA;AAAA;AAAA,c,GAEH,8H,GAAA;AAAA;AAAA,c,GAML,gJ,IACI,qJ,IAA6B,+F,IAE7B;AAAA;AA5DF,2BAA0B,aAA1B;;AAAN,sBAAM,SAAN;;AAGkD;;AAAqB,4DAA8E,aAA9E,CAA8E,QAA9E,CAA8E,IAA9E,CAA8E,OAA9E;;AAA/D,uBAA0C,UAA1C,EAA+D,UAA/D;;AAAmB;;AAAnB,uBAAmB,UAAnB;;AACK,6CAAwD,aAAxD,CAAwD,QAAxD,CAAwD,IAAxD,CAAwD,OAAxD;;AAAL,uBAAK,UAAL;;AAQ0C;;AAAqB,4DAA8E,aAA9E,CAA8E,QAA9E,CAA8E,IAA9E,CAA8E,OAA9E;;AAA/D,uBAA0C,UAA1C,EAA+D,UAA/D;;AAAmB;;AAAnB,uBAAmB,UAAnB;;AACK,6CAAwD,aAAxD,CAAwD,QAAxD,CAAwD,IAAxD,CAAwD,OAAxD;;AAAL,uBAAK,UAAL;;AAM8C;;AAAqB,4DAAkF,aAAlF,CAAkF,QAAlF,CAAkF,QAAlF,CAAkF,OAAlF;;AAAnE,uBAA8C,UAA9C,EAAmE,UAAnE;;AAAmB;;AAAnB,uBAAmB,UAAnB;;AACK,6CAA4D,aAA5D,CAA4D,QAA5D,CAA4D,QAA5D,CAA4D,OAA5D;;AAAL,uBAAK,UAAL;;AAMkD;;AAAqB,4DAAkF,aAAlF,CAAkF,QAAlF,CAAkF,QAAlF,CAAkF,OAAlF;;AAAvE,uBAAkD,UAAlD,EAAuE,UAAvE;;AAAuB;;AAAvB,uBAAuB,UAAvB;;AACK,6CAA4D,aAA5D,CAA4D,QAA5D,CAA4D,QAA5D,CAA4D,OAA5D;;AAAL,uBAAK,UAAL;;AAQyD;;AAAqB,4DAAwF,aAAxF,CAAwF,QAAxF,CAAwF,eAAxF,CAAwF,OAAxF;;AAA9E,uBAAyD,UAAzD,EAA8E,UAA9E;;AAAuB;;AAAvB,uBAAuB,UAAvB;;AACK,6CAAkE,aAAlE,CAAkE,QAAlE,CAAkE,eAAlE,CAAkE,OAAlE;;AAAL,uBAAK,UAAL;;AAW6B;;AAA7B,uBAA6B,UAA7B;;AACY;;AAAR,uBAAQ,UAAR;;AAAQ;;AAAR,uBAAQ,UAAR;;AACQ,4BAAsC,YAAtC;;AAAR,uBAAQ,UAAR;;AAEE,6CAA6D,aAA7D,CAA6D,QAA7D,CAA6D,SAA7D,CAA6D,OAA7D;;AAAL,uBAAK,UAAL;AAAkE,O,EAAA;AAnD3E;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAGQ;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AASA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAOA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAOA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AASA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAYA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAyD,O;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QC7C5DmH,2B;;;AAWX,2CACU9I,IADV,EAEUvB,MAFV,EAGUwB,WAHV,EAGkC;AAAA;;AAFxB,aAAAD,IAAA,GAAAA,IAAA;AACA,aAAAvB,MAAA,GAAAA,MAAA;AACA,aAAAwB,WAAA,GAAAA,WAAA;AAZV,aAAAC,SAAA,GAAY,KAAZ;AACA,aAAA6I,qBAAA,GAAwB;AACtB,gBAAM,2BADgB;AAEtB,mBAAS;AAFa,SAAxB;AAKA,aAAAC,WAAA,GAAc,EAAd;AASE,YAAI7I,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWvB,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAX,EAAiDoB,SAAjE;;AACA,YAAGA,SAAS,IAAI,OAAhB,EAAwB;AACtBG,eAAK,CAAC,kGAAD,CAAL;AACA,eAAK7B,MAAL,CAAYE,QAAZ,CAAqB,CAAC,iBAAD,CAArB;AACD;;AAED,aAAI,IAAIsK,UAAR,IAAsB,KAAKF,qBAA3B,EAAiD;AAC/C,eAAKC,WAAL,CAAiB5E,IAAjB,CAAsB6E,UAAtB;AACD;;AAED,aAAKC,YAAL,GAAoB,KAAKjJ,WAAL,CAAiBO,KAAjB,CAAuB;AACzCqD,cAAI,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CACxB,0DAAWnD,QADa,EAExB,0DAAWG,SAAX,CAAqB,CAArB,CAFwB,EAGxB,0DAAWC,SAAX,CAAqB,CAArB,CAHwB,CAApB,CADmC;AAMzCqI,cAAI,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CACxB,0DAAWzI,QADa,CAApB,CANmC;AASzC0I,kBAAQ,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CAC5B,0DAAW1I,QADiB,CAApB,CAT+B;AAYzCyE,kBAAQ,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CAC5B,0DAAWzE,QADiB,CAApB,CAZ+B;AAezCqF,yBAAe,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CACnC,0DAAWrF,QADwB,EAEnC,0DAAWsF,OAAX,CAAmB,IAAnB,CAFmC,CAApB,CAfwB;AAmBzC7F,mBAAS,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CAC7B,0DAAWO,QADkB,CAApB;AAnB8B,SAAvB,CAApB;AAuBD;;;;mCAEO,CACP;;;mCAEgB;;;;;;;;;AACf,yBAAKR,SAAL,GAAiB,IAAjB;AAEIqB,yB,GAAQ,KAAK2H,YAAL,CAAkB/H,QAAlB,CAA2B4E,eAA3B,CAA2CxE,K;AACvD,yBAAK2H,YAAL,CAAkBjD,aAAlB,CAAgC,iBAAhC;AACA,yBAAKiD,YAAL,CAAkBhD,UAAlB,CAA6B,iBAA7B,EACE,IAAI,0DAAJ,CAAgB3E,KAAhB,EAAuB,CACrB,0DAAWb,QADU,EAErB,0DAAWsF,OAAX,CAAmB,MAAI,KAAKkD,YAAL,CAAkB/H,QAAlB,CAA2BgE,QAA3B,CAAoC5D,KAAxC,GAA8C,GAAjE,CAFqB,CAAvB,CADF,E,CAOA;;yBACI,KAAK2H,YAAL,CAAkB7H,O;;;;;;;;AAIlBF,4B,GAAW,KAAK+H,YAAL,CAAkB/H,Q;AAC7BkI,0B,GAASlI,QAAQ,CAAC0C,IAAT,CAActC,K;AACvByD,4B,GAAW7D,QAAQ,CAACgI,IAAT,CAAc5H,K;AACzBgE,gC,GAAepE,QAAQ,CAACiI,QAAT,CAAkB7H,K;AACjCpB,6B,GAAYgB,QAAQ,CAAChB,SAAT,CAAmBoB,K;AAC/B+H,uB,GAAMnI,QAAQ,CAACgE,QAAT,CAAkB5D,K;;AAElB,2BAAM,KAAKgI,aAAL,CAAmBF,MAAnB,EAA2BrE,QAA3B,EAAqCO,YAArC,EAAmDpF,SAAnD,EAA8DmJ,GAA9D,CAAN;;;AAAN5H,uB;;AAEJ,wBAAGA,GAAG,CAACC,MAAJ,IAAc,GAAjB,EAAsB;AACpBrB,2BAAK,CAAC,oCAAD,CAAL;AACA,2BAAK7B,MAAL,CAAYE,QAAZ,CAAqB,CAAC,iBAAD,CAArB;AACD,qBAHD,MAGO,IAAG+C,GAAG,CAACC,MAAJ,IAAc,GAAjB,EAAsB;AAC3BrB,2BAAK,CAAC,kEAAD,CAAL;AACAxB,kCAAY,CAAC+C,UAAb,CAAwB,qBAAxB;AACA/C,kCAAY,CAAC+C,UAAb,CAAwB,cAAxB;AACA,2BAAKpD,MAAL,CAAYE,QAAZ,CAAqB,CAAC,kBAAD,CAArB;AACD,qBALM,MAKA,IAAG+C,GAAG,CAACC,MAAJ,IAAc,GAAjB,EAAsB;AAC3BrB,2BAAK,CAAC,uBAAD,CAAL;AACD;;;;;;;;;AACF;;;sCAEoB+I,M,EAAgBrE,Q,EAAkBO,Y,EAAsBpF,S,EAAmBgF,Q,EAAgB;AAC9G,cAAItG,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,qBAArB,CAAZ;AACA,cAAIuK,GAAG,GAAG5D,IAAI,CAACP,QAAD,CAAd;AACA,cAAMlD,OAAO,GAAG,IAAI,gEAAJ,GACTC,GADS,CACL,eADK,EACY,YAAYrD,KADxB,CAAhB;AAGA,iBAAO,KAAKmB,IAAL,CAAUmC,IAAV,CACL,8BAA8BkH,MADzB,EAEL;AACE,wBAAarE,QADf;AAEE,4BAAiBO,YAFnB;AAGE,yBAAcpF,SAHhB;AAIE,mBAAQmJ;AAJV,WAFK,EAQL;AAACrH,mBAAO,EAAEA,OAAV;AAAmBG,mBAAO,EAAE,UAA5B;AAAwCC,wBAAY,EAAE;AAAtD,WARK,EASLC,SATK,GASOlF,IATP,CASY,UAASsE,GAAT,EAAc;AAC/B,mBAAOA,GAAP;AACD,WAXM,EAWJa,KAXI,CAWE,UAASC,GAAT,EAAY;AACnB,mBAAOA,GAAP;AACD,WAbM,CAAP;AAcD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;qEC5GW;AAAA;;AAAA;;;;;;;;;;;;;;;;OAAA,E,wGAAA,E,4GAAA,C;;iBAAsD,8E,IAAO;AAAvB;;AAAtC,sBAAsC,SAAtC;AAAqD,O,EAAA;AAArD;;AAAA;;AAAA;AAAsD,O;AAAA;;;qEACtD,oL,GAAA,+Q,GAAoC,+E,IAAA,I,EAAA;AAAA;;AAAA;AAAiC,O;AAAA;;;qEAInE;AAAA;;AAAA;;;;;;;;;;;;;;;;OAAA,E,wGAAA,E,4GAAA,C;;iBAAsD,iG,IAAoB;AAApC;;AAAtC,sBAAsC,SAAtC;AAAqD,O,EAAA;AAArD;;AAAA;;AAAA;AAAsD,O;AAAA;;;qEACtD,oL,GAAA,+Q,GAAoC,+E,IAAA,I,EAAA;AAAA;;AAAA;AAA4B,O;AAAA;;;qEAIpE;AAAA;;AAAA;;;;;;;;;;;;;;;;OAAA,E,wGAAA,E,4GAAA,C;;iBAAsD,uF,IAAgB;AAAhC;;AAAtC,sBAAsC,SAAtC;AAAqD,O,EAAA;AAArD;;AAAA;;AAAA;AAAsD,O;AAAA;;;qEACtD,oL,GAAA,+Q,GAAoC,+E,IAAA,I,EAAA;AAAA;;AAAA;AAAoC,O;AAAA;;;qEAItE;AAAA;;AAAA;;;;;;;;;;;;;;;;OAAA,E,wGAAA,E,4GAAA,C;;iBAAsD,4F,IAAqB;AAArC;;AAAtC,sBAAsC,SAAtC;AAAqD,O,EAAA;AAArD;;AAAA;;AAAA;AAAsD,O;AAAA;;;qEACtD,oL,GAAA,+Q,GAAoC,+E,IAAA,I,EAAA;AAAA;;AAAA;AAAsC,O;AAAA;;;qEAIxE;AAAA;;AAAA;;;;;;;;;;;;;;;;OAAA,E,wGAAA,E,4GAAA,C;;iBAAsD,+E,IAAQ;AAAxB;;AAAtC,sBAAsC,SAAtC;AAAqD,O,EAAA;AAArD;;AAAA;;AAAA;AAAsD,O;AAAA;;;qEACtD,oL,GAAA,+Q,GAAoC,+E,IAAA,I,EAAA;AAAA;;AAAA;AAAuC,O;AAAA;;;qEAI3E;AAAA;;AAAA;;;;;;;;;;;;;;;;OAAA,E,wGAAA,E,4GAAA,C;;iBAAsD,kF,IAAW;AAA3B;;AAAtC,sBAAsC,SAAtC;AAAqD,O,EAAA;AAArD;;AAAA;;AAAA;AAAsD,O;AAAA;;;qEACtD,oL,GAAA,+Q,GAAoC,+E,IAAA,I,EAAA;AAAA;;AAAA;AAA8B,O;AAAA;;;qEAIpE;AAAA;;AAAA;;;;;;;;;;;;;;;;OAAA,E,wGAAA,E,4GAAA,C;;iBAAsD,2F,IAAiB;AAAjC;;AAAtC,sBAAsC,SAAtC;AAAqD,O,EAAA;AAArD;;AAAA;;AAAA;AAAsD,O;AAAA;;;qEACtD,oL,GAAA,+Q,GAAoC,+E,IAAA,I,EAAA;AAAA;;AAAA;AAAwB,O;AAAA;;;qEAI1D;AAAA;;AAAA;;;;;;;;;;;;;;;;OAAA,E,wGAAA,E,4GAAA,C;;iBAAsD,yF,IAAkB;AAAlC;;AAAtC,sBAAsC,SAAtC;AAAqD,O,EAAA;AAArD;;AAAA;;AAAA;AAAsD,O;AAAA;;;qEACtD,oL,GAAA,+Q,GAAoC,+E,IAAA,I,EAAA;AAAA;AAAA;;AAAA;AAAmD,O;AAAA;;;qEAIvF;AAAA;;AAAA;;;;;;;;;;;;;;;;OAAA,E,wGAAA,E,4GAAA,C;;iBAAsD,gF,IAAS;AAAzB;;AAAtC,sBAAsC,SAAtC;AAAqD,O,EAAA;AAArD;;AAAA;;AAAA;AAAsD,O;AAAA;;;qEACtD,oL,GAAA,+Q,GAAoC,+E,IAAA,I,EAAA;AAAA;;AAAA;AAAmF,O;AAAA;;;qEAIvH;AAAA;;AAAA;;;;;;;;;;;;;;;;OAAA,E,wGAAA,E,4GAAA,C;;iBAAsD,0F,IAAgB;AAAhC;;AAAtC,sBAAsC,SAAtC;AAAqD,O,EAAA;AAArD;;AAAA;;AAAA;AAAsD,O;AAAA;;;qEACtD,oL,GAAA,+Q,GAAoC,+E,IAAA,I,EAAA;AAAA;;AAAA;AAA8C,O;AAAA;;;qEAIlF;AAAA;;AAAA;;;;;;;;;;;;;;;;OAAA,E,wGAAA,E,4GAAA,C;;iBAAsD,kG,IAA2B;AAA3C;;AAAtC,sBAAsC,SAAtC;AAAqD,O,EAAA;AAArD;;AAAA;;AAAA;AAAsD,O;AAAA;;;qEACtD,oL,GAAA,+Q,GAAoC,+E,IAAA,I,EAAA;AAAA;;AAAA;AAAqD,O;AAAA;;;qEAIzF;AAAA;;AAAA;;;;;;;;;;;;;;;;OAAA,E,wGAAA,E,4GAAA,C;;iBAAsD,yF,IAAkB;AAAlC;;AAAtC,sBAAsC,SAAtC;AAAqD,O,EAAA;AAArD;;AAAA;;AAAA;AAAsD,O;AAAA;;;qEACtD,oL,GAAA,+Q,GAAoC,+E,IAAA,I,EAAA;AAAA;;AAAA;AAAsF,O;AAAA;;;qEAG9H,uY,GAAA,6M,EAAA,2J,GAAuD,I,EAAA,I;AAAA;;;qEACvD,6W,GAAA,iM,EAAA,qJ,GAA6D,I,EAAA,I;AAAA;;;;;;;WA5EzE,sJ,IACI,sJ,IACI,uH,IAAI,kF,IAIJ,qmC,GAAA,8N,EAAA,qvB,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,GACI;AAAA;AAAA;;AAAA;;;;;;;;;;;;;;;AAAmC;;;;;AAAnC;AAAA,oB,GAAA;AAAA;AAAA,c,EAAA,uO,GAEJ;AAAA;;AAAsC;;;;;;;AAAtC;AAAA,oB,IAA6G,oF,IAI7G,+a,GAAA,qM,EAAA;AAAA;AAAA,c,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA,2J,EAAA,uc,EAAA,sM,GAEI,2H,GAAA,0K,EAAA;AAAA;AAAA,c,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA,kN,GACE,mH,GAAA,yN,EAAA,0N,GACA,mH,GAAA,mN,EAAA,8M,GAGF,2H,GAAA,0K,EAAA;AAAA;AAAA,c,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA,kN,GACI,mH,GAAA,yN,EAAA,0N,GACA,mH,GAAA,mN,EAAA,8M,GAGJ,2H,GAAA,0K,EAAA;AAAA;AAAA,c,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA,kN,GACA,mH,GAAA,yN,EAAA,0N,GACA,mH,GAAA,mN,EAAA,8M,GAGA,2H,GAAA,0K,EAAA;AAAA;AAAA,c,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA,kN,GACE,mH,GAAA,yN,EAAA,0N,GACA,mH,GAAA,mN,EAAA,8M,GAGF,2H,GAAA,0K,EAAA;AAAA;AAAA,c,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA,kN,GACI,mH,GAAA,yN,EAAA,0N,GACA,oH,GAAA,mN,EAAA,8M,GAGJ,2H,GAAA,0K,EAAA;AAAA;AAAA,c,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA,kN,GACI,oH,GAAA,0N,EAAA,0N,GACA,oH,GAAA,oN,EAAA,8M,GAGJ,4H,GAAA,0K,EAAA;AAAA;AAAA,c,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA,kN,GACE,oH,GAAA,0N,EAAA,0N,GACA,oH,GAAA,oN,EAAA,8M,GAGF,4H,GAAA,0K,EAAA;AAAA;AAAA,c,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA,kN,GACI,oH,GAAA,0N,EAAA,0N,GACA,oH,GAAA,oN,EAAA,8M,GAGJ,4H,GAAA,0K,EAAA;AAAA;AAAA,c,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA,kN,GACI,oH,GAAA,0N,EAAA,0N,GACA,oH,GAAA,oN,EAAA,8M,GAGJ,4H,GAAA,0K,EAAA;AAAA;AAAA,c,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA,kN,GACI,oH,GAAA,0N,EAAA,0N,GACA,oH,GAAA,oN,EAAA,8M,GAGJ,4H,GAAA,0K,EAAA;AAAA;AAAA,c,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA,kN,GACI,oH,GAAA,0N,EAAA,0N,GACA,oH,GAAA,oN,EAAA,8M,GAGJ,4H,GAAA,0K,EAAA;AAAA;AAAA,c,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA,kN,GACI,oH,GAAA,0N,EAAA,0N,GACA,oH,GAAA,oN,EAAA,8M,GAGJ,oH,GAAA;AAAA;AAAA,c,EAAA,wN,GACA,oH,GAAA;AAAA;AAAA,c,EAAA,4M,GAGJ,oX,GAAA;AAAA;AAAA;AAAA,c,EAAiD,0D,GAAqC;AAAA;AAxEjB;;AAAjE,uBAAiE,UAAjE;;AAM8B,4BAAyB,WAAzB;;AAAlC,uBAAkC,UAAlC;;AAAA;;AAEkB;;AAAd,uBAAc,UAAd;;AAKc;;AAAd,uBAAc,UAAd;;AAKc;;AAAd,uBAAc,UAAd;;AAKc;;AAAd,uBAAc,UAAd;;AAKc;;AAAd,uBAAc,UAAd;;AAKc;;AAAd,wBAAc,UAAd;;AAKc;;AAAd,wBAAc,UAAd;;AAKc;;AAAd,wBAAc,UAAd;;AAKc;;AAAd,wBAAc,UAAd;;AAKc;;AAAd,wBAAc,UAAd;;AAKc;;AAAd,wBAAc,UAAd;;AAKc;;AAAd,wBAAc,UAAd;;AAKmB,4BAAmC,iBAAnC;;AAAnB,wBAAmB,UAAnB;;AACY,4BAAgD,iBAAhD;;AAAZ,wBAAY,UAAZ;;AAGW,4BAAiC,WAAjC,CAAiC,IAAjC,CAAiC,MAAjC;;AAAkC;;AAAjD,wBAAe,UAAf,EAAiD,UAAjD;AAAsF,O,EAAA;AAzEtF;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACI;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAA0F,O;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCsCzFgH,wB;;;AA8BX,wCACUxJ,IADV,EAEUvB,MAFV,EAEwB;AAAA;;AADd,aAAAuB,IAAA,GAAAA,IAAA;AACA,aAAAvB,MAAA,GAAAA,MAAA;AA3BV,aAAAgL,KAAA,GAAgB,EAAhB;AAEA,aAAA5G,gBAAA,GAA6B,CAC3B,UAD2B,EAE3B,WAF2B,EAG3B,WAH2B,EAI3B,aAJ2B,EAK3B,qBAL2B,EAM3B,qBAN2B,EAO3B,SAP2B,EAQ3B,aAR2B,EAS3B,cAT2B,EAU3B,cAV2B,EAW3B,qBAX2B,EAY3B,mBAZ2B,CAA7B;AAeA,aAAA6G,qBAAA,GAAwB;AACtB,oBAAU,aADY;AAEtB,sBAAY,UAFU;AAGtB,qBAAW,SAHW;AAItB,uBAAa,YAJS;AAKtB,uBAAa;AALS,SAAxB;AAYE,aAAKC,YAAL;AACD;;;;mCAEO;AACN,eAAKzG,UAAL,GAAkB,IAAI,0EAAJ,CAAuB,KAAKuG,KAA5B,CAAlB,CADM,CAEN;;AACA,eAAKvG,UAAL,CAAgBC,SAAhB,GAA4B,KAAKA,SAAjC,CAHM,CAIN;;AACA,eAAKD,UAAL,CAAgBE,IAAhB,GAAuB,KAAKA,IAA5B;AACD;;;oCAEWC,K,EAAc;AAAA;;AACxB;AACA,cAAMC,WAAW,GAAID,KAAK,CAACE,MAAN,CAAkChC,KAAvD;;AACA,eAAK2B,UAAL,CAAgBuD,eAAhB,GAAkC,UAAC3G,IAAD,EAAO0D,MAAP,EAA2B;AAC3D,gBAAMkD,WAAW,GAAG,SAAdA,WAAc,CAACC,WAAD,EAAclB,GAAd,EAAsB;AACxC,qBAAO,MAAI,CAACmE,iBAAL,CAAuBjD,WAAvB,EAAoC7G,IAApC,EAA0C2F,GAA1C,CAAP;AACD,aAFD;;AAGA,gBAAMwB,OAAO,GAAGC,MAAM,CAAC1J,IAAP,CAAYsC,IAAZ,EAAkBqH,MAAlB,CAAyBT,WAAzB,EAAsC,EAAtC,EAA0ChD,WAA1C,EAAhB,CAJ2D,CAK3D;;AACA,gBAAM0D,iBAAiB,GAAG5D,MAAM,CAACC,IAAP,GAAcC,WAAd,EAA1B;AACA,mBAAOuD,OAAO,CAACI,OAAR,CAAgBD,iBAAhB,MAAuC,CAAC,CAA/C;AACD,WARD;;AAUA,eAAKlE,UAAL,CAAgBM,MAAhB,GAAyBF,WAAW,CAACG,IAAZ,GAAmBC,WAAnB,EAAzB,CAbwB,CAexB;;AACA,cAAI,KAAKR,UAAL,CAAgBC,SAApB,EAA+B;AAC7B,iBAAKD,UAAL,CAAgBC,SAAhB,CAA0BQ,SAA1B;AACD;AACF;;;0CAEiBkG,M,EAAQ/J,I,EAAM2F,G,EAAK;AACnC,cAAI,OAAO3F,IAAI,CAAC2F,GAAD,CAAX,KAAqB,QAAzB,EAAmC;AACjC,iBAAK,IAAMmB,CAAX,IAAgB9G,IAAI,CAAC2F,GAAD,CAApB,EAA2B;AACzB,kBAAI3F,IAAI,CAAC2F,GAAD,CAAJ,CAAUmB,CAAV,MAAiB,IAArB,EAA2B;AACzBiD,sBAAM,GAAG,KAAKD,iBAAL,CAAuBC,MAAvB,EAA+B/J,IAAI,CAAC2F,GAAD,CAAnC,EAA0CmB,CAA1C,CAAT;AACD;AACF;AACF,WAND,MAMO;AACLiD,kBAAM,IAAI/J,IAAI,CAAC2F,GAAD,CAAJ,GAAY,GAAtB;AACD;;AACD,iBAAOoE,MAAP;AACD,S,CAED;;;;uCACqB;;;;;;;;;;;AACT,2BAAM,KAAKC,QAAL,EAAN;;;AAANpI,uB;;0BACDA,GAAG,CAACC,MAAJ,IAAc,G;;;;;AACXoC,wB,GAAerC,GAAG,CAACqC,I;;;;;;AACvB,sCAAgBA,IAAhB,2HAAqB;AAAbgG,0BAAa;AACfC,8BADe,GACE5J,IAAI,CAACC,KAAL,CAAWD,IAAI,CAAC+D,SAAL,CAAe4F,IAAf,CAAX,CADF;AAEnB,2BAAKN,KAAL,CAAWrF,IAAX,CAAgB4F,QAAhB;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACD,yBAAK9G,UAAL,GAAkB,IAAI,0EAAJ,CAAuB,KAAKuG,KAA5B,CAAlB;AACA,yBAAKvG,UAAL,CAAgBC,SAAhB,GAA4B,KAAKA,SAAjC;AACA,yBAAKD,UAAL,CAAgBE,IAAhB,GAAuB,KAAKA,IAA5B;;;;;AACK,wBAAG1B,GAAG,CAACC,MAAJ,IAAc,GAAjB,EAAsB;AAC3BrB,2BAAK,CAAC,kEAAD,CAAL;AACAxB,kCAAY,CAAC+C,UAAb,CAAwB,qBAAxB;AACA/C,kCAAY,CAAC+C,UAAb,CAAwB,cAAxB;AACA,2BAAKpD,MAAL,CAAYE,QAAZ,CAAqB,CAAC,kBAAD,CAArB;AACD;;;;;;;;;AACF;;;mCAEO;AACN,cAAIE,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,qBAArB,CAAZ;AACA,cAAMkD,OAAO,GAAG,IAAI,gEAAJ,GACTC,GADS,CACL,eADK,EACY,YAAYrD,KADxB,CAAhB;AAGA,iBAAO,KAAKmB,IAAL,CAAUqE,GAAV,CACL,uDADK,EAEL;AAACpC,mBAAO,EAAEA,OAAV;AAAmBG,mBAAO,EAAE,UAA5B;AAAwCC,wBAAY,EAAE;AAAtD,WAFK,EAGLC,SAHK,GAGOlF,IAHP,CAGY,UAASsE,GAAT,EAAc;AAC/B,mBAAOA,GAAP;AACD,WALM,EAKJa,KALI,CAKE,UAASC,GAAT,EAAY;AACnB,mBAAOA,GAAP;AACD,WAPM,CAAP;AAQD;;;kCAEQ,CAER;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;qECjJW;AAAA;;AAAA;;;;;;;;;;;;;;;;OAAA,E,wGAAA,E,4GAAA,C;;iBAAsD,2E,IAAI;AAApB;;AAAtC,sBAAsC,SAAtC;AAAqD,O,EAAA;AAArD;;AAAA;;AAAA;AAAsD,O;AAAA;;;qEACtD,oL,GAAA,+Q,GAAwC,+E,IAAA,I,EAAA;AAAA;;AAAA;AAAyB,O;AAAA;;;qEAIjE;AAAA;;AAAA;;;;;;;;;;;;;;;;OAAA,E,wGAAA,E,4GAAA,C;;iBAAsD,+E,IAAQ;AAAxB;;AAAtC,sBAAsC,SAAtC;AAAqD,O,EAAA;AAArD;;AAAA;;AAAA;AAAsD,O;AAAA;;;qEACtD,oL,GAAA,+Q,GAAwC,+E,IAAA,I,EAAA;AAAA;;AAAA;AAA2B,O;AAAA;;;qEAInE;AAAA;;AAAA;;;;;;;;;;;;;;;;OAAA,E,wGAAA,E,4GAAA,C;;iBAAsD,iF,IAAU;AAA1B;;AAAtC,sBAAsC,SAAtC;AAAqD,O,EAAA;AAArD;;AAAA;;AAAA;AAAsD,O;AAAA;;;qEACtD,oL,GAAA,+Q,GAAwC,+E,IAAA,I,EAAA;AAAA;;AAAA;AAAkC,O;AAAA;;;qEAI1E;AAAA;;AAAA;;;;;;;;;;;;;;;;OAAA,E,wGAAA,E,4GAAA,C;;iBAAsD,oF,IAAU;AAA1B;;AAAtC,sBAAsC,SAAtC;AAAqD,O,EAAA;AAArD;;AAAA;;AAAA;AAAsD,O;AAAA;;;qEACtD,oL,GAAA,+Q,GAAwC,+E,IAAA,I,EAAA;AAAA;;AAAA;AAAkC,O;AAAA;;;qEAIxE;AAAA;;AAAA;;;;;;;;;;;;;;;;OAAA,E,wGAAA,E,4GAAA,C;;iBAAsD,2F,IAAoB;AAApC;;AAAtC,sBAAsC,SAAtC;AAAqD,O,EAAA;AAArD;;AAAA;;AAAA;AAAsD,O;AAAA;;;qEACtD,oL,GAAA,+Q,GAAwC,+E,IAAA,I,EAAA;AAAA;;AAAA;AAA2B,O;AAAA;;;qEAInE,sM,GAAA,qR,GAAuC,oF,IAAU,I,EAAA,I;AAAA;;;qEACjD,oL,GAAA,+Q,GACI;AAAA;AAAA,oBAA0D,UAA1D;;AAAyB;;;;;AAAzB;AAAA,oB,IAA0D,kF,IAG1D;AAAA;AAAA,oBAA8D,UAA9D;;AAA2B;;;;;AAA3B;AAAA,oB,IAA8D,oF,IAE9D,I,EAAA,I;AAAA;;;qEAIR,uY,GAAA,6M,EAAA,2J,GAAuD,I,EAAA,I;AAAA;;;qEACvD,6W,GAAA,iM,EAAA,qJ,GAA6D,I,EAAA,I;AAAA;;;;;;;WArDzE,0J,IACI,sJ,IACI,uH,IAAI,uF,IAIJ,qmC,GAAA,8N,EAAA,qvB,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,GACI;AAAA;AAAA;;AAAA;;;;;;;;;;;;;;;AAAmC;;;;;AAAnC;AAAA,oB,GAAA;AAAA;AAAA,c,EAAA,uO,GAEJ;AAAA;AAAA,oBAAsD,UAAtD;;AAA2B;;;;;AAA3B;AAAA,oB,IAAsD,2F,IAItD,oZ,GAAA,qM,EAAA;AAAA;AAAA,c,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA,2J,EAAA,sM,GAEI,2H,GAAA,0K,EAAA;AAAA;AAAA,c,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA,kN,GACE,uH,GAAA,yN,EAAA,0N,GACA,uH,GAAA,mN,EAAA,8M,GAGF,2H,GAAA,0K,EAAA;AAAA;AAAA,c,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA,kN,GACE,uH,GAAA,yN,EAAA,0N,GACA,uH,GAAA,mN,EAAA,8M,GAGF,2H,GAAA,0K,EAAA;AAAA;AAAA,c,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA,kN,GACE,uH,GAAA,yN,EAAA,0N,GACA,uH,GAAA,mN,EAAA,8M,GAGF,2H,GAAA,0K,EAAA;AAAA;AAAA,c,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA,kN,GACE,uH,GAAA,yN,EAAA,0N,GACA,uH,GAAA,mN,EAAA,8M,GAGF,2H,GAAA,0K,EAAA;AAAA;AAAA,c,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA,kN,GACI,uH,GAAA,yN,EAAA,0N,GACA,wH,GAAA,mN,EAAA,8M,GAGJ,2H,GAAA,0K,EAAA;AAAA;AAAA,c,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,Q,EAAA,kN,GACI,wH,GAAA,0N,EAAA,0N,GACA,wH,GAAA,oN,EAAA,8M,GAUJ,wH,GAAA;AAAA;AAAA,c,EAAA,wN,GACA,wH,GAAA;AAAA;AAAA,c,EAAA,4M,GAGJ,oX,GAAA;AAAA;AAAA;AAAA,c,EAAiD,0D,GAAqC;AAAA;AAjDjB;;AAAjE,uBAAiE,UAAjE;;AAMa,4BAAyB,WAAzB;;AAAjB,uBAAiB,UAAjB;;AAAA;;AAEkB;;AAAd,uBAAc,UAAd;;AAKc;;AAAd,uBAAc,UAAd;;AAKc;;AAAd,uBAAc,UAAd;;AAKc;;AAAd,uBAAc,UAAd;;AAKc;;AAAd,uBAAc,UAAd;;AAKc;;AAAd,uBAAc,UAAd;;AAYmB,4BAAmC,iBAAnC;;AAAnB,wBAAmB,UAAnB;;AACY,4BAAgD,iBAAhD;;AAAZ,wBAAY,UAAZ;;AAGW,4BAAiC,WAAjC,CAAiC,IAAjC,CAAiC,MAAjC;;AAAkC;;AAAjD,wBAAe,UAAf,EAAiD,UAAjD;AAAsF,O,EAAA;AAlDtF;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACI;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAA0F,O;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCiBzFyH,4B;;;AAiBX,4CACUjK,IADV,EAEUvB,MAFV,EAGUmE,MAHV,EAG2B;AAAA;;AAFjB,aAAA5C,IAAA,GAAAA,IAAA;AACA,aAAAvB,MAAA,GAAAA,MAAA;AACA,aAAAmE,MAAA,GAAAA,MAAA;AAfV,aAAAC,gBAAA,GAA6B,CAC3B,YAD2B,EAE3B,cAF2B,EAG3B,qBAH2B,EAI3B,qBAJ2B,EAK3B,cAL2B,EAM3B,SAN2B,CAA7B;AAQA,aAAAqF,SAAA,GAAwB,EAAxB;AACA,aAAAnF,OAAA,GAAU,KAAKC,WAAL,EAAV;;AAQE,YAAG,CAAC,KAAKA,WAAT,EAAqB;AACnB1C,eAAK,CAAC,mDAAD,CAAL;AACA,eAAK7B,MAAL,CAAYE,QAAZ,CAAqB,CAAC,iBAAD,CAArB;AACD;;AACD,aAAKuL,gBAAL;AACD;;;;mCAEO;AACN,eAAKhH,UAAL,GAAkB,IAAI,0EAAJ,CAAuB,KAAKgF,SAA5B,CAAlB,CADM,CAEN;;AACA,eAAKhF,UAAL,CAAgBC,SAAhB,GAA4B,KAAKA,SAAjC,CAHM,CAIN;;AACA,eAAKD,UAAL,CAAgBE,IAAhB,GAAuB,KAAKA,IAA5B;AACD;;;oCAEWC,K,EAAc;AACxB;AACA,cAAMC,WAAW,GAAID,KAAK,CAACE,MAAN,CAAkChC,KAAvD;AACA,eAAK2B,UAAL,CAAgBM,MAAhB,GAAyBF,WAAW,CAACG,IAAZ,GAAmBC,WAAnB,EAAzB,CAHwB,CAKxB;;AACA,cAAI,KAAKR,UAAL,CAAgBC,SAApB,EAA+B;AAC7B,iBAAKD,UAAL,CAAgBC,SAAhB,CAA0BQ,SAA1B;AACD;AACF;;;sCAEU;AACT,cAAIC,OAAO,GAAG9E,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAd;;AACA,cAAG6E,OAAO,IAAI,IAAd,EAAmB;AACjB,gBAAIC,IAAI,GAAGzD,IAAI,CAACC,KAAL,CAAWuD,OAAX,CAAX;;AACA,gBAAGC,IAAI,CAAC1D,SAAL,IAAkB,OAArB,EAA6B;AAC3B,qBAAO,IAAP;AACD;;AACD,mBAAO,KAAP;AACD;;AACD,iBAAO,KAAP;AACD,S,CAID;;;;2CAEyB;;;;;;;;;;;AACb,2BAAM,KAAKuI,YAAL,EAAN;;;AAANhH,uB;;0BACDA,GAAG,CAACC,MAAJ,IAAc,G;;;;;AACXoC,wB,GAAmBrC,GAAG,CAACqC,I;;;;;;AAC3B,sCAAoBA,IAApB,2HAAyB;AAAjB8C,8BAAiB;AACvB7C,6BAAO,CAACC,GAAR,CAAY4C,QAAZ;AACI8B,kCAFmB,GAEMvI,IAAI,CAACC,KAAL,CAAWD,IAAI,CAAC+D,SAAL,CAAe0C,QAAf,CAAX,CAFN;AAGvB7C,6BAAO,CAACC,GAAR,CAAY0E,YAAZ;AACA,2BAAKT,SAAL,CAAe9D,IAAf,CAAoBuE,YAApB;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACD,yBAAKzF,UAAL,GAAkB,IAAI,0EAAJ,CAAuB,KAAKgF,SAA5B,CAAlB;AACA,yBAAKhF,UAAL,CAAgBC,SAAhB,GAA4B,KAAKA,SAAjC;AACA,yBAAKD,UAAL,CAAgBE,IAAhB,GAAuB,KAAKA,IAA5B;;;;;AACK,wBAAG1B,GAAG,CAACC,MAAJ,IAAc,GAAjB,EAAsB;AAC3BrB,2BAAK,CAAC,kEAAD,CAAL;AACAxB,kCAAY,CAAC+C,UAAb,CAAwB,qBAAxB;AACA/C,kCAAY,CAAC+C,UAAb,CAAwB,cAAxB;AACA,2BAAKpD,MAAL,CAAYE,QAAZ,CAAqB,CAAC,kBAAD,CAArB;AACD;;;;;;;;;AACF;;;uCAEkB;AACjB,cAAIE,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,qBAArB,CAAZ;AACA,cAAMkD,OAAO,GAAG,IAAI,gEAAJ,GACTC,GADS,CACL,eADK,EACY,YAAYrD,KADxB,CAAhB;AAGA,iBAAO,KAAKmB,IAAL,CAAUqE,GAAV,CACL,+BADK,EAEL;AAACpC,mBAAO,EAAEA,OAAV;AAAmBG,mBAAO,EAAE,UAA5B;AAAwCC,wBAAY,EAAE;AAAtD,WAFK,EAGLC,SAHK,GAGOlF,IAHP,CAGY,UAASsE,GAAT,EAAc;AAC/B,mBAAOA,GAAP;AACD,WALM,EAKJa,KALI,CAKE,UAASC,GAAT,EAAY;AACnB,mBAAOA,GAAP;AACD,WAPM,CAAP;AAQD;;;yCAEgB;AACf,cAAMzC,SAAS,GAAG,KAAK6C,MAAL,CAAY0B,IAAZ,CAAiB,gHAAjB,EAA8C;AAC9DC,iBAAK,EAAE,OADuD;AAE9DC,kBAAM,EAAE,OAFsD;AAG9D1E,gBAAI,EAAE;AAHwD,WAA9C,CAAlB;AAMAC,mBAAS,CAAC0E,WAAV,GAAwBC,SAAxB,CAAkC,UAASC,MAAT,EAAe;AAC/C,gBAAGA,MAAM,CAAChD,MAAP,IAAiB,MAApB,EAA2B;AACzBG,oBAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD;AACF,WAJD;AAKD;;;uCAEoB6E,Q,EAAoB;;;;;;;;;AACnCjC,gC,GAAeC,OAAO,CAAC,sFAAD,C;;wBACtBD,Y;;;;;;;;;AAIM,2BAAM,KAAKuF,cAAL,CAAoBtD,QAApB,CAAN;;;AAANnF,uB;;AACJ,wBAAGA,GAAG,CAACC,MAAJ,IAAc,GAAjB,EAAsB;AACpBrB,2BAAK,CAAC,yCAAD,CAAL;AACAwB,4BAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD,qBAHD,MAGO,IAAGN,GAAG,CAACC,MAAJ,IAAc,GAAjB,EAAsB;AAC3BrB,2BAAK,CAAC,kEAAD,CAAL;AACAxB,kCAAY,CAAC+C,UAAb,CAAwB,qBAAxB;AACA/C,kCAAY,CAAC+C,UAAb,CAAwB,cAAxB;AACA,2BAAKpD,MAAL,CAAYE,QAAZ,CAAqB,CAAC,kBAAD,CAArB;AACD,qBALM,MAKA,IAAG+C,GAAG,CAACC,MAAJ,IAAc,GAAjB,EAAsB;AAC3BrB,2BAAK,CAAC,uBAAD,CAAL;AACD;;;;;;;;;AACF;;;uCAEcuG,Q,EAAkB;AAC/B,cAAIhI,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,qBAArB,CAAZ;AAEA,cAAMkD,OAAO,GAAG,IAAI,gEAAJ,GACTC,GADS,CACL,eADK,EACY,YAAYrD,KADxB,CAAhB;AAGA,iBAAO,KAAKmB,IAAL,CAAU0C,GAAV,CACL,kCAAkCmE,QAAQ,CAACkB,UADtC,EAEL;AACE,4BAAiBlB,QAAQ,CAACC,YAD5B;AAEE,mCAAwBD,QAAQ,CAACuD,mBAFnC;AAGE,mCAAwBvD,QAAQ,CAACwD,mBAHnC;AAIE,4BAAgBxD,QAAQ,CAACyD,YAJ3B;AAKE,sBAAW;AALb,WAFK,EASL;AAACrI,mBAAO,EAAEA,OAAV;AAAmBG,mBAAO,EAAE,UAA5B;AAAwCC,wBAAY,EAAE;AAAtD,WATK,EAULC,SAVK,GAUOlF,IAVP,CAUY,UAASsE,GAAT,EAAc;AAC/B,mBAAOA,GAAP;AACD,WAZM,EAYJa,KAZI,CAYE,UAASC,GAAT,EAAY;AACnB,mBAAOA,GAAP;AACD,WAdM,CAAP;AAeD;;;qCAEYqE,Q,EAAoB;AAC/B,cAAM9G,SAAS,GAAG,KAAK6C,MAAL,CAAY0B,IAAZ,CAAiB,gHAAjB,EAA8C;AAC9DC,iBAAK,EAAE,OADuD;AAE9DC,kBAAM,EAAE,OAFsD;AAG9D1E,gBAAI,EAAE+G;AAHwD,WAA9C,CAAlB;AAMA9G,mBAAS,CAAC0E,WAAV,GAAwBC,SAAxB,CAAkC,UAASC,MAAT,EAAe;AAC/C,gBAAGA,MAAM,CAAChD,MAAP,IAAiB,MAApB,EAA2B;AACzBG,oBAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD;AACF,WAJD;AAKD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;qEChMC,wL,GAAA,sW,GAAkD,2F,IAAiB;AAAnE;AAAA,O,EAAA;AAAA;;AAAA;AAAkD,O;AAAA;;;qEAClD,wL,GAAA,sW,GAAkD,8F,IAAoB;AAAtE;AAAA,O,EAAA;AAAA;;AAAA;AAAkD,O;AAAA;;;qEAMtC,wH,IAA6E,qG,IAA2B,I,EAAA,I;AAAA;;;qEAD5G,qJ,IACI,6H,GAAA;AAAA;AAAA,c,GAA6E;AAAA;AAAxE,4CAAuE,aAAvE,CAAuE,QAAvE,CAAuE,YAAvE,CAAuE,MAAvE,CAAuE,QAAvE;;AAAL,sBAAK,SAAL;AAA4E,O,EAAA,I;AAAA;;;qEAO5E,wH,IAAoF,kH,IAAwC,I,EAAA,I;AAAA;;;qEADhI,qJ,IACI,6H,GAAA;AAAA;AAAA,c,GAAoF;AAAA;AAA/E,4CAA8E,aAA9E,CAA8E,QAA9E,CAA8E,mBAA9E,CAA8E,MAA9E,CAA8E,QAA9E;;AAAL,sBAAK,SAAL;AAAmF,O,EAAA,I;AAAA;;;qEAOnF,wH,IAAoF,6G,IAAgC,I,EAAA,I;AAAA;;;qEACpH,wH,IAAqF,wI,IAAkD,I,EAAA,I;AAAA;;;qEACvI,wH,IAAqF,wI,IAAkD,I,EAAA,I;AAAA;;;qEAH3I,qJ,IACI,6H,GAAA;AAAA;AAAA,c,GACA,6H,GAAA;AAAA;AAAA,c,GACA,8H,GAAA;AAAA;AAAA,c,GAAqF;AAAA;AAFhF,4CAA8E,aAA9E,CAA8E,QAA9E,CAA8E,mBAA9E,CAA8E,MAA9E,CAA8E,QAA9E;;AAAL,sBAAK,SAAL;;AACK,4CAA+E,aAA/E,CAA+E,QAA/E,CAA+E,mBAA/E,CAA+E,MAA/E,CAA+E,SAA/E;;AAAL,sBAAK,SAAL;;AACK,4CAA+E,aAA/E,CAA+E,QAA/E,CAA+E,mBAA/E,CAA+E,MAA/E,CAA+E,SAA/E;;AAAL,sBAAK,SAAL;AAAoF,O,EAAA,I;AAAA;;;qEAOpF,wH,IAA6E,uH,IAA0C,I,EAAA,I;AAAA;;;qEACvH,wH,IAA0E,yH,IAAyC,I,EAAA,I;AAAA;;;qEAFvH,qJ,IACI,8H,GAAA;AAAA;AAAA,c,GACA,8H,GAAA;AAAA;AAAA,c,GAA0E;AAAA;AADrE,4CAAuE,aAAvE,CAAuE,QAAvE,CAAuE,YAAvE,CAAuE,MAAvE,CAAuE,QAAvE;;AAAL,sBAAK,SAAL;;AACK,4CAAoE,aAApE,CAAoE,QAApE,CAAoE,YAApE,CAAoE,MAApE,CAAoE,KAApE;;AAAL,sBAAK,SAAL;AAAyE,O,EAAA,I;AAAA;;;qEAI7E;AAAA;AAAA,oBAAmF,UAAnF;;AAAQ;;;;;AAAR;AAAA,oB,IAAmF,iF,IAAO,I,EAAA,I;AAAA;;;qEAC1F;AAAA;AAAA,oBAAmF,UAAnF;;AAAQ;;;;;AAAR;AAAA,oB,IAAmF,oF,IAAU,I,EAAA,I;AAAA;;;qEArCzG,0I,IACI,6H,GAAA;AAAA;AAAA,c,GACA,6H,GAAA;AAAA;AAAA,c,GACA;AAAA;;AAAA;;;;;;;;;;;OAAA,E,IAAA,E,IAAA,C;;6bACI,iJ,IACI,kJ,IAA0B,+F,IAC1B;AAAA;;AAAA;;;;;;;;;;;;;;;;;;;;;OAAA,E,IAAA,E,IAAA,C;;;gBAAuE;AAAA;AAAA,Q,EAAvE,yV,EAAA;AAAA;AAAA,+E,EAAA;AAAA;AAAA,c,EAAA,gM,EAAA,mN,GACA,6H,GAAA;AAAA;AAAA,c,GAIJ,iJ,IACI,yJ,IAAiC,8F,IACjC;AAAA;;AAAA;;;;;;;;;;;;;;;;;;;;;OAAA,E,IAAA,E,IAAA,C;;;gBAA8E;AAAA;AAAA,Q,EAA9E,yV,EAAA;AAAA;AAAA,+E,EAAA;AAAA;AAAA,c,EAAA,gM,EAAA,mN,GACA,6H,GAAA;AAAA;AAAA,c,GAIJ,iJ,IACI,yJ,IAAiC,sF,IACjC;AAAA;;AAAA;;;;;;;;;;;;;;;;;;;;;OAAA,E,IAAA,E,IAAA,C;;;gBAA8E;AAAA;AAAA,Q,EAA9E,yV,EAAA;AAAA;AAAA,+E,EAAA;AAAA;AAAA,c,EAAA,gM,EAAA,mN,GACA,6H,GAAA;AAAA;AAAA,c,GAMJ,iJ,IACI,kJ,IAA0B,gG,IAC1B;AAAA;;AAAA;;;;;;;;;;;;;;;;;;;;;OAAA,E,IAAA,E,IAAA,C;;;gBAAuE;AAAA;AAAA,Q,EAAvE,yV,EAAA;AAAA;AAAA,+E,EAAA;AAAA;AAAA,c,EAAA,gM,EAAA,mN,GACA,8H,GAAA;AAAA;AAAA,c,GAKJ,kJ,IACI,8H,GAAA;AAAA;AAAA,c,GACA,8H,GAAA;AAAA;AAAA,c,GACA;AAAA;AAAA,oBAAmD,UAAnD;;AAAQ;;;;;AAAR;AAAA,oB,IAAmD,kF,IAAQ;AAAA;AArC9C;;AAArB,sBAAqB,SAArB;;AACqB;;AAArB,sBAAqB,SAArB;;AACM,2BAA0B,aAA1B;;AAAN,sBAAM,SAAN;;AAG0D;;AAAqB,4DAAsF,aAAtF,CAAsF,QAAtF,CAAsF,YAAtF,CAAsF,OAAtF;;AAAvE,uBAAkD,UAAlD,EAAuE,UAAvE;;AAAmB;;AAAnB,uBAAmB,UAAnB;;AACK,6CAAgE,aAAhE,CAAgE,QAAhE,CAAgE,YAAhE,CAAgE,OAAhE;;AAAL,uBAAK,UAAL;;AAMyD;;AAAqB,4DAA6F,aAA7F,CAA6F,QAA7F,CAA6F,mBAA7F,CAA6F,OAA7F;;AAA9E,uBAAyD,UAAzD,EAA8E,UAA9E;;AAAmB;;AAAnB,uBAAmB,UAAnB;;AACK,6CAAuE,aAAvE,CAAuE,QAAvE,CAAuE,mBAAvE,CAAuE,OAAvE;;AAAL,uBAAK,UAAL;;AAMyD;;AAAqB,4DAA6F,aAA7F,CAA6F,QAA7F,CAA6F,mBAA7F,CAA6F,OAA7F;;AAA9E,uBAAyD,UAAzD,EAA8E,UAA9E;;AAAmB;;AAAnB,uBAAmB,UAAnB;;AACK,6CAAuE,aAAvE,CAAuE,QAAvE,CAAuE,mBAAvE,CAAuE,OAAvE;;AAAL,uBAAK,UAAL;;AAQkD;;AAAqB,4DAAsF,aAAtF,CAAsF,QAAtF,CAAsF,YAAtF,CAAsF,OAAtF;;AAAvE,uBAAkD,UAAlD,EAAuE,UAAvE;;AAAmB;;AAAnB,uBAAmB,UAAnB;;AACK,6CAAgE,aAAhE,CAAgE,QAAhE,CAAgE,YAAhE,CAAgE,OAAhE;;AAAL,uBAAK,UAAL;;AAMsD;;AAAtD,uBAAsD,UAAtD;;AACsD;;AAAtD,uBAAsD,UAAtD;AAAkF,O,EAAA;AAlC1F;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAGQ;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAOA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAOA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AASA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAgK,O;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCT/JuI,2B;;;AAOX,2CAC+CzK,IAD/C,EAEUC,SAFV,EAGUC,IAHV,EAIUvB,MAJV,EAKUwB,WALV,EAKkC;AAAA;;AAJa,aAAAH,IAAA,GAAAA,IAAA;AACrC,aAAAC,SAAA,GAAAA,SAAA;AACA,aAAAC,IAAA,GAAAA,IAAA;AACA,aAAAvB,MAAA,GAAAA,MAAA;AACA,aAAAwB,WAAA,GAAAA,WAAA;AATV,aAAAC,SAAA,GAAqB,KAArB;AAWE,YAAIC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWvB,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAX,EAAiDoB,SAAjE;;AACA,YAAGA,SAAS,IAAI,OAAhB,EAAwB;AACtBG,eAAK,CAAC,kGAAD,CAAL;AACA,eAAK7B,MAAL,CAAYE,QAAZ,CAAqB,CAAC,sBAAD,CAArB;AACD;;AACD,aAAK6L,YAAL,GAAoB,KAAKvK,WAAL,CAAiBO,KAAjB,CAAuB;AACzCsG,sBAAY,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CAChC,0DAAWpG,QADqB,CAApB,CAD2B;AAIzC0J,6BAAmB,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CACvC,0DAAW1J,QAD4B,CAApB,CAJoB;AAOzC2J,6BAAmB,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CACvC,0DAAW3J,QAD4B,EAEvC,0DAAWG,SAAX,CAAqB,EAArB,CAFuC,EAGvC,0DAAWC,SAAX,CAAqB,EAArB,CAHuC,CAApB,CAPoB;AAYzCwJ,sBAAY,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CAChC,0DAAW5J,QADqB,EAEhC,0DAAWM,KAFqB,CAApB;AAZ2B,SAAvB,CAApB;AAkBA,aAAK6F,QAAL,GAAgB/G,IAAhB;;AACA,YAAG,KAAK+G,QAAL,IAAiB,IAApB,EAAyB;AACvB,eAAK3F,QAAL,GAAgB,QAAhB;AACD,SAFD,MAEO;AACL,eAAKA,QAAL,GAAgB,QAAhB;AACA,cAAIC,QAAQ,GAAG,KAAKqJ,YAAL,CAAkBrJ,QAAjC;AACAA,kBAAQ,CAAC2F,YAAT,CAAsB1F,QAAtB,CAA+B,KAAKyF,QAAL,CAAcC,YAA7C;AACA3F,kBAAQ,CAACiJ,mBAAT,CAA6BhJ,QAA7B,CAAsC,KAAKyF,QAAL,CAAcuD,mBAApD;AACAjJ,kBAAQ,CAACkJ,mBAAT,CAA6BjJ,QAA7B,CAAsC,KAAKyF,QAAL,CAAcwD,mBAApD;AACAlJ,kBAAQ,CAACmJ,YAAT,CAAsBlJ,QAAtB,CAA+B,KAAKyF,QAAL,CAAcyD,YAA7C;AACD;AACF;;;;mCAEO,CAEP;;;yCAEmB;;;;;;;;;AAClB,yBAAKpK,SAAL,GAAiB,IAAjB;;yBAEI,KAAKsK,YAAL,CAAkBnJ,O;;;;;;;;AAIlBF,4B,GAAW,KAAKqJ,YAAL,CAAkBrJ,Q;AACjC,yBAAK0F,QAAL,GAAgB;AACdkB,gCAAU,EAAE,EADE;AAEdjB,kCAAY,EAAE3F,QAAQ,CAAC2F,YAAT,CAAsBvF,KAFtB;AAGd6I,yCAAmB,EAAEjJ,QAAQ,CAACiJ,mBAAT,CAA6B7I,KAHpC;AAId8I,yCAAmB,EAAElJ,QAAQ,CAACkJ,mBAAT,CAA6B9I,KAJpC;AAKd+I,kCAAY,EAAEnJ,QAAQ,CAACmJ,YAAT,CAAsB/I,KALtB;AAMdC,4BAAM,EAAE;AANM,qBAAhB;;AASU,2BAAM,KAAKiJ,YAAL,CAAkB,KAAK5D,QAAvB,CAAN;;;AAANnF,uB;;AAEJ,wBAAGA,GAAG,CAACC,MAAJ,IAAc,GAAjB,EAAsB;AACpBrB,2BAAK,CAAC,sCAAD,CAAL;AACA,2BAAKP,SAAL,CAAe6B,KAAf,CAAqB;AAAED,8BAAM,EAAE;AAAV,uBAArB;AACD,qBAHD,MAGO,IAAGD,GAAG,CAACC,MAAJ,IAAc,GAAjB,EAAsB;AAC3BrB,2BAAK,CAAC,kEAAD,CAAL;AACAxB,kCAAY,CAAC+C,UAAb,CAAwB,qBAAxB;AACA/C,kCAAY,CAAC+C,UAAb,CAAwB,cAAxB;AACAC,4BAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD;;;;;;;;;AACF;;;qCAEY6E,Q,EAAkB;AAC7B,cAAIhI,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,qBAArB,CAAZ;AACA,cAAMkD,OAAO,GAAG,IAAI,gEAAJ,GACTC,GADS,CACL,eADK,EACY,YAAYrD,KADxB,CAAhB;AAGA,iBAAO,KAAKmB,IAAL,CAAUmC,IAAV,CACL,+BADK,EAEL;AACE,4BAAiB0E,QAAQ,CAACC,YAD5B;AAEE,mCAAwBD,QAAQ,CAACuD,mBAFnC;AAGE,mCAAwBvD,QAAQ,CAACwD,mBAHnC;AAIE,4BAAiBxD,QAAQ,CAACyD;AAJ5B,WAFK,EAQL;AAACrI,mBAAO,EAAEA,OAAV;AAAmBG,mBAAO,EAAE,UAA5B;AAAwCC,wBAAY,EAAE;AAAtD,WARK,EASLC,SATK,GASOlF,IATP,CASY,UAASsE,GAAT,EAAc;AAC/B,mBAAOA,GAAP;AACD,WAXM,EAWJa,KAXI,CAWE,UAASC,GAAT,EAAY;AACnB,mBAAOA,GAAP;AACD,WAbM,CAAP;AAcD;;;yCAEmB;;;;;;;;;AAClB,yBAAKtC,SAAL,GAAiB,IAAjB;;yBACI,KAAKsK,YAAL,CAAkBnJ,O;;;;;;;;AAIlBF,4B,GAAW,KAAKqJ,YAAL,CAAkBrJ,Q;AACjC,yBAAK0F,QAAL,GAAgB;AACdkB,gCAAU,EAAE,KAAKlB,QAAL,CAAckB,UADZ;AAEdjB,kCAAY,EAAE3F,QAAQ,CAAC2F,YAAT,CAAsBvF,KAFtB;AAGd6I,yCAAmB,EAAEjJ,QAAQ,CAACiJ,mBAAT,CAA6B7I,KAHpC;AAId8I,yCAAmB,EAAElJ,QAAQ,CAACkJ,mBAAT,CAA6B9I,KAJpC;AAKd+I,kCAAY,EAAEnJ,QAAQ,CAACmJ,YAAT,CAAsB/I,KALtB;AAMdC,4BAAM,EAAE;AANM,qBAAhB;;AASU,2BAAM,KAAKkJ,WAAL,CAAiB,KAAK7D,QAAtB,CAAN;;;AAANnF,uB;;AAEJ,wBAAGA,GAAG,CAACC,MAAJ,IAAc,GAAjB,EAAsB;AACpBrB,2BAAK,CAAC,2CAAD,CAAL;AACA,2BAAKP,SAAL,CAAe6B,KAAf,CAAqB;AAAED,8BAAM,EAAE;AAAV,uBAArB;AACD,qBAHD,MAGO,IAAGD,GAAG,CAACC,MAAJ,IAAc,GAAjB,EAAsB;AAC3BrB,2BAAK,CAAC,kEAAD,CAAL;AACAxB,kCAAY,CAAC+C,UAAb,CAAwB,qBAAxB;AACA/C,kCAAY,CAAC+C,UAAb,CAAwB,cAAxB;AACA,2BAAKpD,MAAL,CAAYE,QAAZ,CAAqB,CAAC,kBAAD,CAArB;AACD;;;;;;;;;AACF;;;oCAEWkI,Q,EAAkB;AAC5B,cAAIhI,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,qBAArB,CAAZ;AACA,cAAMkD,OAAO,GAAG,IAAI,gEAAJ,GACTC,GADS,CACL,eADK,EACY,YAAYrD,KADxB,CAAhB;AAGA,iBAAO,KAAKmB,IAAL,CAAU0C,GAAV,CACL,kCAAiCmE,QAAQ,CAACkB,UADrC,EAEL;AACE,4BAAiBlB,QAAQ,CAACC,YAD5B;AAEE,mCAAwBD,QAAQ,CAACuD,mBAFnC;AAGE,mCAAwBvD,QAAQ,CAACwD,mBAHnC;AAIE,4BAAgBxD,QAAQ,CAACyD,YAJ3B;AAKE,sBAAWzD,QAAQ,CAACrF;AALtB,WAFK,EASL;AAACS,mBAAO,EAAEA,OAAV;AAAmBG,mBAAO,EAAE,UAA5B;AAAwCC,wBAAY,EAAE;AAAtD,WATK,EAULC,SAVK,GAUOlF,IAVP,CAUY,UAASsE,GAAT,EAAc;AAC/B,mBAAOA,GAAP;AACD,WAZM,EAYJa,KAZI,CAYE,UAASC,GAAT,EAAY;AACnB,mBAAOA,GAAP;AACD,WAdM,CAAP;AAeD;;;sCAEU;AACT,eAAKzC,SAAL,CAAe6B,KAAf,CAAqB;AAAED,kBAAM,EAAE;AAAV,WAArB;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;qEC1KC;AAAA;AAAA,oBAAmF,UAAnF;;AAA4D;;;;;AAA5D;AAAA,oB,IACI,0I,IAAmB,kF,IAEnB,I,EAAA,I;AAAA;;;qEAGJ;AAAA;AAAA,oBAAsF,UAAtF;;AAA+D;;;;;AAA/D;AAAA,oB,IACI,6I,IAAsB,qF,IAEtB,I,EAAA,I;AAAA;;;qEAGJ;AAAA;AAAA,oBAAwG,UAAxG;;AAAiF;;;;;AAAjF;AAAA,oB,IACI,8I,IAAuB,uF,IAEvB,I,EAAA,I;AAAA;;;qEAGJ;AAAA;AAAA,oBAA2G,UAA3G;;AAAoF;;;;;AAApF;AAAA,oB,IACI,iJ,IAA0B,0F,IAE1B,I,EAAA,I;AAAA;;;qEAGJ;AAAA;AAAA,oBAAuG,UAAvG;;AAAgF;;;;;AAAhF;AAAA,oB,IACI,6I,IAAsB,+F,IAEtB,I,EAAA,I;AAAA;;;qEAGJ;AAAA;AAAA,oBAA4F,UAA5F;;AAAqE;;;;;AAArE;AAAA,oB,IACI,mJ,IAA4B,iG,IAE5B,I,EAAA,I;AAAA;;;qEAGJ;AAAA;AAAA,oBAAgF,UAAhF;;AAA6D;;;;;AAA7D;AAAA,oB,IACI,2I,IAAoB,4F,IAEpB,I,EAAA,I;AAAA;;;qEA/CR,iK,IACI;AAAA;AAAA,oBAKE,UALF;;AAII;;;;;AAJJ;AAAA,oB,IAOA,qH,GAAA;AAAA;AAAA,c,GAMA,qH,GAAA;AAAA;AAAA,c,GAMA,qH,GAAA;AAAA;AAAA,c,GAMA,qH,GAAA;AAAA;AAAA,c,GAMA,qH,GAAA;AAAA;AAAA,c,GAMA,qH,GAAA;AAAA;AAAA,c,GAMA,qH,GAAA;AAAA;AAAA,c,GAOJ,0I,GAAA,+a,GAEA,4I,IAAoB,wH,IAEpB;AAAA;;AA/CS,2BAAwB,eAAxB;;AAAL,sBAAK,SAAL;;AAMK,2BAAwB,eAAxB;;AAAL,sBAAK,SAAL;;AAMK,mDAAyC,YAAzC;;AAAL,sBAAK,SAAL;;AAMK,mDAAyC,YAAzC;;AAAL,sBAAK,SAAL;;AAMK,mDAAyC,YAAzC;;AAAL,uBAAK,SAAL;;AAMK,2BAAwB,eAAxB;;AAAL,uBAAK,SAAL;;AAMK,2BAAwB,eAAxB;;AAAL,uBAAK,SAAL;;AAOJ;AAAe,O,EAAA,I;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;ACnDf;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQagJ,mB;;;AAEX,mCACUlM,MADV,EACwB;AAAA;;AAAd,aAAAA,MAAA,GAAAA,MAAA;AACL;;;;mCAEG,CAEP;;;iCAEQ;AACP,eAAKA,MAAL,CAAYE,QAAZ,CAAqB,CAAC,YAAD,CAArB;AACD;;;6BAEI0E,K,EAAY;AACf,cAAIE,MAAM,GAAGF,KAAK,CAACE,MAAN,CAAaqH,SAA1B;AACArH,gBAAM,GAAGA,MAAM,CAACsH,OAAP,CAAe,kBAAf,EAAkC,EAAlC,CAAT;AACAtH,gBAAM,GAAGA,MAAM,CAACsH,OAAP,CAAe,mBAAf,EAAmC,EAAnC,CAAT;AACA,eAAKpM,MAAL,CAAYE,QAAZ,CAAqB,CAAC,gBAAgB4E,MAAjB,CAArB;AACD;;;iCAEK;AACJzE,sBAAY,CAAC+C,UAAb,CAAwB,qBAAxB;AACA/C,sBAAY,CAAC+C,UAAb,CAAwB,cAAxB;AACA,eAAKpD,MAAL,CAAYE,QAAZ,CAAqB,CAAC,kBAAD,CAArB;AACD;;;yCAEa;AACZ,iBAAOG,YAAY,CAACC,OAAb,CAAqB,qBAArB,KAA+C,IAAtD;AACD;;;sCAEU;AACT,cAAI6E,OAAO,GAAG9E,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAd;;AACA,cAAG6E,OAAO,IAAI,IAAd,EAAmB;AACjB,gBAAIC,IAAI,GAAGzD,IAAI,CAACC,KAAL,CAAWuD,OAAX,CAAX;;AACA,gBAAGC,IAAI,CAAC1D,SAAL,IAAkB,OAArB,EAA6B;AAC3B,qBAAO,IAAP;AACD;;AACD,mBAAO,KAAP;AACD;;AACD,iBAAO,KAAP;AACD;;;;;;;;;;;;;;;;;;;;;ACjDH;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAM2K,WAAW,GAAG;AACzBC,gBAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyB,sBAAzB,CAAyC,4EAAzC,EACGxI,KADH,CACS,UAAAC,GAAG;AAAA,aAAIwB,OAAO,CAACgH,KAAR,CAAcxI,GAAd,CAAJ;AAAA,KADZ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVA;;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;;ACAA","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { AuthGuardService } from './management/auth-guard.service';\r\n\r\nimport { ManagementComponent } from './management/management.component';\r\nimport { ManagementLoginComponent } from './management/management-login/management-login.component';\r\nimport { ManagementHomeComponent } from './management/management-home/management-home.component';\r\nimport { ManagementRegisterComponent } from './management/management-register/management-register.component';\r\nimport { ManagementSuppliersComponent } from './management/management-suppliers/management-suppliers.component';\r\nimport { ManagementDistributorsComponent } from './management/management-distributors/management-distributors.component';\r\nimport { ManagementSalesComponent } from './management/management-sales/management-sales.component';\r\nimport { ManagementProductsComponent } from './management/management-products/management-products.component';\r\nimport { ManagementPasswordchangeComponent } from './management/management-passwordchange/management-passwordchange.component';\r\n\r\nconst routes: Routes = [\r\n  { \r\n    path: 'management', \r\n    component: ManagementComponent ,\r\n    children: [\r\n      { path: '',   redirectTo: 'login', pathMatch: 'full' },\r\n      { path: 'login', component: ManagementLoginComponent},\r\n      { path: 'home', component: ManagementHomeComponent, canActivate : [AuthGuardService] },\r\n      { path: 'register', component: ManagementRegisterComponent, canActivate : [AuthGuardService] },\r\n      { path: 'suppliers', component: ManagementSuppliersComponent, canActivate : [AuthGuardService] },\r\n      { path: 'distributors', component: ManagementDistributorsComponent, canActivate : [AuthGuardService] },\r\n      { path: 'sales', component: ManagementSalesComponent, canActivate : [AuthGuardService] },\r\n      { path: 'products', component: ManagementProductsComponent, canActivate : [AuthGuardService] },\r\n      { path: 'passwordchange', component: ManagementPasswordchangeComponent, canActivate : [AuthGuardService] }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, {useHash: true})],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }","<router-outlet></router-outlet>","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'cutie-plushie';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule }   from '@angular/forms';\r\nimport { HttpClientModule} from '@angular/common/http';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatPaginatorModule, MatPaginatorIntl } from '@angular/material/paginator';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSortModule } from '@angular/material/sort';\r\n\r\nimport { MatTableExporterModule } from 'mat-table-exporter';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { ManagementComponent } from './management/management.component';\r\nimport { ManagementHomeComponent } from './management/management-home/management-home.component';\r\nimport { ManagementRegisterComponent } from './management/management-register/management-register.component';\r\nimport { ManagementSuppliersComponent } from './management/management-suppliers/management-suppliers.component';\r\nimport { ManagementDistributorsComponent } from './management/management-distributors/management-distributors.component';\r\nimport { ManagementSalesComponent } from './management/management-sales/management-sales.component';\r\nimport { ManagementProductsComponent } from './management/management-products/management-products.component';\r\nimport { ManagementLoginComponent } from './management/management-login/management-login.component';\r\nimport { ManagementPasswordchangeComponent } from './management/management-passwordchange/management-passwordchange.component';\r\n\r\nimport { MatPaginatorIntlEsp } from './management/customPaginatorLabels';\r\nimport { ProductDialogFormComponent } from './management/management-products/product-dialog-form/product-dialog-form.component';\r\nimport { SupplierDialogFormComponent } from './management/management-suppliers/supplier-dialog-form/supplier-dialog-form.component';\r\nimport { DistributorDialogFormComponent } from './management/management-distributors/distributor-dialog-form/distributor-dialog-form.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ManagementComponent,\r\n    ManagementLoginComponent,\r\n    ManagementHomeComponent,\r\n    ManagementRegisterComponent,\r\n    ManagementSuppliersComponent,\r\n    ManagementDistributorsComponent,\r\n    ManagementSalesComponent,\r\n    ManagementProductsComponent,\r\n    ManagementPasswordchangeComponent,\r\n    ProductDialogFormComponent,\r\n    SupplierDialogFormComponent,\r\n    DistributorDialogFormComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSortModule,\r\n    MatDialogModule,\r\n    MatTableExporterModule\r\n  ],\r\n  providers: [\r\n    HttpClientModule,\r\n    { provide: MatPaginatorIntl, useClass: MatPaginatorIntlEsp}\r\n  ],\r\n  bootstrap: [AppComponent],\r\n  entryComponents: [\r\n    ProductDialogFormComponent,\r\n    SupplierDialogFormComponent,\r\n    DistributorDialogFormComponent\r\n  ],\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate,Router } from '@angular/router';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuardService implements CanActivate {\r\n\r\n  constructor(private authService : AuthService, private router : Router) { }\r\n\r\n  canActivate(){\r\n    if(this.authService.isAuthenticated()){\r\n      return true;\r\n    }\r\n    this.router.navigate(['management/login']);\r\n    return false;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  constructor() { }\r\n\r\n    public isAuthenticated() : Boolean {\r\n      let token = localStorage.getItem('cutie-plushie-token')\r\n      if(token != null && token != ''){\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { MatPaginatorIntl } from '@angular/material/paginator';\r\n\r\n@Injectable()\r\nexport class MatPaginatorIntlEsp extends MatPaginatorIntl {\r\n  itemsPerPageLabel = 'Productos por página';\r\n  nextPageLabel     = 'Siguiente página';\r\n  previousPageLabel = 'Página anterior';\r\n\r\n  getRangeLabel = function (page, pageSize, length) {\r\n    if (length === 0 || pageSize === 0) {\r\n      return '0 de ' + length;\r\n    }\r\n    length = Math.max(length, 0);\r\n    const startIndex = page * pageSize;\r\n    // If the start index exceeds the list length, do not try and fix the end index to the end.\r\n    const endIndex = startIndex < length ?\r\n      Math.min(startIndex + pageSize, length) :\r\n      startIndex + pageSize;\r\n    return startIndex + 1 + ' - ' + endIndex + ' de ' + length;\r\n  };\r\n\r\n}","<div class=\"form\">\r\n    <h1 mat-dialog-title *ngIf=\"formType == 'Create'\">Agregar distribuidor</h1>\r\n    <h1 mat-dialog-title *ngIf=\"formType == 'Update'\">Actualizar distribuidor</h1>\r\n    <form [formGroup]=\"distributorForm\">\r\n        <div class=\"form-group\">\r\n            <label for=\"distributorName\">Nombre del distribuidor*</label>\r\n            <input type=\"text\" formControlName=\"distributorName\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted &&  distributorForm.controls.distributorName.invalid }\" />\r\n            <div *ngIf=\"submitted &&  distributorForm.controls.distributorName.invalid\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"submitted && distributorForm.controls.distributorName.errors.required\">Por favor ingrese el nombre</div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"distributorContactName\">Nombre del contacto*</label>\r\n            <input type=\"text\" formControlName=\"distributorContactName\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted &&  distributorForm.controls.distributorContactName.invalid }\" />\r\n            <div *ngIf=\"submitted &&  distributorForm.controls.distributorContactName.invalid\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"submitted && distributorForm.controls.distributorContactName.errors.required\">Por favor ingrese el nombre del contacto</div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"distributorPhoneNumber\">Teléfono*</label>\r\n            <input type=\"text\" formControlName=\"distributorPhoneNumber\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted &&  distributorForm.controls.distributorPhoneNumber.invalid }\" />\r\n            <div *ngIf=\"submitted &&  distributorForm.controls.distributorPhoneNumber.invalid\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"submitted && distributorForm.controls.distributorPhoneNumber.errors.required\">Por favor introduzca el teléfono</div>\r\n                <div *ngIf=\"submitted && distributorForm.controls.distributorPhoneNumber.errors.minLength\">Número telefónico inválido, debe ser de 10 dígitos</div>\r\n                <div *ngIf=\"submitted && distributorForm.controls.distributorPhoneNumber.errors.maxLength\">Número telefónico inválido, debe ser de 10 dígitos</div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"distributorMail\">Correo electrónico*</label>\r\n            <input type=\"text\" formControlName=\"distributorMail\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted &&  distributorForm.controls.distributorMail.invalid }\" />\r\n            <div *ngIf=\"submitted &&  distributorForm.controls.distributorMail.invalid\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"submitted && distributorForm.controls.distributorMail.errors.required\">Por favor introduzca un correo electrónico</div>\r\n                <div *ngIf=\"submitted && distributorForm.controls.distributorMail.errors.email\">Por favor introduzca una dirección válida</div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-buttons\">\r\n            <button (click)=\"createDistributor()\" class=\"btn-create\" *ngIf=\"formType == 'Create'\">Agregar</button>\r\n            <button (click)=\"updateDistributor()\" class=\"btn-update\" *ngIf=\"formType == 'Update'\">Actualizar</button>\r\n            <button (click)=\"closeDialog()\" class=\"btn-cancel\">Cancelar</button>\r\n          </div>\r\n    </form>\r\n    \r\n</div>\r\n\r\n","import { Component, OnInit, Inject, Optional } from '@angular/core';\r\nimport { MAT_DIALOG_DATA,MatDialogRef } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router'\r\nimport { HttpClient, HttpResponse, HttpHeaders } from '@angular/common/http';\r\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\r\n\r\nexport interface Distributor {\r\n  distributorId: string,\r\n  distributorName: string,\r\n  distributorContactName: string,\r\n  distributorPhoneNumber: string,\r\n  distributorMail: string\r\n  active: boolean\r\n}\r\n\r\n@Component({\r\n  selector: 'app-distributor-dialog-form',\r\n  templateUrl: './distributor-dialog-form.component.html',\r\n  styleUrls: ['./distributor-dialog-form.component.css']\r\n})\r\nexport class DistributorDialogFormComponent implements OnInit {\r\n\r\n  distributor: Distributor;\r\n  submitted: boolean = false;\r\n  distributorForm: FormGroup;\r\n  formType: string;\r\n \r\n  constructor(\r\n    @Optional() @Inject(MAT_DIALOG_DATA) private data: Distributor,\r\n    private dialogRef: MatDialogRef<DistributorDialogFormComponent>,\r\n    private http: HttpClient,\r\n    private router: Router,\r\n    private formBuilder: FormBuilder\r\n  ) {\r\n    let userGroup = JSON.parse(localStorage.getItem('user-details')).userGroup;\r\n    if(userGroup != \"ADMIN\"){\r\n      alert('Acceso denegado. Usted no cuenta con permisos suficientes para efectuar la operación solicitada.');\r\n      this.router.navigate(['management/distributors']);\r\n    }\r\n    this.distributorForm = this.formBuilder.group({\r\n      distributorName: new FormControl('', [\r\n        Validators.required\r\n      ]),\r\n      distributorContactName: new FormControl('', [\r\n        Validators.required\r\n      ]),\r\n      distributorPhoneNumber: new FormControl('', [\r\n        Validators.required,\r\n        Validators.minLength(10),\r\n        Validators.maxLength(10)\r\n      ]),\r\n      distributorMail: new FormControl('', [\r\n        Validators.required,\r\n        Validators.email\r\n      ])\r\n    });\r\n\r\n    this.distributor = data;\r\n    if(this.distributor == null){\r\n      this.formType = \"Create\";\r\n    } else {\r\n      this.formType = \"Update\";\r\n      let controls = this.distributorForm.controls;\r\n      controls.distributorName.setValue(this.distributor.distributorName);\r\n      controls.distributorContactName.setValue(this.distributor.distributorContactName);\r\n      controls.distributorPhoneNumber.setValue(this.distributor.distributorPhoneNumber);\r\n      controls.distributorMail.setValue(this.distributor.distributorMail);\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    \r\n  }\r\n \r\n  async createDistributor(){\r\n    this.submitted = true;\r\n\r\n    if (this.distributorForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    let controls = this.distributorForm.controls;\r\n    this.distributor = {\r\n      distributorId: '',\r\n      distributorName: controls.distributorName.value,\r\n      distributorContactName: controls.distributorContactName.value,\r\n      distributorPhoneNumber: controls.distributorPhoneNumber.value,\r\n      distributorMail: controls.distributorMail.value,\r\n      active: true,\r\n    };\r\n\r\n    let res = await this.postDistributor(this.distributor);\r\n    \r\n    if(res.status == 200) {\r\n      alert('El distribuidor se ha creado con éxito!');\r\n      this.dialogRef.close({ status: 'DONE' });\r\n    } else if(res.status == 401) {\r\n      alert('Sus credenciales han expirado. Por favor inicie sesión de nuevo.');\r\n      localStorage.removeItem('cutie-plushie-token');\r\n      localStorage.removeItem('user-details');\r\n      window.location.reload();\r\n    }\r\n  }\r\n\r\n  postDistributor(distributor: Distributor): Promise<HttpResponse<Object>>{\r\n    let token = localStorage.getItem('cutie-plushie-token');\r\n    const headers = new HttpHeaders()\r\n          .set(\"Authorization\", \"Bearer \" + token);\r\n\r\n    return this.http.post(\r\n      '/api/v1/management/distributors/', \r\n      {\r\n        'distributorName' : distributor.distributorName,\r\n        'distributorContactName' : distributor.distributorContactName,\r\n        'distributorPhoneNumber' : distributor.distributorPhoneNumber,\r\n        'distributorMail' : distributor.distributorMail\r\n      }, \r\n      {headers: headers, observe: 'response', responseType: 'json'}\r\n    ).toPromise().then(function(res) {\r\n      return res;\r\n    }).catch(function(err){ \r\n      return err;\r\n    });\r\n  }\r\n\r\n  async updateDistributor(){\r\n    this.submitted = true;\r\n    if (this.distributorForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    let controls = this.distributorForm.controls;\r\n    this.distributor = {\r\n      distributorId: this.distributor.distributorId,\r\n      distributorName: controls.distributorName.value,\r\n      distributorContactName: controls.distributorContactName.value,\r\n      distributorPhoneNumber: controls.distributorPhoneNumber.value,\r\n      distributorMail: controls.distributorMail.value,\r\n      active: true\r\n    };\r\n\r\n    let res = await this.putDistributor(this.distributor);\r\n    \r\n    if(res.status == 200) {\r\n      alert('El distribuidor se ha actualizado con éxito!');\r\n      this.dialogRef.close({ status: 'DONE' });\r\n    } else if(res.status == 401) {\r\n      alert('Sus credenciales han expirado. Por favor inicie sesión de nuevo.');\r\n      localStorage.removeItem('cutie-plushie-token');\r\n      localStorage.removeItem('user-details');\r\n      this.router.navigate(['management/login']);\r\n    }\r\n  }\r\n\r\n  putDistributor(distributor: Distributor): Promise<HttpResponse<Object>>{\r\n    let token = localStorage.getItem('cutie-plushie-token');\r\n    const headers = new HttpHeaders()\r\n          .set(\"Authorization\", \"Bearer \" + token);\r\n\r\n    return this.http.put(\r\n      '/api/v1/management/distributors/'+ distributor.distributorId, \r\n      {\r\n        'distributorName' : distributor.distributorName, \r\n        'distributorContactName' : distributor.distributorContactName,\r\n        'distributorPhoneNumber' : distributor.distributorPhoneNumber,\r\n        'distributorMail': distributor.distributorMail,\r\n        'active' : distributor.active\r\n      }, \r\n      {headers: headers, observe: 'response', responseType: 'json'}\r\n    ).toPromise().then(function(res) {\r\n      return res;\r\n    }).catch(function(err){ \r\n      return err;\r\n    });\r\n  }\r\n \r\n  closeDialog(){\r\n    this.dialogRef.close({ status: 'CANCEL' });\r\n  }\r\n}\r\n","<div class=\"distributors-component\">\r\n    <div class=\"table-container\">\r\n        <h1>\r\n            Distribuidores\r\n        </h1>\r\n\r\n        <mat-form-field>\r\n            <input class=\"filter-box\" matInput (keyup)=\"applyFilter($event)\" placeholder=\"Buscar...\"/>\r\n        </mat-form-field>\r\n        <button class=\"btn-create\" (click)=\"createDistributor()\">\r\n            Nuevo distribuidor\r\n        </button>\r\n\r\n        <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\" matSort>\r\n\r\n            <ng-container matColumnDef=\"distributorId\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\r\n              <td mat-cell *matCellDef=\"let distributor\"> {{distributor.distributorId}} </td>\r\n            </ng-container>\r\n          \r\n            <ng-container matColumnDef=\"distributorName\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Nombre </th>\r\n              <td mat-cell *matCellDef=\"let distributor\"> {{distributor.distributorName}} </td>\r\n            </ng-container>\r\n          \r\n            <ng-container matColumnDef=\"distributorContactName\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Contacto </th>\r\n              <td mat-cell *matCellDef=\"let distributor\"> {{distributor.distributorContactName}} </td>\r\n            </ng-container>\r\n          \r\n            <ng-container matColumnDef=\"distributorPhoneNumber\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Teléfono </th>\r\n              <td mat-cell *matCellDef=\"let distributor\"> {{distributor.distributorPhoneNumber}} </td>\r\n            </ng-container>\r\n    \r\n            <ng-container matColumnDef=\"distributorMail\">\r\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Correo de contacto </th>\r\n                <td mat-cell *matCellDef=\"let distributor\"> {{distributor.distributorMail}} </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"actions\">\r\n                <th mat-header-cell *matHeaderCellDef > Acciones </th>\r\n                <td mat-cell *matCellDef=\"let distributor\"> \r\n                    <button class=\"btn-edit\" (click)=\"editDistributor(distributor)\">\r\n                        Editar\r\n                    </button>\r\n                    <button class=\"btn-delete\" (click)=\"deleteDistributor(distributor)\">\r\n                        Eliminar\r\n                    </button>\r\n                </td>\r\n            </ng-container>\r\n          \r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n            \r\n        </table>\r\n        <mat-paginator [length]=\"dataSource.data.length\" [pageSizeOptions]=\"[10, 25, 50, 100]\"></mat-paginator>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { HttpClient, HttpResponse, HttpHeaders } from '@angular/common/http';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { DistributorDialogFormComponent } from './distributor-dialog-form/distributor-dialog-form.component';\r\n\r\nexport interface Distributor {\r\n  distributorId: string,\r\n  distributorName: string,\r\n  distributorContactName: string,\r\n  distributorPhoneNumber: string,\r\n  distributorMail: string,\r\n  active: boolean\r\n}\r\n\r\n@Component({\r\n  selector: 'app-management-distributors',\r\n  templateUrl: './management-distributors.component.html',\r\n  styleUrls: ['./management-distributors.component.css']\r\n})\r\nexport class ManagementDistributorsComponent implements OnInit {\r\n\r\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\r\n\r\n  displayedColumns: string[] = [\r\n    'distributorId',\r\n    'distributorName',\r\n    'distributorContactName',\r\n    'distributorPhoneNumber',\r\n    'distributorMail',\r\n    'actions'\r\n  ];\r\n  distributors: Distributor[] = [ ];\r\n  isAdmin = this.userIsAdmin();\r\n  dataSource: MatTableDataSource<Distributor>;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private router: Router,\r\n    private dialog: MatDialog\r\n  ) { \r\n    if(!this.userIsAdmin){\r\n      alert(\"Usted no cuenta con permisos para ver esta página\");\r\n      this.router.navigate(['management/home']);\r\n    }\r\n    this.displayDistributors();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.dataSource = new MatTableDataSource(this.distributors);\r\n    // Assign the paginator to our data source\r\n    this.dataSource.paginator = this.paginator;\r\n    // Assign the a sorter to our data source\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    // Apply a filter to the dataSource after user input\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    // Return to first page after applying a filter\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  userIsAdmin(): boolean{\r\n    let details = localStorage.getItem('user-details');\r\n    if(details != null){\r\n      let user = JSON.parse(details);\r\n      if(user.userGroup == \"ADMIN\"){\r\n        return true;\r\n      }\r\n      return false\r\n    }\r\n    return false;\r\n  }\r\n\r\n\r\n\r\n  // Related to back-end distributor management\r\n\r\n  async displayDistributors() {\r\n    let res = await this.getDistributors();\r\n    if(res.status == 200) {\r\n      let body = <Distributor[]>res.body\r\n      for(let distributor of body){\r\n        console.log(distributor);\r\n        let distributorJson: Distributor = JSON.parse(JSON.stringify(distributor));\r\n        console.log(distributorJson);\r\n        this.distributors.push(distributorJson);\r\n      }\r\n      this.dataSource = new MatTableDataSource(this.distributors);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort; \r\n    } else if(res.status == 401) {\r\n      alert('Sus credenciales han expirado. Por favor inicie sesión de nuevo.');\r\n      localStorage.removeItem('cutie-plushie-token');\r\n      localStorage.removeItem('user-details');\r\n      this.router.navigate(['management/login']);\r\n    } \r\n  }\r\n\r\n  public getDistributors(): Promise<HttpResponse<Object>> {\r\n    let token = localStorage.getItem('cutie-plushie-token')\r\n    const headers = new HttpHeaders()\r\n          .set(\"Authorization\", \"Bearer \" + token);\r\n\r\n    return this.http.get(\r\n      '/api/v1/management/distributors/',\r\n      {headers: headers, observe: 'response', responseType: 'json'}\r\n    ).toPromise().then(function(res) {\r\n      return res;\r\n    }).catch(function(err){ \r\n      return err;\r\n    });\r\n  }\r\n\r\n  createDistributor() {\r\n    const dialogRef = this.dialog.open(DistributorDialogFormComponent, {\r\n      width: '800px',\r\n      height: '480px',\r\n      data: null\r\n    });\r\n    \r\n    dialogRef.afterClosed().subscribe(function(result){\r\n      if(result.status == 'DONE'){\r\n        window.location.reload();\r\n      }\r\n    });\r\n  }\r\n\r\n  async deleteDistributor(distributor: Distributor) {\r\n    let confirmation = confirm(\"Está seguro de que desea eliminar al distribuidor? Esta operación no se puede deshacer.\");\r\n    if(!confirmation){\r\n      return;\r\n    }\r\n\r\n    let res = await this.distributorDelete(distributor);\r\n    if(res.status == 200) {\r\n      alert('El distribuidor se ha eliminado con éxito!');\r\n      window.location.reload();\r\n    } else if(res.status == 401) {\r\n      alert('Sus credenciales han expirado. Por favor inicie sesión de nuevo.');\r\n      localStorage.removeItem('cutie-plushie-token');\r\n      localStorage.removeItem('user-details');\r\n      this.router.navigate(['management/login']);\r\n    } else if(res.status == 403) {\r\n      alert(\"INTENTO DE INTRUSIÓN.\");\r\n    }\r\n  }\r\n\r\n  distributorDelete(distributor: Distributor): Promise<HttpResponse<Object>> { \r\n    let token = localStorage.getItem('cutie-plushie-token');\r\n\r\n    const headers = new HttpHeaders()\r\n          .set(\"Authorization\", \"Bearer \" + token);\r\n\r\n    return this.http.put(\r\n      '/api/v1/management/distributors/' + distributor.distributorId, \r\n      {\r\n        'distributorName' : distributor.distributorName, \r\n        'distributorContactName' : distributor.distributorContactName,\r\n        'distributorPhoneNumber' : distributor.distributorPhoneNumber,\r\n        'distributorMail': distributor.distributorMail,\r\n        'active' : 'false'\r\n      }, \r\n      {headers: headers, observe: 'response', responseType: 'json'}\r\n    ).toPromise().then(function(res) {\r\n      return res;\r\n    }).catch(function(err){ \r\n      return err;\r\n    });\r\n  }\r\n\r\n  editDistributor(distributor: Distributor) {\r\n    const dialogRef = this.dialog.open(DistributorDialogFormComponent, {\r\n      width: '800px',\r\n      height: '480px',\r\n      data: distributor\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(function(result){\r\n      if(result.status == 'DONE'){\r\n        window.location.reload();\r\n      }\r\n    });\r\n  }\r\n\r\n}","<div class='home-page'>\r\n    <h1>\r\n        Hola {{userName}}!\r\n    </h1>\r\n    <h2>\r\n        Bienvenido a Cutie Plushie Management System.\r\n    </h2>\r\n    <br>\r\n    <h3>\r\n        Haz clic en las opciones del menú para comenzar.\r\n    </h3>\r\n    <img\r\n        height=\"200px\"\r\n        alt=\"Logo\"\r\n        src=\"assets/images/cutie_plushie_logo.png\"\r\n        />\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-management-home',\r\n  templateUrl: './management-home.component.html',\r\n  styleUrls: ['./management-home.component.css']\r\n})\r\nexport class ManagementHomeComponent implements OnInit {\r\n\r\n  userName = JSON.parse(localStorage.getItem('user-details')).userName;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"login-component\">\r\n    <div class=\"form-container\">\r\n        <img\r\n        height=\"120px\"\r\n        alt=\"Logo\"\r\n        src=\"assets/images/cutie_plushie_logo.png\"\r\n        />\r\n        <h2>Bienvenido a Cutie Plushie!</h2>\r\n        <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\r\n            <div class=\"form-group\">\r\n                <label for=\"user\">Clave de usuario</label>\r\n                <input type=\"text\" formControlName=\"user\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && loginForm.controls.user.invalid }\"/>\r\n                <div *ngIf=\"submitted && loginForm.controls.user.invalid\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"submitted && loginForm.controls.user.errors.required\">Por favor ingrese una clave de usuario</div>\r\n                    <div *ngIf=\"submitted && loginForm.controls.user.errors.maxlength\">Su clave de usuario debe tener 9 caracteres alfanuméricos</div>\r\n                    <div *ngIf=\"submitted && loginForm.controls.user.errors.minlength\">Su clave de usuario debe tener 9 caracteres alfanuméricos</div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"password\">Contraseña</label>\r\n                <input type=\"password\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && loginForm.controls.password.invalid }\" />\r\n                <div *ngIf=\"submitted && loginForm.controls.password.invalid\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"submitted && loginForm.controls.password.errors.required\">Por favor ingrese su contraseña</div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <button class=\"btn-login\">\r\n                    Iniciar sesión\r\n                </button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient, HttpResponse, HttpErrorResponse } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-management-login',\r\n  templateUrl: './management-login.component.html',\r\n  styleUrls: ['./management-login.component.css']\r\n})\r\nexport class ManagementLoginComponent implements OnInit {\r\n  loginForm: FormGroup;\r\n  submitted = false;\r\n\r\n  constructor(\r\n    private http: HttpClient, \r\n    private router: Router,\r\n    private formBuilder: FormBuilder\r\n    ) { \r\n      let token = localStorage.getItem('cutie-plushie-token')\r\n      if(token != null){\r\n        this.router.navigate(['management/home']);\r\n      }\r\n\r\n      this.loginForm = this.formBuilder.group({\r\n        user: new FormControl('', [\r\n          Validators.required,\r\n          Validators.minLength(9),\r\n          Validators.maxLength(9)\r\n        ]),\r\n        password: new FormControl('', [\r\n          Validators.required\r\n        ])\r\n      });\r\n    }\r\n\r\n  ngOnInit(): void {\r\n      \r\n  }\r\n\r\n  async onSubmit() {\r\n    this.submitted = true;\r\n    // Stop here if form is invalid\r\n    if (this.loginForm.invalid) {\r\n      //alert(\"Por favor introduzca su usuario y contraseña para poder ingresar.\");}\r\n      \r\n      return;\r\n    }\r\n\r\n    let res = await this.validate(this.loginForm.controls.user.value, this.loginForm.controls.password.value);\r\n    \r\n    if(res.status == 200){\r\n      let body = res.body;\r\n      let bodyJson = JSON.parse(JSON.stringify(body));\r\n      let user = {\r\n        userKey: bodyJson.userKey,\r\n        userName: bodyJson.userName,\r\n        userLastName: bodyJson.userLastName,\r\n        userGroup: bodyJson.userGroup\r\n      }\r\n      let token = bodyJson.token\r\n      localStorage.setItem('cutie-plushie-token',token);\r\n      localStorage.setItem('user-details',JSON.stringify(user));\r\n      this.router.navigate(['management/home']);\r\n    } else if(res.status == 401){\r\n      alert(\"Usuario y/o contraseña incorrectos.\");\r\n    }\r\n  }\r\n\r\n  public validate(key: string, password: string): Promise<HttpResponse<Object>> {\r\n    password = btoa(password);\r\n    return this.http.post(\r\n      '/api/v1/management/login', \r\n      {'key' : key, 'pwd' : password}, \r\n      {observe: 'response', responseType: 'json'}\r\n    ).toPromise().then(function(res) {\r\n      return res;\r\n    }).catch(function(err){ \r\n      return err;\r\n    });\r\n  }\r\n}\r\n","<div class=\"passwordchange-component\">\r\n    <div class=\"form-container\">\r\n        <h1>\r\n            Cambiar contraseña\r\n        </h1>\r\n        <form [formGroup]=\"passwordChangeForm\" (ngSubmit)=\"onSubmit()\">\r\n            <div class=\"form-group\">\r\n                <label for=\"oldPassword\">Contraseña anterior</label>\r\n                <input type=\"password\" formControlName=\"oldPassword\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted &&  passwordChangeForm.controls.oldPassword.invalid }\" />\r\n                <div *ngIf=\"submitted &&  passwordChangeForm.controls.oldPassword.invalid\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"submitted &&  passwordChangeForm.controls.oldPassword.errors.required\">\r\n                        Por favor ingrese su contraseña anterior\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"newPassword\">Contraseña nueva</label>\r\n                <input type=\"password\" formControlName=\"newPassword\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted &&  passwordChangeForm.controls.newPassword.invalid }\" />\r\n                <div *ngIf=\"submitted &&  passwordChangeForm.controls.newPassword.invalid\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"submitted &&  passwordChangeForm.controls.newPassword.errors.required\">\r\n                        Por favor ingrese su nueva contraseña\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"confirmPassword\">Confirmar contraseña nueva</label>\r\n                <input type=\"password\" formControlName=\"confirmPassword\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted &&  passwordChangeForm.controls.confirmPassword.invalid }\" />\r\n                <div *ngIf=\"submitted &&  passwordChangeForm.controls.confirmPassword.invalid\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"submitted &&  passwordChangeForm.controls.confirmPassword.errors.required\">\r\n                        Por favor confirme su nueva contraseña\r\n                    </div>\r\n                    <div *ngIf=\"submitted &&  passwordChangeForm.controls.confirmPassword.errors.pattern\">\r\n                        La contraseña no coincide con su nueva contraseña\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <button class=\"btn-passwordchange\">\r\n                    Cambiar mi contraseña\r\n                </button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient, HttpResponse, HttpHeaders } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-management-passwordchange',\r\n  templateUrl: './management-passwordchange.component.html',\r\n  styleUrls: ['./management-passwordchange.component.css']\r\n})\r\nexport class ManagementPasswordchangeComponent implements OnInit {\r\n  passwordChangeForm: FormGroup;\r\n  submitted = false;\r\n\r\n  constructor(\r\n    private http: HttpClient, \r\n    private router: Router,\r\n    private formBuilder: FormBuilder\r\n    ) {\r\n      this.passwordChangeForm = this.formBuilder.group({\r\n        oldPassword: new FormControl('', [\r\n          Validators.required\r\n        ]),\r\n        newPassword: new FormControl('', [\r\n          Validators.required\r\n        ]),\r\n        confirmPassword: new FormControl('', [\r\n          Validators.required,\r\n          Validators.pattern(\"^$\")\r\n        ])\r\n      });\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n    }\r\n\r\n    async onSubmit() {\r\n      this.submitted = true;\r\n      let value = this.passwordChangeForm.controls.confirmPassword.value;\r\n\r\n      this.passwordChangeForm.removeControl(\"confirmPassword\");\r\n      this.passwordChangeForm.addControl(\"confirmPassword\",\r\n        new FormControl(value, [\r\n          Validators.required,\r\n          Validators.pattern(\"^\"+this.passwordChangeForm.controls.newPassword.value+\"$\")\r\n        ])\r\n      )\r\n      // Stop here if form is invalid\r\n      if (this.passwordChangeForm.invalid) {\r\n        return;\r\n      }\r\n  \r\n      let res = await this.changePassword(this.passwordChangeForm.controls.oldPassword.value, this.passwordChangeForm.controls.newPassword.value);\r\n      \r\n      if(res.status == 200) {\r\n        let body = res.body;\r\n        let bodyJson = JSON.parse(JSON.stringify(body));\r\n        let token = bodyJson.token\r\n        localStorage.setItem('cutie-plushie-token',token);\r\n        alert('Su contraseña se ha cambiado con éxito!');\r\n        this.router.navigate(['management/home']);\r\n      } else if(res.status == 401) {\r\n        alert('Sus credenciales han expirado. Por favor inicie sesión de nuevo.');\r\n        localStorage.removeItem('cutie-plushie-token');\r\n        localStorage.removeItem('user-details');\r\n        this.router.navigate(['management/login']);\r\n      } else if(res.status == 403) {\r\n        alert(\"Su contraseña anterior no coincide con los registros. Por favor intente de nuevo.\");\r\n      }\r\n    }\r\n  \r\n    public changePassword(pwdOld: string, pwdNew: string): Promise<HttpResponse<Object>> {\r\n      let user = JSON.parse(localStorage.getItem('user-details')).userKey;\r\n      let token = localStorage.getItem('cutie-plushie-token');\r\n\r\n      pwdOld = btoa(pwdOld);\r\n      pwdNew = btoa(pwdNew)\r\n\r\n      const headers = new HttpHeaders()\r\n            .set(\"Authorization\", \"Bearer \" + token);\r\n\r\n      return this.http.put(\r\n        '/api/v1/management/users/' + user, \r\n        {'pwdOld' : pwdOld, 'pwdNew' : pwdNew}, \r\n        {headers: headers, observe: 'response', responseType: 'json'}\r\n      ).toPromise().then(function(res) {\r\n        return res;\r\n      }).catch(function(err){ \r\n        return err;\r\n      });\r\n    }\r\n\r\n}\r\n","<div class=\"products-component\">\r\n    <div class=\"table-container\">\r\n        <h1>\r\n            Productos\r\n        </h1>\r\n\r\n        <mat-form-field>\r\n            <input class=\"filter-box\" matInput (keyup)=\"applyFilter($event)\" placeholder=\"Buscar...\"/>\r\n        </mat-form-field>\r\n        <button class=\"btn-create\" *ngIf=\"isAdmin\" (click)=\"createProduct()\">\r\n            Nuevo producto\r\n        </button>\r\n\r\n        <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\" matSort>\r\n\r\n            <ng-container matColumnDef=\"productId\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\r\n              <td mat-cell *matCellDef=\"let product\"> {{product.productId}} </td>\r\n            </ng-container>\r\n          \r\n            <ng-container matColumnDef=\"productName\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Nombre </th>\r\n              <td mat-cell *matCellDef=\"let product\"> {{product.productName}} </td>\r\n            </ng-container>\r\n          \r\n            <ng-container matColumnDef=\"productDescription\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Descripción </th>\r\n              <td mat-cell *matCellDef=\"let product\"> {{product.productDescription}} </td>\r\n            </ng-container>\r\n          \r\n            <ng-container matColumnDef=\"productUnitPriceMXN\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Precio (MXN) </th>\r\n              <td mat-cell *matCellDef=\"let product\"> {{product.productUnitPriceMXN}} </td>\r\n            </ng-container>\r\n    \r\n            <ng-container matColumnDef=\"productActiveDiscount\">\r\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Descuento (%) </th>\r\n                <td mat-cell *matCellDef=\"let product\"> {{product.productActiveDiscount}} </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"supplierName\">\r\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Proveedor </th>\r\n                <td mat-cell *matCellDef=\"let product\"> {{product.supplier.supplierName}} </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"categoryName\">\r\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Categoría </th>\r\n                <td mat-cell *matCellDef=\"let product\"> {{product.category.categoryName}} </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"actions\">\r\n                <th mat-header-cell *matHeaderCellDef > Acciones </th>\r\n                <td mat-cell *matCellDef=\"let product\"> \r\n                    <button *ngIf=\"isAdmin\" class=\"btn-edit\" (click)=\"editProduct(product)\">\r\n                        Editar\r\n                    </button>\r\n                    <button *ngIf=\"isAdmin\" class=\"btn-delete\" (click)=\"deleteProduct(product)\">\r\n                        Eliminar\r\n                    </button>\r\n                </td>\r\n            </ng-container>\r\n          \r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n            \r\n        </table>\r\n        <mat-paginator [length]=\"dataSource.data.length\" [pageSizeOptions]=\"[10, 25, 50, 100]\"></mat-paginator>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { HttpClient, HttpResponse, HttpHeaders } from '@angular/common/http';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { ProductDialogFormComponent } from './product-dialog-form/product-dialog-form.component';\r\n\r\nexport interface Product {\r\n  productId: string,\r\n  productName: string,\r\n  productDescription: string,\r\n  productUnitPriceMXN: number,\r\n  productIcon: string,\r\n  active: boolean,\r\n  productActiveDiscount: number,\r\n  supplier: {\r\n    supplierId: string,\r\n    supplierName: string,\r\n  },\r\n  category: {\r\n    categoryId: string,\r\n    categoryName: string,\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'app-management-products',\r\n  templateUrl: './management-products.component.html',\r\n  styleUrls: ['./management-products.component.css']\r\n})\r\nexport class ManagementProductsComponent implements OnInit {\r\n\r\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\r\n\r\n  displayedColumns: string[] = [\r\n    'productId',\r\n    'productName',\r\n    'productDescription',\r\n    'productUnitPriceMXN',\r\n    'productActiveDiscount',\r\n    'supplierName',\r\n    'categoryName',\r\n    'actions'\r\n  ];\r\n  products: Product[] = [ ];\r\n  isAdmin = this.userIsAdmin();\r\n  dataSource: MatTableDataSource<Product>;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private router: Router,\r\n    private dialog: MatDialog\r\n  ) { \r\n    this.displayProducts();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.dataSource = new MatTableDataSource(this.products);\r\n    // Assign the paginator to our data source\r\n    this.dataSource.paginator = this.paginator;\r\n    // Assign the a sorter to our data source\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    // Apply a filter to the dataSource after user input\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filterPredicate = (data, filter: string) => {\r\n      const accumulator = (currentTerm, key) => {\r\n        if (typeof data[key] === 'object') {\r\n          for (const k in data[key]) {\r\n            if(k === 'supplierId'){\r\n              return currentTerm + data.supplier.supplierName;\r\n            } else if(k === 'categoryId'){\r\n              return currentTerm + data.category.categoryName;\r\n            } \r\n          }\r\n        } else {\r\n          return currentTerm + data[key];\r\n        }\r\n      };\r\n      const dataStr = Object.keys(data).reduce(accumulator, '').toLowerCase();\r\n      // Transform the filter by converting it to lowercase and removing whitespace.\r\n      const transformedFilter = filter.trim().toLowerCase();\r\n      return dataStr.indexOf(transformedFilter) !== -1;\r\n    };\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    // Return to first page after applying a filter\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  userIsAdmin(): boolean{\r\n    let details = localStorage.getItem('user-details');\r\n    if(details != null){\r\n      let user = JSON.parse(details);\r\n      if(user.userGroup == \"ADMIN\"){\r\n        return true;\r\n      }\r\n      return false\r\n    }\r\n    return false;\r\n  }\r\n\r\n\r\n\r\n  // Related to back-end product management\r\n\r\n  async displayProducts() {\r\n    let res = await this.getProducts();\r\n    if(res.status == 200) {\r\n      let body = <Product[]>res.body\r\n      for(let product of body){\r\n        console.log(product);\r\n        let productJson: Product = JSON.parse(JSON.stringify(product));\r\n        console.log(productJson);\r\n        this.products.push(productJson);\r\n      }\r\n      this.dataSource = new MatTableDataSource(this.products);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort; \r\n    } else if(res.status == 401) {\r\n      alert('Sus credenciales han expirado. Por favor inicie sesión de nuevo.');\r\n      localStorage.removeItem('cutie-plushie-token');\r\n      localStorage.removeItem('user-details');\r\n      this.router.navigate(['management/login']);\r\n    } \r\n  }\r\n\r\n  public getProducts(): Promise<HttpResponse<Object>> {\r\n    let token = localStorage.getItem('cutie-plushie-token')\r\n    const headers = new HttpHeaders()\r\n          .set(\"Authorization\", \"Bearer \" + token);\r\n\r\n    return this.http.get(\r\n      '/api/v1/management/products/?page=1&productsPerPage=10000',\r\n      {headers: headers, observe: 'response', responseType: 'json'}\r\n    ).toPromise().then(function(res) {\r\n      return res;\r\n    }).catch(function(err){ \r\n      return err;\r\n    });\r\n  }\r\n\r\n  createProduct() {\r\n    const dialogRef = this.dialog.open(ProductDialogFormComponent, {\r\n      width: '800px',\r\n      height: '600px',\r\n      data: null\r\n    });\r\n    \r\n    dialogRef.afterClosed().subscribe(function(result){\r\n      if(result.status == 'DONE'){\r\n        window.location.reload();\r\n      }\r\n    });\r\n  }\r\n\r\n  async deleteProduct(product: Product) {\r\n    let confirmation = confirm(\"Está seguro de que desea eliminar el producto? Esta operación no se puede deshacer.\");\r\n    if(!confirmation){\r\n      return;\r\n    }\r\n\r\n    let res = await this.productDelete(product);\r\n    if(res.status == 200) {\r\n      alert('El producto se ha eliminado con éxito!');\r\n      window.location.reload();\r\n    } else if(res.status == 401) {\r\n      alert('Sus credenciales han expirado. Por favor inicie sesión de nuevo.');\r\n      localStorage.removeItem('cutie-plushie-token');\r\n      localStorage.removeItem('user-details');\r\n      this.router.navigate(['management/login']);\r\n    } else if(res.status == 403) {\r\n      alert(\"INTENTO DE INTRUSIÓN.\");\r\n    }\r\n  }\r\n\r\n  productDelete(product: Product): Promise<HttpResponse<Object>> { \r\n    let token = localStorage.getItem('cutie-plushie-token');\r\n\r\n    const headers = new HttpHeaders()\r\n          .set(\"Authorization\", \"Bearer \" + token);\r\n\r\n    return this.http.put(\r\n      '/api/v1/management/products/' + product.productId, \r\n      {\r\n        'productName' : product.productName, \r\n        'productDescription' : product.productDescription,\r\n        'productUnitPrice' : product.productUnitPriceMXN,\r\n        'productIcon': product.productIcon,\r\n        'active' : 'false',\r\n        'supplierId': product.supplier.supplierId,\r\n        'productActiveDiscount': product.productActiveDiscount\r\n      }, \r\n      {headers: headers, observe: 'response', responseType: 'json'}\r\n    ).toPromise().then(function(res) {\r\n      return res;\r\n    }).catch(function(err){ \r\n      return err;\r\n    });\r\n  }\r\n\r\n  editProduct(product: Product) {\r\n    const dialogRef = this.dialog.open(ProductDialogFormComponent, {\r\n      width: '800px',\r\n      height: '600px',\r\n      data: product\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(function(result){\r\n      if(result.status == 'DONE'){\r\n        window.location.reload();\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n\r\n\r\n","<div class=\"form\">\r\n    <h1 mat-dialog-title *ngIf=\"formType == 'Create'\">Agregar producto</h1>\r\n    <h1 mat-dialog-title *ngIf=\"formType == 'Update'\">Actualizar producto</h1>\r\n    <form [formGroup]=\"productForm\">\r\n        <div class=\"form-group\">\r\n            <label for=\"productName\">Nombre del producto*</label>\r\n            <input type=\"text\" formControlName=\"productName\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted &&  productForm.controls.productName.invalid }\" />\r\n            <div *ngIf=\"submitted &&  productForm.controls.productName.invalid\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"submitted && productForm.controls.productName.errors.required\">Por favor ingrese el nombre</div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"productDescription\">Descripción*</label>\r\n            <textarea formControlName=\"productDescription\" [ngClass]=\"{ 'is-invalid': submitted &&  productForm.controls.productDescription.invalid }\"></textarea>\r\n            <div *ngIf=\"submitted &&  productForm.controls.productDescription.invalid\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"submitted && productForm.controls.productDescription.errors.required\">Por favor ingrese una descripción</div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"productUnitPriceMXN\">Precio (MXN)*</label>\r\n            <input type=\"text\" formControlName=\"productUnitPriceMXN\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted &&  productForm.controls.productUnitPriceMXN.invalid }\" />\r\n            <div *ngIf=\"submitted &&  productForm.controls.productUnitPriceMXN.invalid\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"submitted && productForm.controls.productUnitPriceMXN.errors.required\">Por favor introduzca el precio</div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\" *ngIf=\"formType == 'Update'\">\r\n            <label for=\"productActiveDiscount\">Descuento*</label>\r\n            <input type=\"text\" formControlName=\"productActiveDiscount\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted &&  productForm.controls.productActiveDiscount.invalid }\" />\r\n            <div *ngIf=\"submitted &&  productForm.controls.productActiveDiscount.invalid\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"submitted && productForm.controls.productActiveDiscount.errors.required\">Por favor introduzca un descuento</div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"supplier\">Proveedor*</label>\r\n            <select class=\"form-control\" formControlName=\"supplier\">\r\n                <option value=\"\">Seleccione una opción...</option>\r\n                <option *ngFor=\"let supplier of suppliers\" [ngValue]=\"supplier.supplierId\">{{supplier.supplierName}}</option>\r\n             </select>\r\n             <div *ngIf=\"submitted &&  productForm.controls.supplier.invalid\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"submitted &&  productForm.controls.supplier.errors.required\">\r\n                    Por favor seleccione una opción\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\" *ngIf=\"formType == 'Create'\">\r\n            <label for=\"category\">Categoría*</label>\r\n            <select class=\"form-control\" formControlName=\"category\">\r\n                <option value=\"\">Seleccione una opción...</option>\r\n                <option *ngFor=\"let category of categories\" [ngValue]=\"category.categoryId\">{{category.categoryName}}</option>\r\n             </select>\r\n             <div *ngIf=\"submitted &&  productForm.controls.category.invalid\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"submitted &&  productForm.controls.category.errors.required\">\r\n                    Por favor seleccione una opción\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-buttons\">\r\n            <button (click)=\"createProduct()\" class=\"btn-create\" *ngIf=\"formType == 'Create'\">Agregar</button>\r\n            <button (click)=\"updateProduct()\" class=\"btn-update\" *ngIf=\"formType == 'Update'\">Actualizar</button>\r\n            <button (click)=\"closeDialog()\" class=\"btn-cancel\">Cancelar</button>\r\n          </div>\r\n    </form>\r\n    \r\n</div>\r\n","import { Component, OnInit, Inject, Optional } from '@angular/core';\r\nimport { MAT_DIALOG_DATA,MatDialogRef } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router'\r\nimport { HttpClient, HttpResponse, HttpHeaders } from '@angular/common/http';\r\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\r\n \r\nexport interface Product {\r\n  productId: string,\r\n  productName: string,\r\n  productDescription: string,\r\n  productUnitPriceMXN: number,\r\n  productIcon: string,\r\n  active: boolean,\r\n  productActiveDiscount: number,\r\n  supplier: {\r\n    supplierId: string,\r\n    supplierName: string,\r\n  },\r\n  category: {\r\n    categoryId: string,\r\n    categoryName: string,\r\n  }\r\n}\r\n\r\nexport interface Supplier {\r\n  supplierId: string,\r\n  supplierName: string,\r\n  supplierContactName: string,\r\n  supplierPhoneNumber: string,\r\n  supplierMail: string\r\n}\r\n\r\nexport interface Category {\r\n  categoryId: string,\r\n  categoryName: string\r\n}\r\n \r\n@Component({\r\n  selector: 'product-dialog-form',\r\n  templateUrl: './product-dialog-form.component.html',\r\n  styleUrls: ['./product-dialog-form.component.css']\r\n})\r\nexport class ProductDialogFormComponent implements OnInit {\r\n \r\n  product: Product;\r\n  submitted: boolean = false;\r\n  productForm: FormGroup;\r\n  formType: string;\r\n\r\n  suppliers: Supplier[] = [];\r\n  categories: Category[] = [];\r\n\r\n \r\n  constructor(\r\n    @Optional() @Inject(MAT_DIALOG_DATA) private data: Product,\r\n    private dialogRef: MatDialogRef<ProductDialogFormComponent>,\r\n    private http: HttpClient,\r\n    private router: Router,\r\n    private formBuilder: FormBuilder\r\n  ) {\r\n    let userGroup = JSON.parse(localStorage.getItem('user-details')).userGroup;\r\n    if(userGroup != \"ADMIN\"){\r\n      alert('Acceso denegado. Usted no cuenta con permisos suficientes para efectuar la operación solicitada.');\r\n      this.router.navigate(['management/products']);\r\n    }\r\n    this.productForm = this.formBuilder.group({\r\n      productName: new FormControl('', [\r\n        Validators.required\r\n      ]),\r\n      productDescription: new FormControl('', [\r\n        Validators.required\r\n      ]),\r\n      productUnitPriceMXN: new FormControl('', [\r\n        Validators.required\r\n      ]),\r\n      productActiveDiscount: new FormControl('0', [\r\n        Validators.required\r\n      ]),\r\n      supplier: new FormControl('', [\r\n        Validators.required\r\n      ]),\r\n      category: new FormControl('', [\r\n        Validators.required\r\n      ])\r\n    });\r\n\r\n    this.product = data;\r\n    if(this.product == null){\r\n      this.formType = \"Create\";\r\n    } else {\r\n      this.formType = \"Update\";\r\n      let controls = this.productForm.controls;\r\n      controls.productName.setValue(this.product.productName);\r\n      controls.productDescription.setValue(this.product.productDescription);\r\n      controls.productUnitPriceMXN.setValue(this.product.productUnitPriceMXN);\r\n      controls.productActiveDiscount.setValue(this.product.productActiveDiscount);\r\n      controls.supplier.setValue(this.product.supplier.supplierId);\r\n      controls.category.setValue(this.product.category.categoryId);\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.storeSuppliers();\r\n    this.storeCategories();\r\n  }\r\n \r\n  async createProduct(){\r\n    this.submitted = true;\r\n\r\n    if (this.productForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    let controls = this.productForm.controls;\r\n    this.product = {\r\n      productId: '',\r\n      productName: controls.productName.value,\r\n      productDescription: controls.productDescription.value,\r\n      productUnitPriceMXN: controls.productUnitPriceMXN.value,\r\n      productIcon: '',\r\n      productActiveDiscount: 0,\r\n      active: true,\r\n      supplier: {\r\n        supplierId: controls.supplier.value,\r\n        supplierName: '',\r\n      },\r\n      category: {\r\n        categoryId: controls.category.value,\r\n        categoryName: ''\r\n      }\r\n    };\r\n\r\n    let res = await this.postProduct(this.product);\r\n    \r\n    if(res.status == 200) {\r\n      alert('El producto se ha creado con éxito!');\r\n      this.dialogRef.close({ status: 'DONE' });\r\n    } else if(res.status == 401) {\r\n      alert('Sus credenciales han expirado. Por favor inicie sesión de nuevo.');\r\n      localStorage.removeItem('cutie-plushie-token');\r\n      localStorage.removeItem('user-details');\r\n      window.location.reload();\r\n    }\r\n  }\r\n\r\n  postProduct(product: Product): Promise<HttpResponse<Object>>{\r\n    let token = localStorage.getItem('cutie-plushie-token');\r\n    const headers = new HttpHeaders()\r\n          .set(\"Authorization\", \"Bearer \" + token);\r\n\r\n    return this.http.post(\r\n      '/api/v1/management/products/', \r\n      {\r\n        'productName' : product.productName,\r\n        'productDescription' : product.productDescription,\r\n        'productUnitPriceMXN' : product.productUnitPriceMXN,\r\n        'productIcon' : '',\r\n        'supplierId': product.supplier.supplierId,\r\n        'categoryId': product.category.categoryId\r\n      }, \r\n      {headers: headers, observe: 'response', responseType: 'json'}\r\n    ).toPromise().then(function(res) {\r\n      return res;\r\n    }).catch(function(err){ \r\n      return err;\r\n    });\r\n  }\r\n\r\n  async updateProduct(){\r\n    this.submitted = true;\r\n    if (this.productForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    let controls = this.productForm.controls;\r\n    this.product = {\r\n      productId: this.product.productId,\r\n      productName: controls.productName.value,\r\n      productDescription: controls.productDescription.value,\r\n      productUnitPriceMXN: controls.productUnitPriceMXN.value,\r\n      productIcon: this.product.productIcon,\r\n      productActiveDiscount: controls.productActiveDiscount.value,\r\n      active: true,\r\n      supplier: {\r\n        supplierId: controls.supplier.value,\r\n        supplierName: '',\r\n      },\r\n      category: {\r\n        categoryId: this.product.category.categoryId,\r\n        categoryName: this.product.category.categoryName\r\n      }\r\n    };\r\n\r\n    let res = await this.putProduct(this.product);\r\n    \r\n    if(res.status == 200) {\r\n      alert('El producto se ha actualizado con éxito!');\r\n      this.dialogRef.close({ status: 'DONE' });\r\n    } else if(res.status == 401) {\r\n      alert('Sus credenciales han expirado. Por favor inicie sesión de nuevo.');\r\n      localStorage.removeItem('cutie-plushie-token');\r\n      localStorage.removeItem('user-details');\r\n      this.router.navigate(['management/login']);\r\n    }\r\n  }\r\n\r\n  putProduct(product: Product): Promise<HttpResponse<Object>>{\r\n    let token = localStorage.getItem('cutie-plushie-token');\r\n    const headers = new HttpHeaders()\r\n          .set(\"Authorization\", \"Bearer \" + token);\r\n\r\n    return this.http.put(\r\n      '/api/v1/management/products/'+ product.productId, \r\n      {\r\n        'productName' : product.productName, \r\n        'productDescription' : product.productDescription,\r\n        'productUnitPrice' : product.productUnitPriceMXN,\r\n        'productIcon': product.productIcon,\r\n        'active' : product.active,\r\n        'supplierId': product.supplier.supplierId,\r\n        'productActiveDiscount': product.productActiveDiscount\r\n      }, \r\n      {headers: headers, observe: 'response', responseType: 'json'}\r\n    ).toPromise().then(function(res) {\r\n      return res;\r\n    }).catch(function(err){ \r\n      return err;\r\n    });\r\n  }\r\n\r\n  async storeSuppliers() {\r\n    let res = await this.getSuppliers();\r\n\r\n    if(res.status == 200) {\r\n      let body = <Supplier[]>res.body\r\n      for(let supplier of body){\r\n        let supplierJson: Supplier = JSON.parse(JSON.stringify(supplier));\r\n        this.suppliers.push(supplierJson);\r\n      }\r\n    } else if(res.status == 401) {\r\n      alert('Sus credenciales han expirado. Por favor inicie sesión de nuevo.');\r\n      localStorage.removeItem('cutie-plushie-token');\r\n      localStorage.removeItem('user-details');\r\n      this.router.navigate(['management/login']);\r\n    } \r\n  }\r\n\r\n  getSuppliers() {\r\n    let token = localStorage.getItem('cutie-plushie-token')\r\n    const headers = new HttpHeaders()\r\n          .set(\"Authorization\", \"Bearer \" + token);\r\n\r\n    return this.http.get(\r\n      '/api/v1/management/suppliers',\r\n      {headers: headers, observe: 'response', responseType: 'json'}\r\n    ).toPromise().then(function(res) {\r\n      return res;\r\n    }).catch(function(err){ \r\n      return err;\r\n    });\r\n  }\r\n\r\n  async storeCategories() {\r\n    let res = await this.getCategories();\r\n\r\n    if(res.status == 200) {\r\n      let body = <Category[]>res.body\r\n      for(let category of body){\r\n        let categoryJson: Category = JSON.parse(JSON.stringify(category));\r\n        this.categories.push(categoryJson);\r\n      }\r\n    } else if(res.status == 401) {\r\n      alert('Sus credenciales han expirado. Por favor inicie sesión de nuevo.');\r\n      localStorage.removeItem('cutie-plushie-token');\r\n      localStorage.removeItem('user-details');\r\n      this.router.navigate(['management/login']);\r\n    }\r\n  }\r\n\r\n  getCategories() {\r\n    let token = localStorage.getItem('cutie-plushie-token')\r\n    const headers = new HttpHeaders()\r\n          .set(\"Authorization\", \"Bearer \" + token);\r\n\r\n    return this.http.get(\r\n      '/api/v1/management/categories',\r\n      {headers: headers, observe: 'response', responseType: 'json'}\r\n    ).toPromise().then(function(res) {\r\n      return res;\r\n    }).catch(function(err){ \r\n      return err;\r\n    });\r\n  }\r\n \r\n  closeDialog(){\r\n    this.dialogRef.close({ status: 'CANCEL' });\r\n  }\r\n \r\n}\r\n","<div class=\"register-component\">\r\n    <div class=\"form-container\">\r\n        <h1>\r\n            Registrar nuevo usuario\r\n        </h1>\r\n        <h3>\r\n            Por favor úsese responsablemente\r\n        </h3>\r\n        <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\r\n            <div class=\"form-group\">\r\n                <label for=\"user\">Clave de usuario*</label>\r\n                <input type=\"text\" formControlName=\"user\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted &&  registerForm.controls.user.invalid }\" />\r\n                <div *ngIf=\"submitted &&  registerForm.controls.user.invalid\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"submitted && registerForm.controls.user.errors.required\">Por favor ingrese la clave del usuario</div>\r\n                    <div *ngIf=\"submitted && registerForm.controls.user.errors.maxlength\">La clave de usuario debe tener 9 caracteres alfanuméricos</div>\r\n                    <div *ngIf=\"submitted && registerForm.controls.user.errors.minlength\">La clave de usuario debe tener 9 caracteres alfanuméricos</div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"name\">Nombre(s)*</label>\r\n                <input type=\"text\" formControlName=\"name\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted &&  registerForm.controls.name.invalid }\" />\r\n                <div *ngIf=\"submitted &&  registerForm.controls.name.invalid\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"submitted && registerForm.controls.name.errors.required\">Por favor ingrese el nombre o nombres</div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"lastName\">Apellidos*</label>\r\n                <input type=\"text\" formControlName=\"lastName\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted &&  registerForm.controls.lastName.invalid }\" />\r\n                <div *ngIf=\"submitted &&  registerForm.controls.lastName.invalid\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"submitted && registerForm.controls.lastName.errors.required\">Por favor ingrese los apellidos</div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"password\">Contraseña*</label>\r\n                <input type=\"password\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted &&  registerForm.controls.password.invalid }\" />\r\n                <div *ngIf=\"submitted &&  registerForm.controls.password.invalid\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"submitted &&  registerForm.controls.password.errors.required\">\r\n                        Por favor ingrese la contraseña\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"confirmPassword\">Confirmar contraseña nueva*</label>\r\n                <input type=\"password\" formControlName=\"confirmPassword\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && registerForm.controls.confirmPassword.invalid }\" />\r\n                <div *ngIf=\"submitted && registerForm.controls.confirmPassword.invalid\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"submitted && registerForm.controls.confirmPassword.errors.required\">\r\n                        Por favor confirme la nueva contraseña\r\n                    </div>\r\n                    <div *ngIf=\"submitted && registerForm.controls.confirmPassword.errors.pattern\">\r\n                        La contraseña no coincide\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"userGroup\">Grupo de permisos*</label>\r\n                <select class=\"form-control\" formControlName=\"userGroup\">\r\n                    <option value=\"\">Seleccione una opción...</option>\r\n                    <option *ngFor=\"let permission of permissions\" [ngValue]=\"permission\">{{permissionsDictionary[permission]}}</option>\r\n                 </select>\r\n                 <div *ngIf=\"submitted &&  registerForm.controls.userGroup.invalid\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"submitted &&  registerForm.controls.userGroup.errors.required\">\r\n                        Por favor seleccione una opción\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <button class=\"btn-register\">\r\n                    Crear nuevo usuario\r\n                </button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient, HttpResponse, HttpHeaders } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-management-register',\r\n  templateUrl: './management-register.component.html',\r\n  styleUrls: ['./management-register.component.css']\r\n})\r\nexport class ManagementRegisterComponent implements OnInit {\r\n  registerForm: FormGroup;\r\n  submitted = false;\r\n  permissionsDictionary = {\r\n    \"CR\": \"Relaciones con el cliente\",\r\n    \"ADMIN\": \"Administrador\"\r\n  };\r\n\r\n  permissions = []\r\n  \r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private router: Router,\r\n    private formBuilder: FormBuilder\r\n  ) { \r\n\r\n    let userGroup = JSON.parse(localStorage.getItem('user-details')).userGroup;\r\n    if(userGroup != \"ADMIN\"){\r\n      alert('Acceso denegado. Usted no cuenta con permisos suficientes para efectuar la operación solicitada.');\r\n      this.router.navigate(['management/home']);\r\n    }\r\n\r\n    for(let permission in this.permissionsDictionary){\r\n      this.permissions.push(permission);\r\n    }\r\n\r\n    this.registerForm = this.formBuilder.group({\r\n      user: new FormControl('', [\r\n        Validators.required,\r\n        Validators.minLength(9),\r\n        Validators.maxLength(9)\r\n      ]),\r\n      name: new FormControl('', [\r\n        Validators.required\r\n      ]),\r\n      lastName: new FormControl('', [\r\n        Validators.required\r\n      ]),\r\n      password: new FormControl('', [\r\n        Validators.required\r\n      ]),\r\n      confirmPassword: new FormControl('', [\r\n        Validators.required,\r\n        Validators.pattern(\"^$\")\r\n      ]),\r\n      userGroup: new FormControl('', [\r\n        Validators.required\r\n      ])\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  async onSubmit() {\r\n    this.submitted = true;\r\n      \r\n    let value = this.registerForm.controls.confirmPassword.value;\r\n    this.registerForm.removeControl(\"confirmPassword\");\r\n    this.registerForm.addControl(\"confirmPassword\",\r\n      new FormControl(value, [\r\n        Validators.required,\r\n        Validators.pattern(\"^\"+this.registerForm.controls.password.value+\"$\")\r\n      ])\r\n    )\r\n\r\n    // Stop here if form is invalid\r\n    if (this.registerForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    let controls = this.registerForm.controls;\r\n    let userId = controls.user.value;\r\n    let userName = controls.name.value;\r\n    let userLastName = controls.lastName.value;\r\n    let userGroup = controls.userGroup.value;\r\n    let pwd = controls.password.value;\r\n\r\n    let res = await this.createNewUser(userId, userName, userLastName, userGroup, pwd);\r\n    \r\n    if(res.status == 200) {\r\n      alert('El usuario se ha creado con éxito!');\r\n      this.router.navigate(['management/home']);\r\n    } else if(res.status == 401) {\r\n      alert('Sus credenciales han expirado. Por favor inicie sesión de nuevo.');\r\n      localStorage.removeItem('cutie-plushie-token');\r\n      localStorage.removeItem('user-details');\r\n      this.router.navigate(['management/login']);\r\n    } else if(res.status == 403) {\r\n      alert(\"INTENTO DE INTRUSIÓN.\");\r\n    }\r\n  }\r\n\r\n  public createNewUser(userId: string, userName: string, userLastName: string, userGroup: string, password: string): Promise<HttpResponse<Object>> {\r\n    let token = localStorage.getItem('cutie-plushie-token');\r\n    let pwd = btoa(password);\r\n    const headers = new HttpHeaders()\r\n          .set(\"Authorization\", \"Bearer \" + token);\r\n\r\n    return this.http.post(\r\n      '/api/v1/management/users/' + userId, \r\n      {\r\n        'userName' : userName,\r\n        'userLastName' : userLastName,\r\n        'userGroup' : userGroup,\r\n        'pwd' : pwd\r\n      }, \r\n      {headers: headers, observe: 'response', responseType: 'json'}\r\n    ).toPromise().then(function(res) {\r\n      return res;\r\n    }).catch(function(err){ \r\n      return err;\r\n    });\r\n  }\r\n}\r\n","<div class=\"sales-component\">\r\n    <div class=\"table-container\">\r\n        <h1>\r\n            Ventas\r\n        </h1>\r\n\r\n        <mat-form-field>\r\n            <input class=\"filter-box\" matInput (keyup)=\"applyFilter($event)\" placeholder=\"Buscar...\"/>\r\n        </mat-form-field>\r\n        <button mat-button class=\"btn-export\" (click)=\"exporter.exportTable('csv', {fileName: 'Reporte_de_ventas'})\">\r\n            Exportar\r\n        </button>\r\n\r\n        <table mat-table matTableExporter [dataSource]=\"dataSource\" #exporter=\"matTableExporter\" class=\"mat-elevation-z8\" matSort>\r\n          \r\n            <ng-container matColumnDef=\"saleDate\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Fecha </th>\r\n              <td mat-cell *matCellDef=\"let sale\"> {{sale.saleDate.split('T')[0]}} </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"articleId\">\r\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Código de artículo </th>\r\n                <td mat-cell *matCellDef=\"let sale\"> {{sale.article.articleId}} </td>\r\n              </ng-container>\r\n\r\n            <ng-container matColumnDef=\"productId\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> ID de producto </th>\r\n            <td mat-cell *matCellDef=\"let sale\"> {{sale.article.product.productId}} </td>\r\n            </ng-container>\r\n          \r\n            <ng-container matColumnDef=\"productName\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Nombre del producto </th>\r\n              <td mat-cell *matCellDef=\"let sale\"> {{sale.article.product.productName}} </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"productUnitPriceMXN\">\r\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Precio </th>\r\n                <td mat-cell *matCellDef=\"let sale\"> {{sale.article.product.productPrice}} </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"saleAppliedDiscount\">\r\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Descuento </th>\r\n                <td mat-cell *matCellDef=\"let sale\"> {{sale.saleAppliedDiscount}} </td>\r\n            </ng-container>\r\n          \r\n            <ng-container matColumnDef=\"orderId\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Número de orden </th>\r\n              <td mat-cell *matCellDef=\"let sale\"> {{sale.order.orderId}} </td>\r\n            </ng-container>\r\n    \r\n            <ng-container matColumnDef=\"orderStatus\">\r\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Estatus de orden </th>\r\n                <td mat-cell *matCellDef=\"let sale\"> {{orderStatusDictionary[sale.order.orderStatus]}} </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"customerName\">\r\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Cliente </th>\r\n                <td mat-cell *matCellDef=\"let sale\"> {{sale.order.customer.customerName + ' ' + sale.order.customer.customerLastName}} </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"deliveryDate\">\r\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Fecha de envío </th>\r\n                <td mat-cell *matCellDef=\"let sale\"> {{sale.delivery.deliveryDate.split('T')[0]}} </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"expectedArrivalDate\">\r\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Fecha estimada de llegada </th>\r\n                <td mat-cell *matCellDef=\"let sale\"> {{sale.delivery.expectedArrivalDate.split('T')[0]}} </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"actualArrivalDate\">\r\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Fecha de llegada </th>\r\n                <td mat-cell *matCellDef=\"let sale\"> {{sale.delivery.actualArrivalDate?sale.delivery.actualArrivalDate.split('T')[0]:''}} </td>\r\n            </ng-container>\r\n          \r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n            \r\n        </table>\r\n        <mat-paginator [length]=\"dataSource.data.length\" [pageSizeOptions]=\"[10, 25, 50, 100]\"></mat-paginator>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { HttpClient, HttpResponse, HttpHeaders } from '@angular/common/http';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { Router } from '@angular/router';\r\n\r\nexport interface Sale {\r\n  saleId: string,\r\n  saleDate: string,\r\n  saleAppliedDiscount: string,\r\n  order: {\r\n    orderId: string,\r\n    orderStatus: string,\r\n    customer: {\r\n      customerId: string,\r\n      customerName: string,\r\n      customerLastName: string\r\n    }\r\n  },\r\n  article: {\r\n    articleId: string,\r\n    product: {\r\n      productId: string,\r\n      productName: string,\r\n      productPrice: number,\r\n      category: {\r\n          categoryId: string,\r\n          categoryName: string\r\n      }\r\n    }\r\n  },\r\n  delivery: {\r\n    deliveryId: string,\r\n    deliveryDate: string,\r\n    expectedArrivalDate: string,\r\n    actualArrivalDate: string\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'app-management-sales',\r\n  templateUrl: './management-sales.component.html',\r\n  styleUrls: ['./management-sales.component.css']\r\n})\r\nexport class ManagementSalesComponent implements OnInit {\r\n\r\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\r\n\r\n  sales: Sale[] = [ ];\r\n  dataSource: MatTableDataSource<Sale>;\r\n  displayedColumns: string[] = [\r\n    'saleDate',\r\n    'articleId',\r\n    'productId',\r\n    'productName',\r\n    'productUnitPriceMXN',\r\n    'saleAppliedDiscount',\r\n    'orderId',\r\n    'orderStatus',\r\n    'customerName',\r\n    'deliveryDate',\r\n    'expectedArrivalDate',\r\n    'actualArrivalDate',\r\n  ];\r\n\r\n  orderStatusDictionary = {\r\n    'REVIEW': 'En revisión',\r\n    'APPROVED': 'Aprobada',\r\n    'SHIPPED': 'Enviada',\r\n    'COMPLETED': 'Completada',\r\n    'CANCELLED': 'Cancelada'\r\n  }\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private router: Router\r\n  ) { \r\n    this.displaySales();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.dataSource = new MatTableDataSource(this.sales);\r\n    // Assign the paginator to our data source\r\n    this.dataSource.paginator = this.paginator;\r\n    // Assign the a sorter to our data source\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    // Apply a filter to the dataSource after user input\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filterPredicate = (data, filter: string)  => {\r\n      const accumulator = (currentTerm, key) => {\r\n        return this.nestedFilterCheck(currentTerm, data, key);\r\n      };\r\n      const dataStr = Object.keys(data).reduce(accumulator, '').toLowerCase();\r\n      // Transform the filter by converting it to lowercase and removing whitespace.\r\n      const transformedFilter = filter.trim().toLowerCase();\r\n      return dataStr.indexOf(transformedFilter) !== -1;\r\n    };\r\n\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    // Return to first page after applying a filter\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  nestedFilterCheck(search, data, key) {\r\n    if (typeof data[key] === 'object') {\r\n      for (const k in data[key]) {\r\n        if (data[key][k] !== null) {\r\n          search = this.nestedFilterCheck(search, data[key], k);\r\n        }\r\n      }\r\n    } else {\r\n      search += data[key] + ' ';\r\n    }\r\n    return search;\r\n  }\r\n\r\n  // Related to back-end sale management\r\n  async displaySales() {\r\n    let res = await this.getSales();\r\n    if(res.status == 200) {\r\n      let body = <Sale[]>res.body\r\n      for(let sale of body){\r\n        let saleJson: Sale = JSON.parse(JSON.stringify(sale));\r\n        this.sales.push(saleJson);\r\n      }\r\n      this.dataSource = new MatTableDataSource(this.sales);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort; \r\n    } else if(res.status == 401) {\r\n      alert('Sus credenciales han expirado. Por favor inicie sesión de nuevo.');\r\n      localStorage.removeItem('cutie-plushie-token');\r\n      localStorage.removeItem('user-details');\r\n      this.router.navigate(['management/login']);\r\n    } \r\n  }\r\n\r\n  getSales(): Promise<HttpResponse<Object>> {\r\n    let token = localStorage.getItem('cutie-plushie-token')\r\n    const headers = new HttpHeaders()\r\n          .set(\"Authorization\", \"Bearer \" + token);\r\n\r\n    return this.http.get(\r\n      '/api/v1/management/sales/?page=1&salesPerPage=1000000',\r\n      {headers: headers, observe: 'response', responseType: 'json'}\r\n    ).toPromise().then(function(res) {\r\n      return res;\r\n    }).catch(function(err){ \r\n      return err;\r\n    });\r\n  }\r\n\r\n  export() {\r\n\r\n  }\r\n}","<div class=\"suppliers-component\">\r\n    <div class=\"table-container\">\r\n        <h1>\r\n            Proveedores\r\n        </h1>\r\n\r\n        <mat-form-field>\r\n            <input class=\"filter-box\" matInput (keyup)=\"applyFilter($event)\" placeholder=\"Buscar...\"/>\r\n        </mat-form-field>\r\n        <button class=\"btn-create\" (click)=\"createSupplier()\">\r\n            Nuevo proveedor\r\n        </button>\r\n\r\n        <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\" matSort>\r\n\r\n            <ng-container matColumnDef=\"supplierId\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\r\n              <td mat-cell *matCellDef=\"let supplier\"> {{supplier.supplierId}} </td>\r\n            </ng-container>\r\n          \r\n            <ng-container matColumnDef=\"supplierName\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Nombre </th>\r\n              <td mat-cell *matCellDef=\"let supplier\"> {{supplier.supplierName}} </td>\r\n            </ng-container>\r\n          \r\n            <ng-container matColumnDef=\"supplierContactName\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Contacto </th>\r\n              <td mat-cell *matCellDef=\"let supplier\"> {{supplier.supplierContactName}} </td>\r\n            </ng-container>\r\n          \r\n            <ng-container matColumnDef=\"supplierPhoneNumber\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Teléfono </th>\r\n              <td mat-cell *matCellDef=\"let supplier\"> {{supplier.supplierPhoneNumber}} </td>\r\n            </ng-container>\r\n    \r\n            <ng-container matColumnDef=\"supplierMail\">\r\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Correo de contacto </th>\r\n                <td mat-cell *matCellDef=\"let supplier\"> {{supplier.supplierMail}} </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"actions\">\r\n                <th mat-header-cell *matHeaderCellDef > Acciones </th>\r\n                <td mat-cell *matCellDef=\"let supplier\"> \r\n                    <button class=\"btn-edit\" (click)=\"editSupplier(supplier)\">\r\n                        Editar\r\n                    </button>\r\n                    <button class=\"btn-delete\" (click)=\"deleteSupplier(supplier)\">\r\n                        Eliminar\r\n                    </button>\r\n                </td>\r\n            </ng-container>\r\n          \r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n            \r\n        </table>\r\n        <mat-paginator [length]=\"dataSource.data.length\" [pageSizeOptions]=\"[10, 25, 50, 100]\"></mat-paginator>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { HttpClient, HttpResponse, HttpHeaders } from '@angular/common/http';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { SupplierDialogFormComponent } from './supplier-dialog-form/supplier-dialog-form.component';\r\n\r\nexport interface Supplier {\r\n  supplierId: string,\r\n  supplierName: string,\r\n  supplierContactName: string,\r\n  supplierPhoneNumber: string,\r\n  supplierMail: string,\r\n  active: boolean\r\n}\r\n\r\n@Component({\r\n  selector: 'app-management-suppliers',\r\n  templateUrl: './management-suppliers.component.html',\r\n  styleUrls: ['./management-suppliers.component.css']\r\n})\r\nexport class ManagementSuppliersComponent implements OnInit {\r\n\r\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\r\n\r\n  displayedColumns: string[] = [\r\n    'supplierId',\r\n    'supplierName',\r\n    'supplierContactName',\r\n    'supplierPhoneNumber',\r\n    'supplierMail',\r\n    'actions'\r\n  ];\r\n  suppliers: Supplier[] = [ ];\r\n  isAdmin = this.userIsAdmin();\r\n  dataSource: MatTableDataSource<Supplier>;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private router: Router,\r\n    private dialog: MatDialog\r\n  ) { \r\n    if(!this.userIsAdmin){\r\n      alert(\"Usted no cuenta con permisos para ver esta página\");\r\n      this.router.navigate(['management/home']);\r\n    }\r\n    this.displaySuppliers();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.dataSource = new MatTableDataSource(this.suppliers);\r\n    // Assign the paginator to our data source\r\n    this.dataSource.paginator = this.paginator;\r\n    // Assign the a sorter to our data source\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    // Apply a filter to the dataSource after user input\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    // Return to first page after applying a filter\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  userIsAdmin(): boolean{\r\n    let details = localStorage.getItem('user-details');\r\n    if(details != null){\r\n      let user = JSON.parse(details);\r\n      if(user.userGroup == \"ADMIN\"){\r\n        return true;\r\n      }\r\n      return false\r\n    }\r\n    return false;\r\n  }\r\n\r\n\r\n\r\n  // Related to back-end supplier management\r\n\r\n  async displaySuppliers() {\r\n    let res = await this.getSuppliers();\r\n    if(res.status == 200) {\r\n      let body = <Supplier[]>res.body\r\n      for(let supplier of body){\r\n        console.log(supplier);\r\n        let supplierJson: Supplier = JSON.parse(JSON.stringify(supplier));\r\n        console.log(supplierJson);\r\n        this.suppliers.push(supplierJson);\r\n      }\r\n      this.dataSource = new MatTableDataSource(this.suppliers);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort; \r\n    } else if(res.status == 401) {\r\n      alert('Sus credenciales han expirado. Por favor inicie sesión de nuevo.');\r\n      localStorage.removeItem('cutie-plushie-token');\r\n      localStorage.removeItem('user-details');\r\n      this.router.navigate(['management/login']);\r\n    } \r\n  }\r\n\r\n  public getSuppliers(): Promise<HttpResponse<Object>> {\r\n    let token = localStorage.getItem('cutie-plushie-token')\r\n    const headers = new HttpHeaders()\r\n          .set(\"Authorization\", \"Bearer \" + token);\r\n\r\n    return this.http.get(\r\n      '/api/v1/management/suppliers/',\r\n      {headers: headers, observe: 'response', responseType: 'json'}\r\n    ).toPromise().then(function(res) {\r\n      return res;\r\n    }).catch(function(err){ \r\n      return err;\r\n    });\r\n  }\r\n\r\n  createSupplier() {\r\n    const dialogRef = this.dialog.open(SupplierDialogFormComponent, {\r\n      width: '800px',\r\n      height: '480px',\r\n      data: null\r\n    });\r\n    \r\n    dialogRef.afterClosed().subscribe(function(result){\r\n      if(result.status == 'DONE'){\r\n        window.location.reload();\r\n      }\r\n    });\r\n  }\r\n\r\n  async deleteSupplier(supplier: Supplier) {\r\n    let confirmation = confirm(\"Está seguro de que desea eliminar al proveedor? Esta operación no se puede deshacer.\");\r\n    if(!confirmation){\r\n      return;\r\n    }\r\n\r\n    let res = await this.supplierDelete(supplier);\r\n    if(res.status == 200) {\r\n      alert('El proveedor se ha eliminado con éxito!');\r\n      window.location.reload();\r\n    } else if(res.status == 401) {\r\n      alert('Sus credenciales han expirado. Por favor inicie sesión de nuevo.');\r\n      localStorage.removeItem('cutie-plushie-token');\r\n      localStorage.removeItem('user-details');\r\n      this.router.navigate(['management/login']);\r\n    } else if(res.status == 403) {\r\n      alert(\"INTENTO DE INTRUSIÓN.\");\r\n    }\r\n  }\r\n\r\n  supplierDelete(supplier: Supplier): Promise<HttpResponse<Object>> { \r\n    let token = localStorage.getItem('cutie-plushie-token');\r\n\r\n    const headers = new HttpHeaders()\r\n          .set(\"Authorization\", \"Bearer \" + token);\r\n\r\n    return this.http.put(\r\n      '/api/v1/management/suppliers/' + supplier.supplierId, \r\n      {\r\n        'supplierName' : supplier.supplierName, \r\n        'supplierContactName' : supplier.supplierContactName,\r\n        'supplierPhoneNumber' : supplier.supplierPhoneNumber,\r\n        'supplierMail': supplier.supplierMail,\r\n        'active' : 'false'\r\n      }, \r\n      {headers: headers, observe: 'response', responseType: 'json'}\r\n    ).toPromise().then(function(res) {\r\n      return res;\r\n    }).catch(function(err){ \r\n      return err;\r\n    });\r\n  }\r\n\r\n  editSupplier(supplier: Supplier) {\r\n    const dialogRef = this.dialog.open(SupplierDialogFormComponent, {\r\n      width: '800px',\r\n      height: '480px',\r\n      data: supplier\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(function(result){\r\n      if(result.status == 'DONE'){\r\n        window.location.reload();\r\n      }\r\n    });\r\n  }\r\n\r\n}","<div class=\"form\">\r\n    <h1 mat-dialog-title *ngIf=\"formType == 'Create'\">Agregar proveedor</h1>\r\n    <h1 mat-dialog-title *ngIf=\"formType == 'Update'\">Actualizar proveedor</h1>\r\n    <form [formGroup]=\"supplierForm\">\r\n        <div class=\"form-group\">\r\n            <label for=\"supplierName\">Nombre del proveedor*</label>\r\n            <input type=\"text\" formControlName=\"supplierName\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted &&  supplierForm.controls.supplierName.invalid }\" />\r\n            <div *ngIf=\"submitted &&  supplierForm.controls.supplierName.invalid\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"submitted && supplierForm.controls.supplierName.errors.required\">Por favor ingrese el nombre</div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"supplierContactName\">Nombre del contacto*</label>\r\n            <input type=\"text\" formControlName=\"supplierContactName\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted &&  supplierForm.controls.supplierContactName.invalid }\" />\r\n            <div *ngIf=\"submitted &&  supplierForm.controls.supplierContactName.invalid\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"submitted && supplierForm.controls.supplierContactName.errors.required\">Por favor ingrese el nombre del contacto</div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"supplierPhoneNumber\">Teléfono*</label>\r\n            <input type=\"text\" formControlName=\"supplierPhoneNumber\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted &&  supplierForm.controls.supplierPhoneNumber.invalid }\" />\r\n            <div *ngIf=\"submitted &&  supplierForm.controls.supplierPhoneNumber.invalid\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"submitted && supplierForm.controls.supplierPhoneNumber.errors.required\">Por favor introduzca el teléfono</div>\r\n                <div *ngIf=\"submitted && supplierForm.controls.supplierPhoneNumber.errors.minLength\">Número telefónico inválido, debe ser de 10 dígitos</div>\r\n                <div *ngIf=\"submitted && supplierForm.controls.supplierPhoneNumber.errors.maxLength\">Número telefónico inválido, debe ser de 10 dígitos</div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"supplierMail\">Correo electrónico*</label>\r\n            <input type=\"text\" formControlName=\"supplierMail\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted &&  supplierForm.controls.supplierMail.invalid }\" />\r\n            <div *ngIf=\"submitted &&  supplierForm.controls.supplierMail.invalid\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"submitted && supplierForm.controls.supplierMail.errors.required\">Por favor introduzca un correo electrónico</div>\r\n                <div *ngIf=\"submitted && supplierForm.controls.supplierMail.errors.email\">Por favor introduzca una dirección válida</div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-buttons\">\r\n            <button (click)=\"createSupplier()\" class=\"btn-create\" *ngIf=\"formType == 'Create'\">Agregar</button>\r\n            <button (click)=\"updateSupplier()\" class=\"btn-update\" *ngIf=\"formType == 'Update'\">Actualizar</button>\r\n            <button (click)=\"closeDialog()\" class=\"btn-cancel\">Cancelar</button>\r\n          </div>\r\n    </form>\r\n    \r\n</div>\r\n\r\n","import { Component, OnInit, Inject, Optional } from '@angular/core';\r\nimport { MAT_DIALOG_DATA,MatDialogRef } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router'\r\nimport { HttpClient, HttpResponse, HttpHeaders } from '@angular/common/http';\r\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\r\n\r\nexport interface Supplier {\r\n  supplierId: string,\r\n  supplierName: string,\r\n  supplierContactName: string,\r\n  supplierPhoneNumber: string,\r\n  supplierMail: string\r\n  active: boolean\r\n}\r\n\r\n@Component({\r\n  selector: 'app-supplier-dialog-form',\r\n  templateUrl: './supplier-dialog-form.component.html',\r\n  styleUrls: ['./supplier-dialog-form.component.css']\r\n})\r\nexport class SupplierDialogFormComponent implements OnInit {\r\n\r\n  supplier: Supplier;\r\n  submitted: boolean = false;\r\n  supplierForm: FormGroup;\r\n  formType: string;\r\n \r\n  constructor(\r\n    @Optional() @Inject(MAT_DIALOG_DATA) private data: Supplier,\r\n    private dialogRef: MatDialogRef<SupplierDialogFormComponent>,\r\n    private http: HttpClient,\r\n    private router: Router,\r\n    private formBuilder: FormBuilder\r\n  ) {\r\n    let userGroup = JSON.parse(localStorage.getItem('user-details')).userGroup;\r\n    if(userGroup != \"ADMIN\"){\r\n      alert('Acceso denegado. Usted no cuenta con permisos suficientes para efectuar la operación solicitada.');\r\n      this.router.navigate(['management/suppliers']);\r\n    }\r\n    this.supplierForm = this.formBuilder.group({\r\n      supplierName: new FormControl('', [\r\n        Validators.required\r\n      ]),\r\n      supplierContactName: new FormControl('', [\r\n        Validators.required\r\n      ]),\r\n      supplierPhoneNumber: new FormControl('', [\r\n        Validators.required,\r\n        Validators.minLength(10),\r\n        Validators.maxLength(10)\r\n      ]),\r\n      supplierMail: new FormControl('', [\r\n        Validators.required,\r\n        Validators.email\r\n      ])\r\n    });\r\n\r\n    this.supplier = data;\r\n    if(this.supplier == null){\r\n      this.formType = \"Create\";\r\n    } else {\r\n      this.formType = \"Update\";\r\n      let controls = this.supplierForm.controls;\r\n      controls.supplierName.setValue(this.supplier.supplierName);\r\n      controls.supplierContactName.setValue(this.supplier.supplierContactName);\r\n      controls.supplierPhoneNumber.setValue(this.supplier.supplierPhoneNumber);\r\n      controls.supplierMail.setValue(this.supplier.supplierMail);\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    \r\n  }\r\n \r\n  async createSupplier(){\r\n    this.submitted = true;\r\n\r\n    if (this.supplierForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    let controls = this.supplierForm.controls;\r\n    this.supplier = {\r\n      supplierId: '',\r\n      supplierName: controls.supplierName.value,\r\n      supplierContactName: controls.supplierContactName.value,\r\n      supplierPhoneNumber: controls.supplierPhoneNumber.value,\r\n      supplierMail: controls.supplierMail.value,\r\n      active: true,\r\n    };\r\n\r\n    let res = await this.postSupplier(this.supplier);\r\n    \r\n    if(res.status == 200) {\r\n      alert('El proveedor se ha creado con éxito!');\r\n      this.dialogRef.close({ status: 'DONE' });\r\n    } else if(res.status == 401) {\r\n      alert('Sus credenciales han expirado. Por favor inicie sesión de nuevo.');\r\n      localStorage.removeItem('cutie-plushie-token');\r\n      localStorage.removeItem('user-details');\r\n      window.location.reload();\r\n    }\r\n  }\r\n\r\n  postSupplier(supplier: Supplier): Promise<HttpResponse<Object>>{\r\n    let token = localStorage.getItem('cutie-plushie-token');\r\n    const headers = new HttpHeaders()\r\n          .set(\"Authorization\", \"Bearer \" + token);\r\n\r\n    return this.http.post(\r\n      '/api/v1/management/suppliers/', \r\n      {\r\n        'supplierName' : supplier.supplierName,\r\n        'supplierContactName' : supplier.supplierContactName,\r\n        'supplierPhoneNumber' : supplier.supplierPhoneNumber,\r\n        'supplierMail' : supplier.supplierMail\r\n      }, \r\n      {headers: headers, observe: 'response', responseType: 'json'}\r\n    ).toPromise().then(function(res) {\r\n      return res;\r\n    }).catch(function(err){ \r\n      return err;\r\n    });\r\n  }\r\n\r\n  async updateSupplier(){\r\n    this.submitted = true;\r\n    if (this.supplierForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    let controls = this.supplierForm.controls;\r\n    this.supplier = {\r\n      supplierId: this.supplier.supplierId,\r\n      supplierName: controls.supplierName.value,\r\n      supplierContactName: controls.supplierContactName.value,\r\n      supplierPhoneNumber: controls.supplierPhoneNumber.value,\r\n      supplierMail: controls.supplierMail.value,\r\n      active: true\r\n    };\r\n\r\n    let res = await this.putSupplier(this.supplier);\r\n    \r\n    if(res.status == 200) {\r\n      alert('El proveedor se ha actualizado con éxito!');\r\n      this.dialogRef.close({ status: 'DONE' });\r\n    } else if(res.status == 401) {\r\n      alert('Sus credenciales han expirado. Por favor inicie sesión de nuevo.');\r\n      localStorage.removeItem('cutie-plushie-token');\r\n      localStorage.removeItem('user-details');\r\n      this.router.navigate(['management/login']);\r\n    }\r\n  }\r\n\r\n  putSupplier(supplier: Supplier): Promise<HttpResponse<Object>>{\r\n    let token = localStorage.getItem('cutie-plushie-token');\r\n    const headers = new HttpHeaders()\r\n          .set(\"Authorization\", \"Bearer \" + token);\r\n\r\n    return this.http.put(\r\n      '/api/v1/management/suppliers/'+ supplier.supplierId, \r\n      {\r\n        'supplierName' : supplier.supplierName, \r\n        'supplierContactName' : supplier.supplierContactName,\r\n        'supplierPhoneNumber' : supplier.supplierPhoneNumber,\r\n        'supplierMail': supplier.supplierMail,\r\n        'active' : supplier.active\r\n      }, \r\n      {headers: headers, observe: 'response', responseType: 'json'}\r\n    ).toPromise().then(function(res) {\r\n      return res;\r\n    }).catch(function(err){ \r\n      return err;\r\n    });\r\n  }\r\n \r\n  closeDialog(){\r\n    this.dialogRef.close({ status: 'CANCEL' });\r\n  }\r\n}\r\n","<div class=\"toolbar\" role=\"banner\">\r\n    <img\r\n        height=\"60px\"\r\n        alt=\"Logo\"\r\n        src=\"assets/images/cutie_plushie_logo_header.png\"\r\n        (click)=\"goHome()\"\r\n    />\r\n    \r\n    <div *ngIf=\"userIsLoggedIn()\" class=\"toolbar-options sales\" (click)=\"goTo($event)\">\r\n        <div class=\"sales\">\r\n            Ventas\r\n        </div>    \r\n    </div>\r\n\r\n    <div *ngIf=\"userIsLoggedIn()\" class=\"toolbar-options products\" (click)=\"goTo($event)\">\r\n        <div class=\"products\">\r\n            Productos\r\n        </div>    \r\n    </div>\r\n    \r\n    <div *ngIf=\"userIsLoggedIn() && userIsAdmin()\" class=\"toolbar-options suppliers\" (click)=\"goTo($event)\">\r\n        <div class=\"suppliers\">\r\n            Proveedores\r\n        </div>\r\n    </div>\r\n    \r\n    <div *ngIf=\"userIsLoggedIn() && userIsAdmin()\" class=\"toolbar-options distributors\" (click)=\"goTo($event)\">\r\n        <div class=\"distributors\">\r\n            Distribuidores\r\n        </div>\r\n    </div>\r\n    \r\n    <div *ngIf=\"userIsLoggedIn() && userIsAdmin()\" class=\"toolbar-options register\" (click)=\"goTo($event)\">\r\n        <div class=\"register\">\r\n            Registro de usuario\r\n        </div>\r\n    </div>\r\n\r\n    <div *ngIf=\"userIsLoggedIn()\" class=\"toolbar-options passwordchange\" (click)=\"goTo($event)\">\r\n        <div class=\"passwordchange\">\r\n            Cambiar contraseña\r\n        </div>\r\n    </div>\r\n\r\n    <div *ngIf=\"userIsLoggedIn()\" class=\"toolbar-options logout\" (click)=\"logout()\">\r\n        <div class=\"logout\">\r\n            Cerrar sesión\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<router-outlet></router-outlet>\r\n\r\n<div class=\"footer\">\r\n    Cutie Plushie Management System - 2020 ©\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-management',\r\n  templateUrl: './management.component.html',\r\n  styleUrls: ['./management.component.css']\r\n})\r\nexport class ManagementComponent implements OnInit {\r\n\r\n  constructor(\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    \r\n  }\r\n\r\n  goHome() {\r\n    this.router.navigate(['management']);\r\n  }\r\n\r\n  goTo(event: any) {\r\n    let target = event.target.className;\r\n    target = target.replace('toolbar-options ','');\r\n    target = target.replace(' ng-star-inserted','');\r\n    this.router.navigate(['management/' + target]);\r\n  }\r\n\r\n  logout(){\r\n    localStorage.removeItem('cutie-plushie-token');\r\n    localStorage.removeItem('user-details');\r\n    this.router.navigate(['management/login']);\r\n  }\r\n\r\n  userIsLoggedIn(): boolean{\r\n    return localStorage.getItem('cutie-plushie-token') != null;\r\n  }\r\n\r\n  userIsAdmin(): boolean{\r\n    let details = localStorage.getItem('user-details');\r\n    if(details != null){\r\n      let user = JSON.parse(details);\r\n      if(user.userGroup == \"ADMIN\"){\r\n        return true;\r\n      }\r\n      return false\r\n    }\r\n    return false;\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","/* (ignored) */","/* (ignored) */","/* (ignored) */"]}