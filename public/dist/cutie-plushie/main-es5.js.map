{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/management/auth-guard.service.ts","webpack:///src/app/management/auth.service.ts","webpack:///src/app/management/management-distributors/management-distributors.component.ts","webpack:///src/app/management/management-distributors/management-distributors.component.html","webpack:///src/app/management/management-home/management-home.component.ts","webpack:///src/app/management/management-home/management-home.component.html","webpack:///src/app/management/management-login/management-login.component.html","webpack:///src/app/management/management-login/management-login.component.ts","webpack:///src/app/management/management-passwordchange/management-passwordchange.component.html","webpack:///src/app/management/management-passwordchange/management-passwordchange.component.ts","webpack:///src/app/management/management-products/management-products.component.ts","webpack:///src/app/management/management-products/management-products.component.html","webpack:///src/app/management/management-register/management-register.component.ts","webpack:///src/app/management/management-register/management-register.component.html","webpack:///src/app/management/management-sales/management-sales.component.ts","webpack:///src/app/management/management-sales/management-sales.component.html","webpack:///src/app/management/management-suppliers/management-suppliers.component.ts","webpack:///src/app/management/management-suppliers/management-suppliers.component.html","webpack:///src/app/management/management.component.ts","webpack:///src/app/management/management.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","children","redirectTo","pathMatch","canActivate","AppRoutingModule","forRoot","useHash","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","AuthGuardService","authService","router","isAuthenticated","navigate","providedIn","AuthService","token","localStorage","getItem","ManagementDistributorsComponent","ManagementHomeComponent","ManagementLoginComponent","http","formBuilder","submitted","loginForm","group","user","required","minLength","maxLength","password","invalid","validate","controls","value","res","status","body","bodyJson","JSON","parse","stringify","userKey","userName","userLastName","userGroup","setItem","alert","key","btoa","post","observe","responseType","toPromise","catch","err","onSubmit","ManagementPasswordchangeComponent","passwordChangeForm","oldPassword","newPassword","confirmPassword","pattern","removeControl","addControl","changePassword","removeItem","pwdOld","pwdNew","headers","set","put","ManagementProductsComponent","ManagementRegisterComponent","ManagementSalesComponent","ManagementSuppliersComponent","ManagementComponent","event","target","className","replace","details","goHome","environment","production","bootstrapModule","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { AuthGuardService } from './management/auth-guard.service';\r\n\r\nimport { ManagementComponent } from './management/management.component';\r\nimport { ManagementLoginComponent } from './management/management-login/management-login.component';\r\nimport { ManagementHomeComponent } from './management/management-home/management-home.component';\r\nimport { ManagementRegisterComponent } from './management/management-register/management-register.component';\r\nimport { ManagementSuppliersComponent } from './management/management-suppliers/management-suppliers.component';\r\nimport { ManagementDistributorsComponent } from './management/management-distributors/management-distributors.component';\r\nimport { ManagementSalesComponent } from './management/management-sales/management-sales.component';\r\nimport { ManagementProductsComponent } from './management/management-products/management-products.component';\r\nimport { ManagementPasswordchangeComponent } from './management/management-passwordchange/management-passwordchange.component';\r\n\r\nconst routes: Routes = [\r\n  { \r\n    path: 'management', \r\n    component: ManagementComponent ,\r\n    children: [\r\n      { path: '',   redirectTo: 'login', pathMatch: 'full' },\r\n      { path: 'login', component: ManagementLoginComponent},\r\n      { path: 'home', component: ManagementHomeComponent, canActivate : [AuthGuardService] },\r\n      { path: 'register', component: ManagementRegisterComponent, canActivate : [AuthGuardService] },\r\n      { path: 'suppliers', component: ManagementSuppliersComponent, canActivate : [AuthGuardService] },\r\n      { path: 'distributors', component: ManagementDistributorsComponent, canActivate : [AuthGuardService] },\r\n      { path: 'sales', component: ManagementSalesComponent, canActivate : [AuthGuardService] },\r\n      { path: 'products', component: ManagementProductsComponent, canActivate : [AuthGuardService] },\r\n      { path: 'passwordchange', component: ManagementPasswordchangeComponent, canActivate : [AuthGuardService] }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, {useHash: true})],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'cutie-plushie';\r\n}\r\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule }   from '@angular/forms';\r\nimport { HttpClientModule} from '@angular/common/http';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { ManagementComponent } from './management/management.component';\r\nimport { ManagementHomeComponent } from './management/management-home/management-home.component';\r\nimport { ManagementRegisterComponent } from './management/management-register/management-register.component';\r\nimport { ManagementSuppliersComponent } from './management/management-suppliers/management-suppliers.component';\r\nimport { ManagementDistributorsComponent } from './management/management-distributors/management-distributors.component';\r\nimport { ManagementSalesComponent } from './management/management-sales/management-sales.component';\r\nimport { ManagementProductsComponent } from './management/management-products/management-products.component';\r\nimport { ManagementLoginComponent } from './management/management-login/management-login.component';\r\nimport { ManagementPasswordchangeComponent } from './management/management-passwordchange/management-passwordchange.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ManagementComponent,\r\n    ManagementLoginComponent,\r\n    ManagementHomeComponent,\r\n    ManagementRegisterComponent,\r\n    ManagementSuppliersComponent,\r\n    ManagementDistributorsComponent,\r\n    ManagementSalesComponent,\r\n    ManagementProductsComponent,\r\n    ManagementPasswordchangeComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [\r\n    HttpClientModule,\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate,Router } from '@angular/router';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuardService implements CanActivate {\r\n\r\n  constructor(private authService : AuthService, private router : Router) { }\r\n\r\n  canActivate(){\r\n    if(this.authService.isAuthenticated()){\r\n      return true;\r\n    }\r\n    this.router.navigate(['management/login']);\r\n    return false;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  constructor() { }\r\n\r\n    public isAuthenticated() : Boolean {\r\n      let token = localStorage.getItem('cutie-plushie-token')\r\n      if(token != null && token != ''){\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-management-distributors',\r\n  templateUrl: './management-distributors.component.html',\r\n  styleUrls: ['./management-distributors.component.css']\r\n})\r\nexport class ManagementDistributorsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>management-distributors works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-management-home',\r\n  templateUrl: './management-home.component.html',\r\n  styleUrls: ['./management-home.component.css']\r\n})\r\nexport class ManagementHomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>management-home works!</p>\r\n","<div class=\"login-component\">\r\n    <div class=\"form-container\">\r\n        <img\r\n        height=\"120px\"\r\n        alt=\"Logo\"\r\n        src=\"assets/images/cutie_plushie_logo.png\"\r\n        />\r\n        <h2>Bienvenido a Cutie Plushie!</h2>\r\n        <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\r\n            <div class=\"form-group\">\r\n                <label for=\"user\">Clave de usuario</label>\r\n                <input type=\"text\" formControlName=\"user\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && loginForm.controls.user.invalid }\"/>\r\n                <div *ngIf=\"submitted && loginForm.controls.user.invalid\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"submitted && loginForm.controls.user.errors.required\">Por favor ingrese una clave de usuario</div>\r\n                    <div *ngIf=\"submitted && loginForm.controls.user.errors.maxlength\">Su clave de usuario debe tener 9 caracteres alfanuméricos</div>\r\n                    <div *ngIf=\"submitted && loginForm.controls.user.errors.minlength\">Su clave de usuario debe tener 9 caracteres alfanuméricos</div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"password\">Contraseña</label>\r\n                <input type=\"password\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && loginForm.controls.password.invalid }\" />\r\n                <div *ngIf=\"submitted && loginForm.controls.password.invalid\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"submitted && loginForm.controls.password.errors.required\">Por favor ingrese su contraseña</div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <button class=\"btn-login\">\r\n                    Iniciar sesión\r\n                </button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient, HttpResponse, HttpErrorResponse } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-management-login',\r\n  templateUrl: './management-login.component.html',\r\n  styleUrls: ['./management-login.component.css']\r\n})\r\nexport class ManagementLoginComponent implements OnInit {\r\n  loginForm: FormGroup;\r\n  submitted = false;\r\n\r\n  constructor(\r\n    private http: HttpClient, \r\n    private router: Router,\r\n    private formBuilder: FormBuilder\r\n    ) { \r\n      let token = localStorage.getItem('cutie-plushie-token')\r\n      if(token != null){\r\n        this.router.navigate(['management/home']);\r\n      }\r\n\r\n      this.loginForm = this.formBuilder.group({\r\n        user: new FormControl('', [\r\n          Validators.required,\r\n          Validators.minLength(9),\r\n          Validators.maxLength(9)\r\n        ]),\r\n        password: new FormControl('', [\r\n          Validators.required\r\n        ])\r\n      });\r\n    }\r\n\r\n  ngOnInit(): void {\r\n      \r\n  }\r\n\r\n  async onSubmit() {\r\n    this.submitted = true;\r\n    // Stop here if form is invalid\r\n    if (this.loginForm.invalid) {\r\n      //alert(\"Por favor introduzca su usuario y contraseña para poder ingresar.\");}\r\n      \r\n      return;\r\n    }\r\n\r\n    let res = await this.validate(this.loginForm.controls.user.value, this.loginForm.controls.password.value);\r\n    \r\n    if(res.status == 200){\r\n      let body = res.body;\r\n      let bodyJson = JSON.parse(JSON.stringify(body));\r\n      let user = {\r\n        userKey: bodyJson.userKey,\r\n        userName: bodyJson.userName,\r\n        userLastName: bodyJson.userLastName,\r\n        userGroup: bodyJson.userGroup\r\n      }\r\n      let token = bodyJson.token\r\n      localStorage.setItem('cutie-plushie-token',token);\r\n      localStorage.setItem('user-details',JSON.stringify(user));\r\n      this.router.navigate(['management/home']);\r\n    } else if(res.status == 401){\r\n      alert(\"Usuario y/o contraseña incorrectos.\");\r\n    }\r\n  }\r\n\r\n  public validate(key: string, password: string): Promise<HttpResponse<Object>> {\r\n    password = btoa(password);\r\n    return this.http.post(\r\n      '/api/v1/management/login', \r\n      {'key' : key, 'pwd' : password}, \r\n      {observe: 'response', responseType: 'json'}\r\n    ).toPromise().then(function(res) {\r\n      return res;\r\n    }).catch(function(err){ \r\n      return err;\r\n    });\r\n  }\r\n}\r\n","<div class=\"passwordchange-component\">\r\n    <div class=\"form-container\">\r\n        <h1>\r\n            Cambiar contraseña\r\n        </h1>\r\n        <form [formGroup]=\"passwordChangeForm\" (ngSubmit)=\"onSubmit()\">\r\n            <div class=\"form-group\">\r\n                <label for=\"oldPassword\">Contraseña anterior</label>\r\n                <input type=\"password\" formControlName=\"oldPassword\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted &&  passwordChangeForm.controls.oldPassword.invalid }\" />\r\n                <div *ngIf=\"submitted &&  passwordChangeForm.controls.oldPassword.invalid\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"submitted &&  passwordChangeForm.controls.oldPassword.errors.required\">\r\n                        Por favor ingrese su contraseña anterior\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"newPassword\">Contraseña nueva</label>\r\n                <input type=\"password\" formControlName=\"newPassword\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted &&  passwordChangeForm.controls.newPassword.invalid }\" />\r\n                <div *ngIf=\"submitted &&  passwordChangeForm.controls.newPassword.invalid\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"submitted &&  passwordChangeForm.controls.newPassword.errors.required\">\r\n                        Por favor ingrese su nueva contraseña\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"confirmPassword\">Confirmar contraseña nueva</label>\r\n                <input type=\"password\" formControlName=\"confirmPassword\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted &&  passwordChangeForm.controls.confirmPassword.invalid }\" />\r\n                <div *ngIf=\"submitted &&  passwordChangeForm.controls.confirmPassword.invalid\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"submitted &&  passwordChangeForm.controls.confirmPassword.errors.required\">\r\n                        Por favor confirme su nueva contraseña\r\n                    </div>\r\n                    <div *ngIf=\"submitted &&  passwordChangeForm.controls.confirmPassword.errors.pattern\">\r\n                        La contraseña no coincide con su nueva contraseña\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <button class=\"btn-passwordchange\">\r\n                    Cambiar mi contraseña\r\n                </button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient, HttpResponse, HttpHeaders } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-management-passwordchange',\r\n  templateUrl: './management-passwordchange.component.html',\r\n  styleUrls: ['./management-passwordchange.component.css']\r\n})\r\nexport class ManagementPasswordchangeComponent implements OnInit {\r\n  passwordChangeForm: FormGroup;\r\n  submitted = false;\r\n\r\n  constructor(\r\n    private http: HttpClient, \r\n    private router: Router,\r\n    private formBuilder: FormBuilder\r\n    ) {\r\n      this.passwordChangeForm = this.formBuilder.group({\r\n        oldPassword: new FormControl('', [\r\n          Validators.required\r\n        ]),\r\n        newPassword: new FormControl('', [\r\n          Validators.required\r\n        ]),\r\n        confirmPassword: new FormControl('', [\r\n          Validators.required,\r\n          Validators.pattern(\"^$\")\r\n        ])\r\n      });\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n    }\r\n\r\n    async onSubmit() {\r\n      this.submitted = true;\r\n      let value = this.passwordChangeForm.controls.confirmPassword.value;\r\n\r\n      this.passwordChangeForm.removeControl(\"confirmPassword\");\r\n      this.passwordChangeForm.addControl(\"confirmPassword\",\r\n        new FormControl(value, [\r\n          Validators.required,\r\n          Validators.pattern(\"^\"+this.passwordChangeForm.controls.newPassword.value+\"$\")\r\n        ])\r\n      )\r\n      // Stop here if form is invalid\r\n      if (this.passwordChangeForm.invalid) {\r\n        return;\r\n      }\r\n  \r\n      let res = await this.changePassword(this.passwordChangeForm.controls.oldPassword.value, this.passwordChangeForm.controls.newPassword.value);\r\n      \r\n      if(res.status == 200) {\r\n        let body = res.body;\r\n        let bodyJson = JSON.parse(JSON.stringify(body));\r\n        let token = bodyJson.token\r\n        localStorage.setItem('cutie-plushie-token',token);\r\n        alert('Su contraseña se ha cambiado con éxito!');\r\n      } else if(res.status == 401) {\r\n        alert('Sus credenciales han expirado. Por favor inicie sesión de nuevo.');\r\n        localStorage.removeItem('cutie-plushie-token');\r\n        localStorage.getItem('user-details');\r\n        this.router.navigate(['management/login']);\r\n      } else if(res.status == 403) {\r\n        alert(\"Su contraseña anterior no coincide con los registros. Por favor intente de nuevo.\");\r\n        this.router.navigate(['management/home']);\r\n      }\r\n    }\r\n  \r\n    public changePassword(pwdOld: string, pwdNew: string): Promise<HttpResponse<Object>> {\r\n      let user = JSON.parse(localStorage.getItem('user-details')).userKey;\r\n      let token = localStorage.getItem('cutie-plushie-token');\r\n\r\n      pwdOld = btoa(pwdOld);\r\n      pwdNew = btoa(pwdNew)\r\n\r\n      const headers = new HttpHeaders()\r\n            .set(\"Authorization\", \"Bearer \" + token);\r\n\r\n      return this.http.put(\r\n        '/api/v1/management/users/' + user, \r\n        {'pwdOld' : pwdOld, 'pwdNew' : pwdNew}, \r\n        {headers: headers, observe: 'response', responseType: 'json'}\r\n      ).toPromise().then(function(res) {\r\n        return res;\r\n      }).catch(function(err){ \r\n        return err;\r\n      });\r\n    }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-management-products',\r\n  templateUrl: './management-products.component.html',\r\n  styleUrls: ['./management-products.component.css']\r\n})\r\nexport class ManagementProductsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>management-products works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-management-register',\r\n  templateUrl: './management-register.component.html',\r\n  styleUrls: ['./management-register.component.css']\r\n})\r\nexport class ManagementRegisterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>management-register works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-management-sales',\r\n  templateUrl: './management-sales.component.html',\r\n  styleUrls: ['./management-sales.component.css']\r\n})\r\nexport class ManagementSalesComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>management-sales works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-management-suppliers',\r\n  templateUrl: './management-suppliers.component.html',\r\n  styleUrls: ['./management-suppliers.component.css']\r\n})\r\nexport class ManagementSuppliersComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>management-suppliers works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-management',\r\n  templateUrl: './management.component.html',\r\n  styleUrls: ['./management.component.css']\r\n})\r\nexport class ManagementComponent implements OnInit {\r\n\r\n  constructor(\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    \r\n  }\r\n\r\n  goHome() {\r\n    this.router.navigate(['management']);\r\n  }\r\n\r\n  goTo(event: any) {\r\n    let target = event.target.className;\r\n    target = target.replace('toolbar-options ','');\r\n    this.router.navigate(['management/' + target]);\r\n  }\r\n\r\n  logout(){\r\n    localStorage.removeItem('cutie-plushie-token');\r\n    localStorage.removeItem('user-details');\r\n    this.router.navigate(['management/login']);\r\n  }\r\n\r\n  userIsLoggedIn(): boolean{\r\n    return localStorage.getItem('cutie-plushie-token') != null;\r\n  }\r\n\r\n  userIsAdmin(): boolean{\r\n    let details = localStorage.getItem('user-details');\r\n    if(details != null){\r\n      let user = JSON.parse(details);\r\n      if(user.userGroup == \"ADMIN\"){\r\n        return true;\r\n      }\r\n      return false\r\n    }\r\n    return false;\r\n  }\r\n}\r\n","<div class=\"toolbar\" role=\"banner\">\r\n    <img\r\n        height=\"60px\"\r\n        alt=\"Logo\"\r\n        src=\"assets/images/cutie_plushie_logo_header.png\"\r\n        (click)=\"goHome()\"\r\n    />\r\n    \r\n    <div *ngIf=\"userIsLoggedIn()\" class=\"toolbar-options sales\" (click)=\"goTo($event)\">\r\n        <div class=\"sales\">\r\n            Ventas\r\n        </div>    \r\n    </div>\r\n\r\n    <div *ngIf=\"userIsLoggedIn()\" class=\"toolbar-options products\" (click)=\"goTo($event)\">\r\n        <div class=\"products\">\r\n            Productos\r\n        </div>    \r\n    </div>\r\n    \r\n    <div *ngIf=\"userIsLoggedIn() && userIsAdmin()\" class=\"toolbar-options suppliers\" (click)=\"goTo($event)\">\r\n        <div class=\"suppliers\">\r\n            Proveedores\r\n        </div>\r\n    </div>\r\n    \r\n    <div *ngIf=\"userIsLoggedIn() && userIsAdmin()\" class=\"toolbar-options distributors\" (click)=\"goTo($event)\">\r\n        <div class=\"distributors\">\r\n            Distribuidores\r\n        </div>\r\n    </div>\r\n    \r\n    <div *ngIf=\"userIsLoggedIn() && userIsAdmin()\" class=\"toolbar-options register\" (click)=\"goTo($event)\">\r\n        <div class=\"register\">\r\n            Registro de usuario\r\n        </div>\r\n    </div>\r\n\r\n    <div *ngIf=\"userIsLoggedIn()\" class=\"toolbar-options passwordchange\" (click)=\"goTo($event)\">\r\n        <div class=\"passwordchange\">\r\n            Cambiar contraseña\r\n        </div>\r\n    </div>\r\n\r\n    <div *ngIf=\"userIsLoggedIn()\" class=\"toolbar-options logout\" (click)=\"logout()\">\r\n        <div class=\"logout\">\r\n            Cerrar sesión\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<router-outlet></router-outlet>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}