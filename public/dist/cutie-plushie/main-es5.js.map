{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/management/auth-guard.service.ts","webpack:///src/app/management/auth.service.ts","webpack:///src/app/management/management-distributors/management-distributors.component.ts","webpack:///src/app/management/management-distributors/management-distributors.component.html","webpack:///src/app/management/management-home/management-home.component.ts","webpack:///src/app/management/management-home/management-home.component.html","webpack:///src/app/management/management-login/management-login.component.ts","webpack:///src/app/management/management-login/management-login.component.html","webpack:///src/app/management/management-products/management-products.component.ts","webpack:///src/app/management/management-products/management-products.component.html","webpack:///src/app/management/management-register/management-register.component.ts","webpack:///src/app/management/management-register/management-register.component.html","webpack:///src/app/management/management-sales/management-sales.component.ts","webpack:///src/app/management/management-sales/management-sales.component.html","webpack:///src/app/management/management-suppliers/management-suppliers.component.ts","webpack:///src/app/management/management-suppliers/management-suppliers.component.html","webpack:///src/app/management/management.component.ts","webpack:///src/app/management/management.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","children","redirectTo","pathMatch","canActivate","AppRoutingModule","forRoot","useHash","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","AuthGuardService","authService","router","isAuthenticated","navigate","providedIn","AuthService","token","localStorage","getItem","ManagementDistributorsComponent","ManagementHomeComponent","ManagementLoginComponent","http","formBuilder","submitted","loginForm","group","user","required","minLength","maxLength","password","invalid","res","validate","controls","value","console","log","key","btoa","post","observe","responseType","toPromise","onSubmit","ManagementProductsComponent","ManagementRegisterComponent","ManagementSalesComponent","ManagementSuppliersComponent","ManagementComponent","environment","production","bootstrapModule","catch","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { AuthGuardService } from './management/auth-guard.service';\r\n\r\nimport { ManagementComponent } from './management/management.component';\r\nimport { ManagementLoginComponent } from './management/management-login/management-login.component';\r\nimport { ManagementHomeComponent } from './management/management-home/management-home.component';\r\nimport { ManagementRegisterComponent } from './management/management-register/management-register.component';\r\nimport { ManagementSuppliersComponent } from './management/management-suppliers/management-suppliers.component';\r\nimport { ManagementDistributorsComponent } from './management/management-distributors/management-distributors.component';\r\nimport { ManagementSalesComponent } from './management/management-sales/management-sales.component';\r\nimport { ManagementProductsComponent } from './management/management-products/management-products.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  { \r\n    path: 'management', \r\n    component: ManagementComponent ,\r\n    children: [\r\n      { path: '',   redirectTo: 'login', pathMatch: 'full' },\r\n      { path: 'login', component: ManagementLoginComponent},\r\n      { path: 'home', component: ManagementHomeComponent, canActivate : [AuthGuardService] },\r\n      { path: 'register', component: ManagementRegisterComponent, canActivate : [AuthGuardService] },\r\n      { path: 'suppliers', component: ManagementSuppliersComponent, canActivate : [AuthGuardService] },\r\n      { path: 'distributors', component: ManagementDistributorsComponent, canActivate : [AuthGuardService] },\r\n      { path: 'sales', component: ManagementSalesComponent, canActivate : [AuthGuardService] },\r\n      { path: 'products', component: ManagementProductsComponent, canActivate : [AuthGuardService] }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, {useHash: true})],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'cutie-plushie';\r\n}\r\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule }   from '@angular/forms';\r\nimport { HttpClientModule} from '@angular/common/http';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { ManagementComponent } from './management/management.component';\r\nimport { ManagementLoginComponent } from './management/management-login/management-login.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ManagementComponent,\r\n    ManagementLoginComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [\r\n    HttpClientModule,\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\nimport { CanActivate,Router } from '@angular/router';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService implements CanActivate {\n\n  constructor(private authService : AuthService, private router : Router) { }\n\n  canActivate(){\n    if(this.authService.isAuthenticated()){\n      return true;\n    }\n    this.router.navigate(['management/login']);\n    return false;\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor() { }\n\n    public isAuthenticated() : Boolean {\n      let token = localStorage.getItem('cutie-plushie-token')\n      if(token != null){\n        return true;\n      }\n      return false;\n    }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-management-distributors',\n  templateUrl: './management-distributors.component.html',\n  styleUrls: ['./management-distributors.component.css']\n})\nexport class ManagementDistributorsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>management-distributors works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-management-home',\n  templateUrl: './management-home.component.html',\n  styleUrls: ['./management-home.component.css']\n})\nexport class ManagementHomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>management-home works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-management-login',\n  templateUrl: './management-login.component.html',\n  styleUrls: ['./management-login.component.css']\n})\nexport class ManagementLoginComponent implements OnInit {\n  loginForm: FormGroup;\n  submitted = false;\n\n  constructor(\n    private http: HttpClient, \n    private router: Router, \n    private formBuilder: FormBuilder\n    ) { \n      let token = localStorage.getItem('cutie-plushie-token')\n      if(token != null){\n        this.router.navigate(['management/home']);\n      }\n\n      this.loginForm = this.formBuilder.group({\n        user: new FormControl('', [\n          Validators.required,\n          Validators.minLength(9),\n          Validators.maxLength(9)\n        ]),\n        password: new FormControl('', [\n          Validators.required\n        ])\n      });\n    }\n\n  ngOnInit(): void {\n      \n  }\n\n  onSubmit() {\n    this.submitted = true;\n    // Stop here if form is invalid\n    if (this.loginForm.invalid) {\n      //alert(\"Por favor introduzca su usuario y contraseña para poder ingresar.\");}\n      \n      return;\n    }\n\n    let res = this.validate(this.loginForm.controls.user.value, this.loginForm.controls.password.value);\n    console.log(res);\n  }\n\n  public validate(key: string, password: string) {\n    password = btoa(password);\n    return this.http.post(\n      '/api/v1/management/login', \n      {'key' : key, 'pwd' : password}, \n      {observe: 'response', responseType: 'json'}\n    ).toPromise()\n  }\n}\n","<div class=\"login-component\">\n    <div class=\"form-container\">\n        <h2>Bienvenido a Cutie Plushie!</h2>\n        <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n            <div class=\"form-group\">\n                <label for=\"user\">Clave de usuario</label>\n                <input type=\"text\" formControlName=\"user\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && loginForm.controls.user.invalid }\"/>\n                <div *ngIf=\"submitted && loginForm.controls.user.invalid\" class=\"invalid-feedback\">\n                    <div *ngIf=\"submitted && loginForm.controls.user.errors.required\">Por favor ingrese una clave de usuario</div>\n                    <div *ngIf=\"submitted && loginForm.controls.user.errors.maxlength\">Su clave de usuario debe tener 9 caracteres alfanuméricos</div>\n                    <div *ngIf=\"submitted && loginForm.controls.user.errors.minlength\">Su clave de usuario debe tener 9 caracteres alfanuméricos</div>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"password\">Password</label>\n                <input type=\"password\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && loginForm.controls.password.invalid }\" />\n                <div *ngIf=\"submitted && loginForm.controls.password.invalid\" class=\"invalid-feedback\">\n                    <div *ngIf=\"submitted && loginForm.controls.password.errors.required\">Por favor ingrese su contraseña</div>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <button class=\"btn-login\">\n                    Iniciar sesión\n                </button>\n            </div>\n        </form>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-management-products',\n  templateUrl: './management-products.component.html',\n  styleUrls: ['./management-products.component.css']\n})\nexport class ManagementProductsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>management-products works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-management-register',\n  templateUrl: './management-register.component.html',\n  styleUrls: ['./management-register.component.css']\n})\nexport class ManagementRegisterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>management-register works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-management-sales',\n  templateUrl: './management-sales.component.html',\n  styleUrls: ['./management-sales.component.css']\n})\nexport class ManagementSalesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>management-sales works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-management-suppliers',\n  templateUrl: './management-suppliers.component.html',\n  styleUrls: ['./management-suppliers.component.css']\n})\nexport class ManagementSuppliersComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>management-suppliers works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-management',\n  templateUrl: './management.component.html',\n  styleUrls: ['./management.component.css']\n})\nexport class ManagementComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n    \n  }\n\n}\n","<div class=\"toolbar\" role=\"banner\">\n    <img\n        height=\"60px\"\n        alt=\"Angular Logo\"\n        src=\"assets/images/cutie_plushie_logo_header.png\"\n    />\n    <div class=\"spacer\"></div>\n        \n</div>\n\n<router-outlet></router-outlet>\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}