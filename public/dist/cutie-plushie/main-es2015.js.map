{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/management/auth-guard.service.ts","./src/app/management/auth.service.ts","./src/app/management/customPaginatorLabels.ts","./src/app/management/management-distributors/management-distributors.component.html","./src/app/management/management-distributors/management-distributors.component.ts","./src/app/management/management-home/management-home.component.html","./src/app/management/management-home/management-home.component.ts","./src/app/management/management-login/management-login.component.html","./src/app/management/management-login/management-login.component.ts","./src/app/management/management-passwordchange/management-passwordchange.component.html","./src/app/management/management-passwordchange/management-passwordchange.component.ts","./src/app/management/management-products/management-products.component.html","./src/app/management/management-products/management-products.component.ts","./src/app/management/management-register/management-register.component.html","./src/app/management/management-register/management-register.component.ts","./src/app/management/management-sales/management-sales.component.html","./src/app/management/management-sales/management-sales.component.ts","./src/app/management/management-suppliers/management-suppliers.component.html","./src/app/management/management-suppliers/management-suppliers.component.ts","./src/app/management/management.component.html","./src/app/management/management.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { AuthGuardService } from './management/auth-guard.service';\r\n\r\nimport { ManagementComponent } from './management/management.component';\r\nimport { ManagementLoginComponent } from './management/management-login/management-login.component';\r\nimport { ManagementHomeComponent } from './management/management-home/management-home.component';\r\nimport { ManagementRegisterComponent } from './management/management-register/management-register.component';\r\nimport { ManagementSuppliersComponent } from './management/management-suppliers/management-suppliers.component';\r\nimport { ManagementDistributorsComponent } from './management/management-distributors/management-distributors.component';\r\nimport { ManagementSalesComponent } from './management/management-sales/management-sales.component';\r\nimport { ManagementProductsComponent } from './management/management-products/management-products.component';\r\nimport { ManagementPasswordchangeComponent } from './management/management-passwordchange/management-passwordchange.component';\r\n\r\nconst routes: Routes = [\r\n  { \r\n    path: 'management', \r\n    component: ManagementComponent ,\r\n    children: [\r\n      { path: '',   redirectTo: 'login', pathMatch: 'full' },\r\n      { path: 'login', component: ManagementLoginComponent},\r\n      { path: 'home', component: ManagementHomeComponent, canActivate : [AuthGuardService] },\r\n      { path: 'register', component: ManagementRegisterComponent, canActivate : [AuthGuardService] },\r\n      { path: 'suppliers', component: ManagementSuppliersComponent, canActivate : [AuthGuardService] },\r\n      { path: 'distributors', component: ManagementDistributorsComponent, canActivate : [AuthGuardService] },\r\n      { path: 'sales', component: ManagementSalesComponent, canActivate : [AuthGuardService] },\r\n      { path: 'products', component: ManagementProductsComponent, canActivate : [AuthGuardService] },\r\n      { path: 'passwordchange', component: ManagementPasswordchangeComponent, canActivate : [AuthGuardService] }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, {useHash: true})],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }","<router-outlet></router-outlet>","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'cutie-plushie';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule }   from '@angular/forms';\r\nimport { HttpClientModule} from '@angular/common/http';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatPaginatorModule, MatPaginatorIntl } from '@angular/material/paginator';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSortModule } from '@angular/material/sort';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { ManagementComponent } from './management/management.component';\r\nimport { ManagementHomeComponent } from './management/management-home/management-home.component';\r\nimport { ManagementRegisterComponent } from './management/management-register/management-register.component';\r\nimport { ManagementSuppliersComponent } from './management/management-suppliers/management-suppliers.component';\r\nimport { ManagementDistributorsComponent } from './management/management-distributors/management-distributors.component';\r\nimport { ManagementSalesComponent } from './management/management-sales/management-sales.component';\r\nimport { ManagementProductsComponent } from './management/management-products/management-products.component';\r\nimport { ManagementLoginComponent } from './management/management-login/management-login.component';\r\nimport { ManagementPasswordchangeComponent } from './management/management-passwordchange/management-passwordchange.component';\r\n\r\nimport { MatPaginatorIntlEsp } from './management/customPaginatorLabels';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ManagementComponent,\r\n    ManagementLoginComponent,\r\n    ManagementHomeComponent,\r\n    ManagementRegisterComponent,\r\n    ManagementSuppliersComponent,\r\n    ManagementDistributorsComponent,\r\n    ManagementSalesComponent,\r\n    ManagementProductsComponent,\r\n    ManagementPasswordchangeComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSortModule\r\n  ],\r\n  providers: [\r\n    HttpClientModule,\r\n    { provide: MatPaginatorIntl, useClass: MatPaginatorIntlEsp}\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate,Router } from '@angular/router';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuardService implements CanActivate {\r\n\r\n  constructor(private authService : AuthService, private router : Router) { }\r\n\r\n  canActivate(){\r\n    if(this.authService.isAuthenticated()){\r\n      return true;\r\n    }\r\n    this.router.navigate(['management/login']);\r\n    return false;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  constructor() { }\r\n\r\n    public isAuthenticated() : Boolean {\r\n      let token = localStorage.getItem('cutie-plushie-token')\r\n      if(token != null && token != ''){\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { MatPaginatorIntl } from '@angular/material/paginator';\r\n\r\n@Injectable()\r\nexport class MatPaginatorIntlEsp extends MatPaginatorIntl {\r\n  itemsPerPageLabel = 'Productos por página';\r\n  nextPageLabel     = 'Siguiente página';\r\n  previousPageLabel = 'Página anterior';\r\n\r\n  getRangeLabel = function (page, pageSize, length) {\r\n    if (length === 0 || pageSize === 0) {\r\n      return '0 de ' + length;\r\n    }\r\n    length = Math.max(length, 0);\r\n    const startIndex = page * pageSize;\r\n    // If the start index exceeds the list length, do not try and fix the end index to the end.\r\n    const endIndex = startIndex < length ?\r\n      Math.min(startIndex + pageSize, length) :\r\n      startIndex + pageSize;\r\n    return startIndex + 1 + ' - ' + endIndex + ' de ' + length;\r\n  };\r\n\r\n}","<p>management-distributors works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-management-distributors',\r\n  templateUrl: './management-distributors.component.html',\r\n  styleUrls: ['./management-distributors.component.css']\r\n})\r\nexport class ManagementDistributorsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>management-home works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-management-home',\r\n  templateUrl: './management-home.component.html',\r\n  styleUrls: ['./management-home.component.css']\r\n})\r\nexport class ManagementHomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"login-component\">\r\n    <div class=\"form-container\">\r\n        <img\r\n        height=\"120px\"\r\n        alt=\"Logo\"\r\n        src=\"assets/images/cutie_plushie_logo.png\"\r\n        />\r\n        <h2>Bienvenido a Cutie Plushie!</h2>\r\n        <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\r\n            <div class=\"form-group\">\r\n                <label for=\"user\">Clave de usuario</label>\r\n                <input type=\"text\" formControlName=\"user\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && loginForm.controls.user.invalid }\"/>\r\n                <div *ngIf=\"submitted && loginForm.controls.user.invalid\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"submitted && loginForm.controls.user.errors.required\">Por favor ingrese una clave de usuario</div>\r\n                    <div *ngIf=\"submitted && loginForm.controls.user.errors.maxlength\">Su clave de usuario debe tener 9 caracteres alfanuméricos</div>\r\n                    <div *ngIf=\"submitted && loginForm.controls.user.errors.minlength\">Su clave de usuario debe tener 9 caracteres alfanuméricos</div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"password\">Contraseña</label>\r\n                <input type=\"password\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && loginForm.controls.password.invalid }\" />\r\n                <div *ngIf=\"submitted && loginForm.controls.password.invalid\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"submitted && loginForm.controls.password.errors.required\">Por favor ingrese su contraseña</div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <button class=\"btn-login\">\r\n                    Iniciar sesión\r\n                </button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient, HttpResponse, HttpErrorResponse } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-management-login',\r\n  templateUrl: './management-login.component.html',\r\n  styleUrls: ['./management-login.component.css']\r\n})\r\nexport class ManagementLoginComponent implements OnInit {\r\n  loginForm: FormGroup;\r\n  submitted = false;\r\n\r\n  constructor(\r\n    private http: HttpClient, \r\n    private router: Router,\r\n    private formBuilder: FormBuilder\r\n    ) { \r\n      let token = localStorage.getItem('cutie-plushie-token')\r\n      if(token != null){\r\n        this.router.navigate(['management/home']);\r\n      }\r\n\r\n      this.loginForm = this.formBuilder.group({\r\n        user: new FormControl('', [\r\n          Validators.required,\r\n          Validators.minLength(9),\r\n          Validators.maxLength(9)\r\n        ]),\r\n        password: new FormControl('', [\r\n          Validators.required\r\n        ])\r\n      });\r\n    }\r\n\r\n  ngOnInit(): void {\r\n      \r\n  }\r\n\r\n  async onSubmit() {\r\n    this.submitted = true;\r\n    // Stop here if form is invalid\r\n    if (this.loginForm.invalid) {\r\n      //alert(\"Por favor introduzca su usuario y contraseña para poder ingresar.\");}\r\n      \r\n      return;\r\n    }\r\n\r\n    let res = await this.validate(this.loginForm.controls.user.value, this.loginForm.controls.password.value);\r\n    \r\n    if(res.status == 200){\r\n      let body = res.body;\r\n      let bodyJson = JSON.parse(JSON.stringify(body));\r\n      let user = {\r\n        userKey: bodyJson.userKey,\r\n        userName: bodyJson.userName,\r\n        userLastName: bodyJson.userLastName,\r\n        userGroup: bodyJson.userGroup\r\n      }\r\n      let token = bodyJson.token\r\n      localStorage.setItem('cutie-plushie-token',token);\r\n      localStorage.setItem('user-details',JSON.stringify(user));\r\n      this.router.navigate(['management/home']);\r\n    } else if(res.status == 401){\r\n      alert(\"Usuario y/o contraseña incorrectos.\");\r\n    }\r\n  }\r\n\r\n  public validate(key: string, password: string): Promise<HttpResponse<Object>> {\r\n    password = btoa(password);\r\n    return this.http.post(\r\n      '/api/v1/management/login', \r\n      {'key' : key, 'pwd' : password}, \r\n      {observe: 'response', responseType: 'json'}\r\n    ).toPromise().then(function(res) {\r\n      return res;\r\n    }).catch(function(err){ \r\n      return err;\r\n    });\r\n  }\r\n}\r\n","<div class=\"passwordchange-component\">\r\n    <div class=\"form-container\">\r\n        <h1>\r\n            Cambiar contraseña\r\n        </h1>\r\n        <form [formGroup]=\"passwordChangeForm\" (ngSubmit)=\"onSubmit()\">\r\n            <div class=\"form-group\">\r\n                <label for=\"oldPassword\">Contraseña anterior</label>\r\n                <input type=\"password\" formControlName=\"oldPassword\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted &&  passwordChangeForm.controls.oldPassword.invalid }\" />\r\n                <div *ngIf=\"submitted &&  passwordChangeForm.controls.oldPassword.invalid\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"submitted &&  passwordChangeForm.controls.oldPassword.errors.required\">\r\n                        Por favor ingrese su contraseña anterior\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"newPassword\">Contraseña nueva</label>\r\n                <input type=\"password\" formControlName=\"newPassword\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted &&  passwordChangeForm.controls.newPassword.invalid }\" />\r\n                <div *ngIf=\"submitted &&  passwordChangeForm.controls.newPassword.invalid\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"submitted &&  passwordChangeForm.controls.newPassword.errors.required\">\r\n                        Por favor ingrese su nueva contraseña\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"confirmPassword\">Confirmar contraseña nueva</label>\r\n                <input type=\"password\" formControlName=\"confirmPassword\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted &&  passwordChangeForm.controls.confirmPassword.invalid }\" />\r\n                <div *ngIf=\"submitted &&  passwordChangeForm.controls.confirmPassword.invalid\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"submitted &&  passwordChangeForm.controls.confirmPassword.errors.required\">\r\n                        Por favor confirme su nueva contraseña\r\n                    </div>\r\n                    <div *ngIf=\"submitted &&  passwordChangeForm.controls.confirmPassword.errors.pattern\">\r\n                        La contraseña no coincide con su nueva contraseña\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <button class=\"btn-passwordchange\">\r\n                    Cambiar mi contraseña\r\n                </button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient, HttpResponse, HttpHeaders } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-management-passwordchange',\r\n  templateUrl: './management-passwordchange.component.html',\r\n  styleUrls: ['./management-passwordchange.component.css']\r\n})\r\nexport class ManagementPasswordchangeComponent implements OnInit {\r\n  passwordChangeForm: FormGroup;\r\n  submitted = false;\r\n\r\n  constructor(\r\n    private http: HttpClient, \r\n    private router: Router,\r\n    private formBuilder: FormBuilder\r\n    ) {\r\n      this.passwordChangeForm = this.formBuilder.group({\r\n        oldPassword: new FormControl('', [\r\n          Validators.required\r\n        ]),\r\n        newPassword: new FormControl('', [\r\n          Validators.required\r\n        ]),\r\n        confirmPassword: new FormControl('', [\r\n          Validators.required,\r\n          Validators.pattern(\"^$\")\r\n        ])\r\n      });\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n    }\r\n\r\n    async onSubmit() {\r\n      this.submitted = true;\r\n      let value = this.passwordChangeForm.controls.confirmPassword.value;\r\n\r\n      this.passwordChangeForm.removeControl(\"confirmPassword\");\r\n      this.passwordChangeForm.addControl(\"confirmPassword\",\r\n        new FormControl(value, [\r\n          Validators.required,\r\n          Validators.pattern(\"^\"+this.passwordChangeForm.controls.newPassword.value+\"$\")\r\n        ])\r\n      )\r\n      // Stop here if form is invalid\r\n      if (this.passwordChangeForm.invalid) {\r\n        return;\r\n      }\r\n  \r\n      let res = await this.changePassword(this.passwordChangeForm.controls.oldPassword.value, this.passwordChangeForm.controls.newPassword.value);\r\n      \r\n      if(res.status == 200) {\r\n        let body = res.body;\r\n        let bodyJson = JSON.parse(JSON.stringify(body));\r\n        let token = bodyJson.token\r\n        localStorage.setItem('cutie-plushie-token',token);\r\n        alert('Su contraseña se ha cambiado con éxito!');\r\n        this.router.navigate(['management/home']);\r\n      } else if(res.status == 401) {\r\n        alert('Sus credenciales han expirado. Por favor inicie sesión de nuevo.');\r\n        localStorage.removeItem('cutie-plushie-token');\r\n        localStorage.removeItem('user-details');\r\n        this.router.navigate(['management/login']);\r\n      } else if(res.status == 403) {\r\n        alert(\"Su contraseña anterior no coincide con los registros. Por favor intente de nuevo.\");\r\n      }\r\n    }\r\n  \r\n    public changePassword(pwdOld: string, pwdNew: string): Promise<HttpResponse<Object>> {\r\n      let user = JSON.parse(localStorage.getItem('user-details')).userKey;\r\n      let token = localStorage.getItem('cutie-plushie-token');\r\n\r\n      pwdOld = btoa(pwdOld);\r\n      pwdNew = btoa(pwdNew)\r\n\r\n      const headers = new HttpHeaders()\r\n            .set(\"Authorization\", \"Bearer \" + token);\r\n\r\n      return this.http.put(\r\n        '/api/v1/management/users/' + user, \r\n        {'pwdOld' : pwdOld, 'pwdNew' : pwdNew}, \r\n        {headers: headers, observe: 'response', responseType: 'json'}\r\n      ).toPromise().then(function(res) {\r\n        return res;\r\n      }).catch(function(err){ \r\n        return err;\r\n      });\r\n    }\r\n\r\n}\r\n","<div class=\"products-component\">\r\n    <div class=\"table-container\">\r\n        <h1>\r\n            Productos\r\n        </h1>\r\n\r\n        <mat-form-field>\r\n            <input class=\"filter-box\" matInput (keyup)=\"applyFilter($event)\" placeholder=\"Buscar...\"/>\r\n        </mat-form-field>\r\n        <button class=\"btn-create\" (click)=\"createProduct()\">\r\n            Agregar producto\r\n        </button>\r\n\r\n        <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\" matSort>\r\n\r\n            <ng-container matColumnDef=\"productId\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\r\n              <td mat-cell *matCellDef=\"let product\"> {{product.productId}} </td>\r\n            </ng-container>\r\n          \r\n            <ng-container matColumnDef=\"productName\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Nombre </th>\r\n              <td mat-cell *matCellDef=\"let product\"> {{product.productName}} </td>\r\n            </ng-container>\r\n          \r\n            <ng-container matColumnDef=\"productDescription\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Descripción </th>\r\n              <td mat-cell *matCellDef=\"let product\"> {{product.productDescription}} </td>\r\n            </ng-container>\r\n          \r\n            <ng-container matColumnDef=\"productUnitPriceMXN\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Precio (MXN) </th>\r\n              <td mat-cell *matCellDef=\"let product\"> {{product.productUnitPriceMXN}} </td>\r\n            </ng-container>\r\n    \r\n            <ng-container matColumnDef=\"productActiveDiscount\">\r\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Descuento </th>\r\n                <td mat-cell *matCellDef=\"let product\"> {{product.productActiveDiscount}} </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"actions\">\r\n                <th mat-header-cell *matHeaderCellDef > Acciones </th>\r\n                <td mat-cell *matCellDef=\"let product\"> \r\n                    <button *ngIf=\"isAdmin\" class=\"btn-edit\" (click)=\"editProduct(product)\">\r\n                        Editar\r\n                    </button>\r\n                    <button *ngIf=\"isAdmin\" class=\"btn-delete\" (click)=\"deleteProduct(product)\">\r\n                        Eliminar\r\n                    </button>\r\n                </td>\r\n            </ng-container>\r\n          \r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n            \r\n        </table>\r\n        <mat-paginator [length]=\"dataSource.data.length\" [pageSizeOptions]=\"[10, 25, 50, 100]\"></mat-paginator>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { HttpClient, HttpResponse, HttpHeaders } from '@angular/common/http';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { Router } from '@angular/router';\r\n\r\nexport interface Product {\r\n  productId: string,\r\n  productName: string,\r\n  productDescription: string,\r\n  productUnitPriceMXN: number,\r\n  productIcon: string,\r\n  active: boolean,\r\n  productActiveDiscount: number,\r\n  supplier: {\r\n    supplierId: string,\r\n    supplierName: string,\r\n  },\r\n  category: {\r\n    categoryId: string,\r\n    categoryName: string,\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'app-management-products',\r\n  templateUrl: './management-products.component.html',\r\n  styleUrls: ['./management-products.component.css']\r\n})\r\nexport class ManagementProductsComponent implements OnInit {\r\n\r\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\r\n\r\n  displayedColumns: string[] = ['productId','productName','productDescription','productUnitPriceMXN','productActiveDiscount', 'actions'];\r\n  products: Product[] = [ ];\r\n  dataSource = new MatTableDataSource(this.products);\r\n  isAdmin = this.userIsAdmin();\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private router: Router\r\n  ) { \r\n    this.displayProducts();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // Assign the paginator to our data source\r\n    this.dataSource.paginator = this.paginator;\r\n    // Assign the a sorter to our data source\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    // Apply a filter to the dataSource after user input\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    // Return to first page after applying a filter\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  userIsAdmin(): boolean{\r\n    let details = localStorage.getItem('user-details');\r\n    if(details != null){\r\n      let user = JSON.parse(details);\r\n      if(user.userGroup == \"ADMIN\"){\r\n        return true;\r\n      }\r\n      return false\r\n    }\r\n    return false;\r\n  }\r\n\r\n\r\n\r\n  // Related to back-end product management\r\n\r\n  async displayProducts() {\r\n    let res = await this.getProducts();\r\n    if(res.status == 200) {\r\n      let body = <Product[]>res.body\r\n      for(let product of body){\r\n        console.log(product);\r\n        let productJson: Product = JSON.parse(JSON.stringify(product));\r\n        console.log(productJson);\r\n        this.products.push(productJson);\r\n      }\r\n      this.dataSource.data = this.products;     \r\n    } else if(res.status == 401) {\r\n      alert('Sus credenciales han expirado. Por favor inicie sesión de nuevo.');\r\n      localStorage.removeItem('cutie-plushie-token');\r\n      localStorage.removeItem('user-details');\r\n      this.router.navigate(['management/login']);\r\n    } \r\n  }\r\n\r\n  public getProducts(): Promise<HttpResponse<Object>> {\r\n    let token = localStorage.getItem('cutie-plushie-token')\r\n    const headers = new HttpHeaders()\r\n          .set(\"Authorization\", \"Bearer \" + token);\r\n\r\n    return this.http.get(\r\n      '/api/v1/management/products/?page=1&productsPerPage=10000',\r\n      {headers: headers, observe: 'response', responseType: 'json'}\r\n    ).toPromise().then(function(res) {\r\n      return res;\r\n    }).catch(function(err){ \r\n      return err;\r\n    });\r\n  }\r\n\r\n  createProduct() {\r\n    \r\n  }\r\n\r\n  async deleteProduct(product: Product) {\r\n    let confirmation = confirm(\"Está seguro de que desea eliminar el producto? Esta operación no se puede deshacer.\");\r\n    if(!confirmation){\r\n      return;\r\n    }\r\n\r\n    let res = await this.productDelete(product);\r\n    if(res.status == 200) {\r\n      alert('El producto se ha eliminado con éxito!');\r\n      this.displayProducts();\r\n    } else if(res.status == 401) {\r\n      alert('Sus credenciales han expirado. Por favor inicie sesión de nuevo.');\r\n      localStorage.removeItem('cutie-plushie-token');\r\n      localStorage.removeItem('user-details');\r\n      this.router.navigate(['management/login']);\r\n    } else if(res.status == 403) {\r\n      alert(\"INTENTO DE INTRUSIÓN.\");\r\n    }\r\n  }\r\n\r\n  productDelete(product: Product): Promise<HttpResponse<Object>> { \r\n    let token = localStorage.getItem('cutie-plushie-token');\r\n\r\n    const headers = new HttpHeaders()\r\n          .set(\"Authorization\", \"Bearer \" + token);\r\n\r\n    return this.http.put(\r\n      '/api/v1/management/products/' + product.productId, \r\n      {\r\n        'productName' : product.productName, \r\n        'productDescription' : product.productDescription,\r\n        'productUnitPrice' : product.productUnitPriceMXN,\r\n        'productIcon': product.productIcon,\r\n        'active' : 'false',\r\n        'supplierId': product.supplier.supplierId,\r\n        'productActiveDiscount': product.productActiveDiscount\r\n      }, \r\n      {headers: headers, observe: 'response', responseType: 'json'}\r\n    ).toPromise().then(function(res) {\r\n      return res;\r\n    }).catch(function(err){ \r\n      return err;\r\n    });\r\n  }\r\n\r\n  editProduct(product: Product) {\r\n    console.log(product.productName);\r\n  }\r\n\r\n}\r\n\r\n\r\n","<div class=\"register-component\">\r\n    <div class=\"form-container\">\r\n        <h1>\r\n            Registrar nuevo usuario\r\n        </h1>\r\n        <h3>\r\n            Por favor úsese responsablemente\r\n        </h3>\r\n        <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\r\n            <div class=\"form-group\">\r\n                <label for=\"user\">Clave de usuario*</label>\r\n                <input type=\"text\" formControlName=\"user\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted &&  registerForm.controls.user.invalid }\" />\r\n                <div *ngIf=\"submitted &&  registerForm.controls.user.invalid\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"submitted && registerForm.controls.user.errors.required\">Por favor ingrese la clave del usuario</div>\r\n                    <div *ngIf=\"submitted && registerForm.controls.user.errors.maxlength\">La clave de usuario debe tener 9 caracteres alfanuméricos</div>\r\n                    <div *ngIf=\"submitted && registerForm.controls.user.errors.minlength\">La clave de usuario debe tener 9 caracteres alfanuméricos</div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"name\">Nombre(s)*</label>\r\n                <input type=\"text\" formControlName=\"name\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted &&  registerForm.controls.name.invalid }\" />\r\n                <div *ngIf=\"submitted &&  registerForm.controls.name.invalid\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"submitted && registerForm.controls.name.errors.required\">Por favor ingrese el nombre o nombres</div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"lastName\">Apellidos*</label>\r\n                <input type=\"text\" formControlName=\"lastName\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted &&  registerForm.controls.lastName.invalid }\" />\r\n                <div *ngIf=\"submitted &&  registerForm.controls.lastName.invalid\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"submitted && registerForm.controls.lastName.errors.required\">Por favor ingrese los apellidos</div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"password\">Contraseña*</label>\r\n                <input type=\"password\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted &&  registerForm.controls.password.invalid }\" />\r\n                <div *ngIf=\"submitted &&  registerForm.controls.password.invalid\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"submitted &&  registerForm.controls.password.errors.required\">\r\n                        Por favor ingrese la contraseña\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"confirmPassword\">Confirmar contraseña nueva*</label>\r\n                <input type=\"password\" formControlName=\"confirmPassword\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && registerForm.controls.confirmPassword.invalid }\" />\r\n                <div *ngIf=\"submitted && registerForm.controls.confirmPassword.invalid\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"submitted && registerForm.controls.confirmPassword.errors.required\">\r\n                        Por favor confirme la nueva contraseña\r\n                    </div>\r\n                    <div *ngIf=\"submitted && registerForm.controls.confirmPassword.errors.pattern\">\r\n                        La contraseña no coincide\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"userGroup\">Grupo de permisos*</label>\r\n                <select class=\"form-control\" formControlName=\"userGroup\">\r\n                    <option value=\"\">Seleccione una opción...</option>\r\n                    <option *ngFor=\"let permission of permissions\" [ngValue]=\"permission\">{{permissionsDictionary[permission]}}</option>\r\n                 </select>\r\n                 <div *ngIf=\"submitted &&  registerForm.controls.userGroup.invalid\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"submitted &&  registerForm.controls.userGroup.errors.required\">\r\n                        Por favor seleccione una opción\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <button class=\"btn-register\">\r\n                    Crear nuevo usuario\r\n                </button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient, HttpResponse, HttpHeaders } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-management-register',\r\n  templateUrl: './management-register.component.html',\r\n  styleUrls: ['./management-register.component.css']\r\n})\r\nexport class ManagementRegisterComponent implements OnInit {\r\n  registerForm: FormGroup;\r\n  submitted = false;\r\n  permissionsDictionary = {\r\n    \"CR\": \"Relaciones con el cliente\",\r\n    \"ADMIN\": \"Administrador\"\r\n  };\r\n\r\n  permissions = []\r\n  \r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private router: Router,\r\n    private formBuilder: FormBuilder\r\n  ) { \r\n\r\n    let userGroup = JSON.parse(localStorage.getItem('user-details')).userGroup;\r\n    if(userGroup != \"ADMIN\"){\r\n      alert('Acceso denegado. Usted no cuenta con permisos suficientes para efectuar la operación solicitada.');\r\n      this.router.navigate(['management/home']);\r\n    }\r\n\r\n    for(let permission in this.permissionsDictionary){\r\n      this.permissions.push(permission);\r\n    }\r\n\r\n    this.registerForm = this.formBuilder.group({\r\n      user: new FormControl('', [\r\n        Validators.required,\r\n        Validators.minLength(9),\r\n        Validators.maxLength(9)\r\n      ]),\r\n      name: new FormControl('', [\r\n        Validators.required\r\n      ]),\r\n      lastName: new FormControl('', [\r\n        Validators.required\r\n      ]),\r\n      password: new FormControl('', [\r\n        Validators.required\r\n      ]),\r\n      confirmPassword: new FormControl('', [\r\n        Validators.required,\r\n        Validators.pattern(\"^$\")\r\n      ]),\r\n      userGroup: new FormControl('', [\r\n        Validators.required\r\n      ])\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  async onSubmit() {\r\n    this.submitted = true;\r\n      \r\n    let value = this.registerForm.controls.confirmPassword.value;\r\n    this.registerForm.removeControl(\"confirmPassword\");\r\n    this.registerForm.addControl(\"confirmPassword\",\r\n      new FormControl(value, [\r\n        Validators.required,\r\n        Validators.pattern(\"^\"+this.registerForm.controls.password.value+\"$\")\r\n      ])\r\n    )\r\n\r\n    // Stop here if form is invalid\r\n    if (this.registerForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    let controls = this.registerForm.controls;\r\n    let userId = controls.user.value;\r\n    let userName = controls.name.value;\r\n    let userLastName = controls.lastName.value;\r\n    let userGroup = controls.userGroup.value;\r\n    let pwd = controls.password.value;\r\n\r\n    let res = await this.createNewUser(userId, userName, userLastName, userGroup, pwd);\r\n    \r\n    if(res.status == 200) {\r\n      alert('El usuario se ha creado con éxito!');\r\n      this.router.navigate(['management/home']);\r\n    } else if(res.status == 401) {\r\n      alert('Sus credenciales han expirado. Por favor inicie sesión de nuevo.');\r\n      localStorage.removeItem('cutie-plushie-token');\r\n      localStorage.removeItem('user-details');\r\n      this.router.navigate(['management/login']);\r\n    } else if(res.status == 403) {\r\n      alert(\"INTENTO DE INTRUSIÓN.\");\r\n    }\r\n  }\r\n\r\n  public createNewUser(userId: string, userName: string, userLastName: string, userGroup: string, password: string): Promise<HttpResponse<Object>> {\r\n    let token = localStorage.getItem('cutie-plushie-token');\r\n    let pwd = btoa(password);\r\n    const headers = new HttpHeaders()\r\n          .set(\"Authorization\", \"Bearer \" + token);\r\n\r\n    return this.http.post(\r\n      '/api/v1/management/users/' + userId, \r\n      {\r\n        'userName' : userName,\r\n        'userLastName' : userLastName,\r\n        'userGroup' : userGroup,\r\n        'pwd' : pwd\r\n      }, \r\n      {headers: headers, observe: 'response', responseType: 'json'}\r\n    ).toPromise().then(function(res) {\r\n      return res;\r\n    }).catch(function(err){ \r\n      return err;\r\n    });\r\n  }\r\n}\r\n","<p>management-sales works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-management-sales',\r\n  templateUrl: './management-sales.component.html',\r\n  styleUrls: ['./management-sales.component.css']\r\n})\r\nexport class ManagementSalesComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>management-suppliers works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-management-suppliers',\r\n  templateUrl: './management-suppliers.component.html',\r\n  styleUrls: ['./management-suppliers.component.css']\r\n})\r\nexport class ManagementSuppliersComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"toolbar\" role=\"banner\">\r\n    <img\r\n        height=\"60px\"\r\n        alt=\"Logo\"\r\n        src=\"assets/images/cutie_plushie_logo_header.png\"\r\n        (click)=\"goHome()\"\r\n    />\r\n    \r\n    <div *ngIf=\"userIsLoggedIn()\" class=\"toolbar-options sales\" (click)=\"goTo($event)\">\r\n        <div class=\"sales\">\r\n            Ventas\r\n        </div>    \r\n    </div>\r\n\r\n    <div *ngIf=\"userIsLoggedIn()\" class=\"toolbar-options products\" (click)=\"goTo($event)\">\r\n        <div class=\"products\">\r\n            Productos\r\n        </div>    \r\n    </div>\r\n    \r\n    <div *ngIf=\"userIsLoggedIn() && userIsAdmin()\" class=\"toolbar-options suppliers\" (click)=\"goTo($event)\">\r\n        <div class=\"suppliers\">\r\n            Proveedores\r\n        </div>\r\n    </div>\r\n    \r\n    <div *ngIf=\"userIsLoggedIn() && userIsAdmin()\" class=\"toolbar-options distributors\" (click)=\"goTo($event)\">\r\n        <div class=\"distributors\">\r\n            Distribuidores\r\n        </div>\r\n    </div>\r\n    \r\n    <div *ngIf=\"userIsLoggedIn() && userIsAdmin()\" class=\"toolbar-options register\" (click)=\"goTo($event)\">\r\n        <div class=\"register\">\r\n            Registro de usuario\r\n        </div>\r\n    </div>\r\n\r\n    <div *ngIf=\"userIsLoggedIn()\" class=\"toolbar-options passwordchange\" (click)=\"goTo($event)\">\r\n        <div class=\"passwordchange\">\r\n            Cambiar contraseña\r\n        </div>\r\n    </div>\r\n\r\n    <div *ngIf=\"userIsLoggedIn()\" class=\"toolbar-options logout\" (click)=\"logout()\">\r\n        <div class=\"logout\">\r\n            Cerrar sesión\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<router-outlet></router-outlet>\r\n\r\n<div class=\"footer\">\r\n    Cutie Plushie Management System - 2020 ©\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-management',\r\n  templateUrl: './management.component.html',\r\n  styleUrls: ['./management.component.css']\r\n})\r\nexport class ManagementComponent implements OnInit {\r\n\r\n  constructor(\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    \r\n  }\r\n\r\n  goHome() {\r\n    this.router.navigate(['management']);\r\n  }\r\n\r\n  goTo(event: any) {\r\n    let target = event.target.className;\r\n    target = target.replace('toolbar-options ','');\r\n    this.router.navigate(['management/' + target]);\r\n  }\r\n\r\n  logout(){\r\n    localStorage.removeItem('cutie-plushie-token');\r\n    localStorage.removeItem('user-details');\r\n    this.router.navigate(['management/login']);\r\n  }\r\n\r\n  userIsLoggedIn(): boolean{\r\n    return localStorage.getItem('cutie-plushie-token') != null;\r\n  }\r\n\r\n  userIsAdmin(): boolean{\r\n    let details = localStorage.getItem('user-details');\r\n    if(details != null){\r\n      let user = JSON.parse(details);\r\n      if(user.userGroup == \"ADMIN\"){\r\n        return true;\r\n      }\r\n      return false\r\n    }\r\n    return false;\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}